[
    {
        "question_id": "DROP_train_nfl_2071_b4339bc2-cd23-45ef-b8fe-6ccfc99bb584",
        "question_text": "How many yards longer was Jay Feely's second field goal compared to his first?",
        "split": "train",
        "decomposition": "return yards of field goals of  Jay Feely ;return second of #1 ;return first of #1 ;return difference of #2 and  #3",
        "program": [
            "SELECT['yards of field goals of Jay Feely']",
            "PROJECT['second of #REF', '#1']",
            "AGGREGATE['min', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "PROJECT",
                "second of #REF",
                [
                    "SELECT",
                    "yards of field goals of Jay Feely"
                ]
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of field goals of Jay Feely"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(second of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Jay Feely)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Jay Feely)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(second of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Jay Feely)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Jay Feely)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    11,
                    12
                ],
                [
                    2,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    13,
                    14
                ],
                [],
                [
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "Jay",
                "Feely",
                "'s",
                "second",
                "field",
                "goal",
                "compared",
                "to",
                "his",
                "first",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [],
                [],
                [
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    4,
                    7,
                    9,
                    10,
                    13
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    11,
                    12
                ],
                [
                    2,
                    4,
                    5,
                    7,
                    8
                ],
                [
                    9,
                    10,
                    13,
                    14
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    14
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2286_f4777976-bbcc-414a-8c31-0574e4c872c1",
        "question_text": "Which players scored the shortest touchdown of the game?",
        "split": "train",
        "decomposition": "return the  shortest touchdown of the game ;return players that scored #1",
        "program": [
            "SELECT['the shortest touchdown of the game']",
            "PROJECT['players that scored #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "players that scored #REF",
            [
                "SELECT",
                "the shortest touchdown of the game"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(players that scored #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the shortest touchdown of the game)"
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(players that scored #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the shortest touchdown of the game)"
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    7
                ],
                [],
                [
                    6
                ],
                [
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "Which",
                "players",
                "scored",
                "the",
                "shortest",
                "touchdown",
                "of",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    4,
                    5
                ],
                [
                    3
                ],
                [],
                [],
                [
                    6,
                    7
                ],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    4,
                    5,
                    6,
                    7
                ],
                [],
                [],
                [],
                [
                    8,
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2835_937e6942-a76a-4a5e-9f02-10e97aa6983c",
        "question_text": "How many years longer is the male and female national average combined over those rates for the county?",
        "split": "train",
        "decomposition": "return national average for males in  years ;return national average for females in  years ;return county average for males in  years ;return county average for females in  years ;return the  sum of #1 and  #2 ;return the  sum of #3 and  #4 ;return the  difference of #5 and  #6",
        "program": [
            "SELECT['national average for males in years']",
            "SELECT['national average for females in years']",
            "SELECT['county average for males in years']",
            "SELECT['county average for females in years']",
            "ARITHMETIC['sum', '#1', '#2']",
            "ARITHMETIC['sum', '#3', '#4']",
            "ARITHMETIC['difference', '#5', '#6']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "ARITHMETIC_sum",
                [
                    "SELECT",
                    "national average for males in years"
                ],
                [
                    "SELECT",
                    "national average for females in years"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT",
                    "county average for males in years"
                ],
                [
                    "SELECT",
                    "county average for females in years"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(national average for males in years)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(national average for females in years)"
                    ]
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(county average for males in years)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(county average for females in years)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(national average for males in years)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(national average for females in years)"
                    ]
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(county average for males in years)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(county average for females in years)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "select",
            "arithmetic",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    4
                ],
                [],
                [],
                [],
                [],
                [
                    6,
                    8,
                    9
                ],
                [],
                [],
                [
                    7,
                    11
                ],
                [
                    10,
                    12,
                    13
                ],
                [],
                [],
                [
                    14
                ],
                [],
                [
                    18
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "longer",
                "is",
                "the",
                "male",
                "and",
                "female",
                "national",
                "average",
                "combined",
                "over",
                "those",
                "rates",
                "for",
                "the",
                "county",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2
                ],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    8
                ],
                [],
                [],
                [
                    9
                ],
                [],
                [
                    7,
                    11
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    14
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    18
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3,
                    4
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    6,
                    8
                ],
                [
                    9
                ],
                [],
                [],
                [],
                [
                    7,
                    11
                ],
                [],
                [
                    10,
                    14
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    18
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    17
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    10
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    17
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    17
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    17
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    17
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    17
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_265_a16a3dee-ebc3-4577-b9c9-e2067a37da26",
        "question_text": "Which quarterback threw the longer touchdown in the first quarter?",
        "split": "train",
        "decomposition": "return touchdowns in  the  first quarter ;return the  longer of #1 ;return the  quarterback that threw #2",
        "program": [
            "SELECT['touchdowns in the first quarter']",
            "PROJECT['the longer of #REF', '#1']",
            "PROJECT['the quarterback that threw #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "the quarterback that threw #REF",
            [
                "PROJECT",
                "the longer of #REF",
                [
                    "SELECT",
                    "touchdowns in the first quarter"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the quarterback that threw #REF)",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(the longer of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns in the first quarter)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the quarterback that threw #REF)",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(the longer of #REF)",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(touchdowns)"
                    ],
                    "GET_QUESTION_SPAN(in the first quarter)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    7
                ],
                [],
                [
                    6,
                    8,
                    9
                ],
                [],
                [],
                [
                    10
                ]
            ],
            "question_tokens": [
                "Which",
                "quarterback",
                "threw",
                "the",
                "longer",
                "touchdown",
                "in",
                "the",
                "first",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    5
                ],
                [],
                [
                    4
                ],
                [
                    6,
                    9
                ],
                [],
                [],
                [],
                [],
                [
                    8
                ],
                [],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2
                ],
                [
                    4,
                    5
                ],
                [],
                [],
                [
                    6,
                    8,
                    9
                ],
                [],
                [],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    9
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1866_be4943e7-8a3c-4d3f-a80c-f04168653fbd",
        "question_text": "How many in percent of the county according to the census of 2000 weren't english?",
        "split": "train",
        "decomposition": "return percent of the  county that was  english according to the census of  2000 ;return the  difference of 100 percent and  #1",
        "program": [
            "SELECT['percent of the county that was english according to the census of 2000']",
            "PROJECT['the difference of 100 percent and #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "the difference of 100 percent and #REF",
            [
                "SELECT",
                "percent of the county that was english according to the census of 2000"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the difference of 100 percent and #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(percent of the county that was english according to the census of 2000)"
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            "SELECT_IMPLICIT_NUM(100)",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent of the county that was english according to the census of 2000)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    3,
                    4,
                    6,
                    7,
                    10,
                    11,
                    12,
                    13,
                    14
                ],
                [
                    8
                ],
                [
                    2,
                    5,
                    9
                ],
                [
                    15,
                    16
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "in",
                "percent",
                "of",
                "the",
                "county",
                "according",
                "to",
                "the",
                "census",
                "of",
                "2000",
                "were",
                "n't",
                "english",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    7,
                    10,
                    12,
                    14
                ],
                [
                    6
                ],
                [
                    8
                ],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    15
                ],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    3,
                    4,
                    6,
                    7,
                    10,
                    11,
                    12,
                    13,
                    14
                ],
                [],
                [
                    8
                ],
                [],
                [
                    15
                ],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    6
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    12
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    15
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2286_019e68af-e15d-40d8-b190-a6f82cc7add0",
        "question_text": "Which state has the largest percentage of Catholics, Jalisco  or Tabasco?",
        "split": "train",
        "decomposition": "return the  percentage of Catholics in  Jalisco ;return the  percentage of Catholics in  Tabasco ;return which is largest of #1 ,  #2",
        "program": [
            "SELECT['the percentage of Catholics in Jalisco']",
            "SELECT['the percentage of Catholics in Tabasco']",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "the percentage of Catholics in Jalisco"
            ],
            [
                "SELECT",
                "the percentage of Catholics in Tabasco"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the percentage of Catholics in Jalisco)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(the percentage of Catholics in Tabasco)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the percentage of Catholics in Jalisco)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(the percentage of Catholics in Tabasco)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    4,
                    5,
                    8,
                    10
                ],
                [
                    3,
                    6
                ],
                [
                    1,
                    7
                ],
                [
                    9
                ],
                [
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "Which",
                "state",
                "has",
                "the",
                "largest",
                "percentage",
                "of",
                "Catholics",
                ",",
                "Jalisco",
                "or",
                "Tabasco",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    2,
                    4
                ],
                [],
                [
                    3
                ],
                [
                    1,
                    6
                ],
                [
                    7
                ],
                [
                    5
                ],
                [
                    8
                ],
                [
                    10
                ],
                [
                    9,
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    8,
                    10
                ],
                [
                    2,
                    4,
                    5
                ],
                [],
                [],
                [
                    1,
                    7
                ],
                [
                    9
                ],
                [],
                [
                    11,
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    11
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    11
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    11
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_564_75584548-cc2f-4701-a5d9-01082f8a2946",
        "question_text": "Which animals did the Burmese army have more of, horses or elephants?",
        "split": "train",
        "decomposition": "return horses of the  Burmese army ;return elephants of the  Burmese army ;return number of  #1 ;return number of  #2 ;return which is more of #3 ,  #4",
        "program": [
            "SELECT['horses of the Burmese army']",
            "SELECT['elephants of the Burmese army']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "horses of the Burmese army"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "elephants of the Burmese army"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(horses of the Burmese army)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(elephants of the Burmese army)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(horses of the Burmese army)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(elephants of the Burmese army)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    7,
                    9,
                    11
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [
                    10
                ],
                [
                    8
                ],
                [
                    12,
                    13
                ]
            ],
            "question_tokens": [
                "Which",
                "animals",
                "did",
                "the",
                "Burmese",
                "army",
                "have",
                "more",
                "of",
                ",",
                "horses",
                "or",
                "elephants",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    1
                ],
                [
                    0,
                    7
                ],
                [
                    2
                ],
                [
                    4,
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [
                    8,
                    9
                ],
                [
                    11
                ],
                [
                    10,
                    12
                ],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    5,
                    9,
                    11
                ],
                [
                    6,
                    7
                ],
                [
                    4
                ],
                [],
                [],
                [],
                [
                    10,
                    12
                ],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    12
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    12
                ],
                [
                    7,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    12
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_970_7802039f-afdc-4aad-808d-aa8e969d6e95",
        "question_text": "How many years after his promotion was he wounded?",
        "split": "train",
        "decomposition": "return year of his promotion ;return year he was  wounded ;return difference of #1 and  #2",
        "program": [
            "SELECT['year of his promotion']",
            "SELECT['year he was wounded']",
            "ARITHMETIC['difference', '#1', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "year of his promotion"
            ],
            [
                "SELECT",
                "year he was wounded"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year of his promotion)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year he was wounded)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Two_Events",
            [
                "SELECT",
                "GET_QUESTION_SPAN(year of his promotion)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(year he was wounded)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    7
                ],
                [
                    4
                ],
                [
                    5
                ],
                [
                    6
                ],
                [
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "after",
                "his",
                "promotion",
                "was",
                "he",
                "wounded",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3
                ],
                [],
                [],
                [],
                [
                    4,
                    5
                ],
                [
                    6
                ],
                [
                    7
                ],
                [],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3
                ],
                [
                    6,
                    7
                ],
                [
                    4
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    8,
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2092_a2cb3a0b-fed7-42a4-86ff-e989ea715de5",
        "question_text": "How many yards longer was Sam Bradford's longest touchdown pass than Bruce Gradkowski's only touchdown pass?",
        "split": "train",
        "decomposition": "return yards of touchdown passes of  Sam Bradford ;return the  longest of #1 ;return yards of the  only touchdown pass of  Bruce Gradkowski ;return the  difference of #2 and  #3",
        "program": [
            "SELECT['yards of touchdown passes of Sam Bradford']",
            "AGGREGATE['max', '#1']",
            "SELECT['yards of the only touchdown pass of Bruce Gradkowski']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of touchdown passes of Sam Bradford"
                ]
            ],
            [
                "SELECT",
                "yards of the only touchdown pass of Bruce Gradkowski"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes of Sam Bradford)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of the only touchdown pass of Bruce Gradkowski)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes of Sam Bradford)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of the only touchdown pass of Bruce Gradkowski)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    7,
                    8,
                    9,
                    10,
                    14,
                    16,
                    17
                ],
                [
                    6
                ],
                [
                    12,
                    13
                ],
                [
                    11
                ],
                [
                    15
                ],
                [
                    18
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "Sam",
                "Bradford",
                "'s",
                "longest",
                "touchdown",
                "pass",
                "than",
                "Bruce",
                "Gradkowski",
                "'s",
                "only",
                "touchdown",
                "pass",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    7,
                    8,
                    9,
                    10,
                    16,
                    17
                ],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [
                    12,
                    13
                ],
                [],
                [
                    11
                ],
                [],
                [],
                [
                    15
                ],
                [],
                [],
                [
                    18
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [
                    5
                ],
                [
                    2,
                    4
                ],
                [
                    7,
                    8,
                    9,
                    10,
                    14,
                    16,
                    17
                ],
                [
                    6
                ],
                [
                    12
                ],
                [
                    13
                ],
                [],
                [
                    11
                ],
                [
                    15
                ],
                [],
                [
                    18
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    17
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    17
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    17
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_387_cb173676-35e0-4658-bdec-dc6e96899543",
        "question_text": "How many yards longer was Jeff Wilkins's longest field goal than his shortest?",
        "split": "train",
        "decomposition": "return yards of field goals of  Jeff Wilkins ;return longest of #1 ;return shortest of #1 ;return difference of #2 and  #3",
        "program": [
            "SELECT['yards of field goals of Jeff Wilkins']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['min', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of field goals of Jeff Wilkins"
                ]
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of field goals of Jeff Wilkins"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Jeff Wilkins)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Jeff Wilkins)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Jeff Wilkins)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Jeff Wilkins)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    7,
                    8
                ],
                [
                    5
                ],
                [
                    6
                ],
                [
                    11
                ],
                [
                    9,
                    10,
                    12,
                    13
                ],
                [],
                [
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "Jeff",
                "Wilkins",
                "'s",
                "longest",
                "field",
                "goal",
                "than",
                "his",
                "shortest",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    8
                ],
                [
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    7,
                    9,
                    10,
                    12,
                    13
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [
                    5
                ],
                [],
                [
                    2,
                    4
                ],
                [
                    7,
                    8
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    9,
                    10,
                    12,
                    13
                ],
                [],
                [],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    13
                ],
                [
                    5,
                    13
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1980_712b937d-40e3-43a6-9124-c440233c4a6f",
        "question_text": "How many years have passed since the last time the Giants won at Seattle?",
        "split": "train",
        "decomposition": "return the  last time the Giants won at Seattle ;return years that have passed since #1 ;return number of  #2",
        "program": [
            "SELECT['the last time the Giants won at Seattle']",
            "PROJECT['years that have passed since #REF', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "years that have passed since #REF",
                [
                    "SELECT",
                    "the last time the Giants won at Seattle"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(years that have passed since #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the last time the Giants won at Seattle)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(years that have passed since #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the last time the Giants won at Seattle)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    4
                ],
                [
                    2,
                    5,
                    6,
                    7,
                    9
                ],
                [
                    8
                ],
                [
                    3,
                    10,
                    11,
                    12
                ],
                [
                    13,
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "have",
                "passed",
                "since",
                "the",
                "last",
                "time",
                "the",
                "Giants",
                "won",
                "at",
                "Seattle",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    4
                ],
                [
                    2,
                    5
                ],
                [
                    7
                ],
                [],
                [],
                [
                    8,
                    9,
                    10,
                    11
                ],
                [
                    12
                ],
                [],
                [
                    13
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3
                ],
                [
                    4
                ],
                [
                    2,
                    5
                ],
                [
                    6,
                    7,
                    8,
                    9
                ],
                [],
                [
                    10,
                    11
                ],
                [
                    12
                ],
                [
                    13,
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    13
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    13
                ],
                [
                    5,
                    13
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    13
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    13
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1463_de6b2163-b7ff-4b17-97f3-0e06379cd837",
        "question_text": "How many yards difference was Mason Crosby\u2019s first field goal compared to his second?",
        "split": "train",
        "decomposition": "return yards of field goals of  Mason Crosby ;return first of #1 ;return second of #1 ;return difference of #2 and  #3",
        "program": [
            "SELECT['yards of field goals of Mason Crosby']",
            "AGGREGATE['min', '#1']",
            "PROJECT['second of #REF', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of field goals of Mason Crosby"
                ]
            ],
            [
                "PROJECT",
                "second of #REF",
                [
                    "SELECT",
                    "yards of field goals of Mason Crosby"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Mason Crosby)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(second of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Mason Crosby)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Mason Crosby)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(second of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Mason Crosby)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [
                    5
                ],
                [
                    2,
                    4,
                    8,
                    9,
                    10,
                    13,
                    14
                ],
                [
                    6
                ],
                [],
                [
                    7,
                    11,
                    12
                ],
                [],
                [],
                [],
                [
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "difference",
                "was",
                "Mason",
                "Crosby",
                "\u2019s",
                "first",
                "field",
                "goal",
                "compared",
                "to",
                "his",
                "second",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [],
                [],
                [],
                [
                    2,
                    4,
                    9,
                    10,
                    13
                ],
                [],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [
                    7,
                    11
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    14
                ],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [
                    5
                ],
                [],
                [
                    2,
                    4,
                    14
                ],
                [
                    8,
                    9,
                    10,
                    13
                ],
                [],
                [],
                [],
                [
                    6
                ],
                [
                    7,
                    11,
                    12
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    14
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2084_6fad20c1-add1-4102-8ed3-ff50babd5746",
        "question_text": "Which did Marino accomplish more of, touchdowns or interceptions?",
        "split": "train",
        "decomposition": "return touchdowns that Marino accomplish ;return interceptions that Marino accomplish ;return the number of  #1 ;return the number of  #2 ;return which is  more of  #3 , #4",
        "program": [
            "SELECT['touchdowns that Marino accomplish']",
            "SELECT['interceptions that Marino accomplish']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdowns that Marino accomplish"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "interceptions that Marino accomplish"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdowns that Marino accomplish)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(interceptions that Marino accomplish)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdowns that Marino accomplish)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(interceptions that Marino accomplish)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    3,
                    4,
                    6,
                    8,
                    9
                ],
                [
                    1,
                    5
                ],
                [
                    7
                ],
                [],
                [
                    10
                ]
            ],
            "question_tokens": [
                "Which",
                "did",
                "Marino",
                "accomplish",
                "more",
                "of",
                ",",
                "touchdowns",
                "or",
                "interceptions",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    2,
                    4
                ],
                [
                    1
                ],
                [
                    3
                ],
                [
                    5
                ],
                [],
                [],
                [
                    6
                ],
                [
                    8,
                    9
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    6,
                    8
                ],
                [
                    2,
                    3,
                    4,
                    7,
                    9
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    9
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2600_a2786dff-8aca-4693-943a-e8b50c3d1914",
        "question_text": "How many percent were either Asian, Pacific Islander or Multiracial?",
        "split": "train",
        "decomposition": "return percent that were Asian ;return percent that were Pacific Islander ;return percent that were Multiracial ;return sum of #1 and  #2 ;return sum of #3 and  #4",
        "program": [
            "SELECT['percent that were Asian']",
            "SELECT['percent that were Pacific Islander']",
            "SELECT['percent that were Multiracial']",
            "ARITHMETIC['sum', '#1', '#2']",
            "ARITHMETIC['sum', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT",
                "percent that were Multiracial"
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT",
                    "percent that were Asian"
                ],
                [
                    "SELECT",
                    "percent that were Pacific Islander"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent that were Multiracial)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percent that were Asian)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percent that were Pacific Islander)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent that were Multiracial)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percent that were Asian)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percent that were Pacific Islander)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2
                ],
                [
                    1
                ],
                [],
                [
                    5
                ],
                [
                    3,
                    4,
                    6
                ],
                [],
                [],
                [
                    7,
                    8,
                    9
                ],
                [],
                [],
                [
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "percent",
                "were",
                "either",
                "Asian",
                ",",
                "Pacific",
                "Islander",
                "or",
                "Multiracial",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    3,
                    4,
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    7,
                    8
                ],
                [],
                [],
                [],
                [
                    9
                ],
                [],
                [],
                [
                    10
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    3,
                    4,
                    6
                ],
                [],
                [],
                [],
                [
                    7
                ],
                [
                    8
                ],
                [],
                [],
                [],
                [
                    9
                ],
                [
                    10,
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1730_fd8a49b5-0868-490a-a102-df9be413e9be",
        "question_text": "How many more people, in terms of percentage, were in the two biggest age groups combined compared to the two smallest combined?",
        "split": "train",
        "decomposition": "return the  two  biggest age groups in  terms of percentages ;return the  two  smallest age groups in  terms of percentages ;return the  sum of #1 ;return the  sum of #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['the two biggest age groups in terms of percentages']",
            "SELECT['the two smallest age groups in terms of percentages']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "the two biggest age groups in terms of percentages"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "the two smallest age groups in terms of percentages"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the two biggest age groups in terms of percentages)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the two smallest age groups in terms of percentages)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the two biggest age groups in terms of percentages)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the two smallest age groups in terms of percentages)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    6,
                    8,
                    18
                ],
                [
                    10
                ],
                [
                    4,
                    5,
                    7,
                    9,
                    11,
                    12,
                    15
                ],
                [
                    14
                ],
                [
                    13,
                    17,
                    21,
                    23
                ],
                [
                    16,
                    19,
                    20,
                    22
                ],
                [
                    24
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "people",
                ",",
                "in",
                "terms",
                "of",
                "percentage",
                ",",
                "were",
                "in",
                "the",
                "two",
                "biggest",
                "age",
                "groups",
                "combined",
                "compared",
                "to",
                "the",
                "two",
                "smallest",
                "combined",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    6,
                    8
                ],
                [],
                [],
                [],
                [
                    9
                ],
                [
                    11
                ],
                [],
                [
                    14
                ],
                [
                    15
                ],
                [
                    17,
                    23
                ],
                [
                    16
                ],
                [],
                [
                    21,
                    22
                ],
                [],
                [],
                [
                    24
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    6
                ],
                [
                    2,
                    3,
                    8
                ],
                [
                    10
                ],
                [
                    13
                ],
                [],
                [],
                [],
                [
                    14,
                    16,
                    18
                ],
                [
                    17,
                    21,
                    23
                ],
                [
                    22
                ],
                [],
                [
                    24
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    23
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    17
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    16
                ],
                [
                    12,
                    17
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    23
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    19,
                    23
                ],
                [
                    20,
                    20
                ],
                [
                    20,
                    23
                ],
                [
                    21,
                    21
                ],
                [
                    22,
                    22
                ],
                [
                    23,
                    23
                ],
                [
                    24,
                    24
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1169_5b511a54-9fb4-4b67-b9b2-d9d50eeb63b8",
        "question_text": "How many yards was the shortest scoring play of the game that resulted in a td?",
        "split": "train",
        "decomposition": "return yards of plays that resulted in  tds ;return the  shortest of #1",
        "program": [
            "SELECT['yards of plays that resulted in tds']",
            "AGGREGATE['min', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "yards of plays that resulted in tds"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of plays that resulted in tds)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of plays that resulted in tds)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    5,
                    6
                ],
                [
                    4,
                    8,
                    9,
                    12,
                    13,
                    14
                ],
                [
                    7,
                    10,
                    11,
                    15,
                    16
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "the",
                "shortest",
                "scoring",
                "play",
                "of",
                "the",
                "game",
                "that",
                "resulted",
                "in",
                "a",
                "td",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    5,
                    6
                ],
                [],
                [
                    8,
                    9,
                    12
                ],
                [
                    7,
                    11,
                    13,
                    14,
                    15
                ],
                [
                    10
                ],
                [],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    6,
                    7
                ],
                [
                    5
                ],
                [
                    8,
                    11,
                    12,
                    13,
                    14
                ],
                [
                    15
                ],
                [
                    10,
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    15
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    15
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    15
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    15
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    15
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    15
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_96_f470e81a-623b-46c9-b0af-f9f509eebcef",
        "question_text": "How many years was the bridge under construction?",
        "split": "train",
        "decomposition": "return years when  the  bridge was  under construction ;return the  number of  #1",
        "program": [
            "SELECT['years when the bridge was under construction']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "years when the bridge was under construction"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years when the bridge was under construction)"
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Single_Event",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years when the bridge was under construction)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    4,
                    5,
                    6
                ],
                [
                    7,
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "was",
                "the",
                "bridge",
                "under",
                "construction",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    6
                ],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3
                ],
                [],
                [
                    4,
                    5,
                    6
                ],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    7
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1611_86d70d1f-8431-47e0-b07f-92a3e233bc67",
        "question_text": "How many receptions did Mason have?",
        "split": "train",
        "decomposition": "return receptions of Mason ;return number of #1",
        "program": [
            "SELECT['receptions of Mason']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "receptions of Mason"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(receptions of Mason)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(receptions of Mason)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [
                    6
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "receptions",
                "did",
                "Mason",
                "have",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [
                    4
                ],
                [
                    5
                ],
                [
                    6
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    4
                ],
                [
                    2,
                    3,
                    5
                ],
                [],
                [],
                [
                    6
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1454_34c22d2f-1581-491d-9c82-120f3859f49a",
        "question_text": "How many yards was Willis McGahee's first touchdown run?",
        "split": "dev",
        "decomposition": "return yards of touchdown run of  Willis McGahee ;return first of #1",
        "program": [
            "SELECT['yards of touchdown run of Willis McGahee']",
            "AGGREGATE['min', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "yards of touchdown run of Willis McGahee"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdown run of Willis McGahee)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdown run of Willis McGahee)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9
                ],
                [],
                [
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "Willis",
                "McGahee",
                "'s",
                "first",
                "touchdown",
                "run",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    6,
                    8,
                    9
                ],
                [
                    4,
                    5
                ],
                [],
                [
                    7
                ],
                [],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    8
                ],
                [
                    7,
                    9
                ],
                [],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_246_6c756536-24bf-463f-b41d-814a89d8ae3d",
        "question_text": "In 1762, the population of the Dutch colony of Berbice included how many slaves total?",
        "split": "train",
        "decomposition": "return slaves that are included in  the  population of the Dutch colony of  Berbice in 1762 ;return the  number of  #1",
        "program": [
            "SELECT['slaves that are included in the population of the Dutch colony of Berbice in 1762']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "slaves that are included in the population of the Dutch colony of Berbice in 1762"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(slaves that are included in the population of the Dutch colony of Berbice in 1762)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "SELECT",
                "GET_QUESTION_SPAN(slaves that are included in the population of the Dutch colony of Berbice in 1762)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    4,
                    12,
                    13,
                    14,
                    15
                ],
                [
                    0,
                    2,
                    3,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11
                ],
                [
                    16
                ]
            ],
            "question_tokens": [
                "In",
                "1762",
                ",",
                "the",
                "population",
                "of",
                "the",
                "Dutch",
                "colony",
                "of",
                "Berbice",
                "included",
                "how",
                "many",
                "slaves",
                "total",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1,
                    2
                ],
                [
                    4
                ],
                [
                    12,
                    13,
                    15
                ],
                [
                    5,
                    6,
                    7,
                    8,
                    9,
                    10
                ],
                [
                    11
                ],
                [
                    14
                ],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    12,
                    13
                ],
                [
                    14,
                    15
                ],
                [
                    4
                ],
                [
                    2,
                    3,
                    5,
                    6,
                    7,
                    9,
                    10,
                    11
                ],
                [
                    8
                ],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    10
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    15
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    12,
                    14
                ],
                [
                    12,
                    15
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_924_6d056194-d9fa-4d36-a0c6-5bf08b15c25b",
        "question_text": "how many yards did Bree complete and pass to Moore?",
        "split": "train",
        "decomposition": "return yards that Bree complete passes to Moore ;return the  sum of #1",
        "program": [
            "SELECT['yards that Bree complete passes to Moore']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "yards that Bree complete passes to Moore"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards that Bree complete passes to Moore)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards that Bree complete passes to Moore)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [
                    8,
                    9
                ],
                [
                    6,
                    7,
                    10
                ]
            ],
            "question_tokens": [
                "how",
                "many",
                "yards",
                "did",
                "Bree",
                "complete",
                "and",
                "pass",
                "to",
                "Moore",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    4
                ],
                [],
                [
                    6
                ],
                [
                    7,
                    8
                ],
                [
                    5,
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [
                    6,
                    8,
                    9
                ],
                [
                    7,
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2214_a7132f9a-b8b0-43c4-a1d7-ec014e3e14aa",
        "question_text": "How many prime ministers belonging to the DLP were in office during the month of September?",
        "split": "train",
        "decomposition": "return the  prime ministers belonging to the DLP ;return #1 that were in  office during the  month of September ;return the  number of  #2",
        "program": [
            "SELECT['the prime ministers belonging to the DLP']",
            "FILTER['#1', 'that were in office during the month of September']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "the prime ministers belonging to the DLP"
                ],
                "that were in office during the month of September"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the prime ministers belonging to the DLP)"
                ],
                "GET_QUESTION_SPAN(that were in office during the month of September)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the prime ministers belonging to the DLP)"
                ],
                "GET_QUESTION_SPAN(that were in office during the month of September)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    8
                ],
                [
                    4,
                    7,
                    9,
                    11
                ],
                [
                    5,
                    6,
                    12,
                    13,
                    14
                ],
                [
                    10
                ],
                [
                    15,
                    16
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "prime",
                "ministers",
                "belonging",
                "to",
                "the",
                "DLP",
                "were",
                "in",
                "office",
                "during",
                "the",
                "month",
                "of",
                "September",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [
                    3
                ],
                [
                    4
                ],
                [
                    7,
                    8
                ],
                [],
                [
                    9,
                    10,
                    11
                ],
                [],
                [
                    13,
                    14
                ],
                [
                    15
                ],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    11
                ],
                [
                    7
                ],
                [
                    9
                ],
                [
                    5,
                    10,
                    13
                ],
                [],
                [
                    15
                ],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    7
                ],
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    15
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    15
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    12,
                    15
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    15
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2420_2bc848b0-fd9e-4129-8c3e-4eed43929ed0",
        "question_text": "How many percent of the surface area is not used for pastures?",
        "split": "train",
        "decomposition": "return percent of the  surface area that is used for pastures ;return difference of 100 and  #1",
        "program": [
            "SELECT['percent of the surface area that is used for pastures']",
            "PROJECT['difference of 100 and #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "difference of 100 and #REF",
            [
                "SELECT",
                "percent of the surface area that is used for pastures"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(difference of 100 and #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(percent of the surface area that is used for pastures)"
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            "SELECT_IMPLICIT_NUM(100)",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent of the surface area that is used for pastures)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    7
                ],
                [
                    2,
                    3,
                    5,
                    6,
                    8
                ],
                [],
                [
                    4,
                    9,
                    10
                ],
                [
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "percent",
                "of",
                "the",
                "surface",
                "area",
                "is",
                "not",
                "used",
                "for",
                "pastures",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    8
                ],
                [],
                [
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    9
                ],
                [
                    10
                ],
                [],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    7
                ],
                [
                    2,
                    3,
                    5,
                    6,
                    8
                ],
                [],
                [],
                [
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_962_5e860d7c-02b9-4f51-b4bb-140287832d30",
        "question_text": "Which happened last, Cornish Nationalist Party's campaign for Cornish independence or Constituency?",
        "split": "train",
        "decomposition": "return when  was  the  Cornish  Nationalist Party 's campaign for Cornish independence ;return when  was  the  Cornish  Nationalist Party 's campaign for Constituency ;return which was  last of #1 ,  #2",
        "program": [
            "SELECT[\"when was the Cornish Nationalist Party 's campaign for Cornish independence\"]",
            "SELECT[\"when was the Cornish Nationalist Party 's campaign for Constituency\"]",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "when was the Cornish Nationalist Party 's campaign for Cornish independence"
            ],
            [
                "SELECT",
                "when was the Cornish Nationalist Party 's campaign for Constituency"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the Cornish Nationalist Party 's campaign for Cornish independence)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the Cornish Nationalist Party 's campaign for Constituency)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the Cornish Nationalist Party 's campaign for Cornish independence)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the Cornish Nationalist Party 's campaign for Constituency)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    10,
                    12
                ],
                [
                    6,
                    7,
                    8
                ],
                [
                    11
                ],
                [
                    9
                ],
                [
                    13,
                    14
                ]
            ],
            "question_tokens": [
                "Which",
                "happened",
                "last",
                ",",
                "Cornish",
                "Nationalist",
                "Party",
                "'s",
                "campaign",
                "for",
                "Cornish",
                "independence",
                "or",
                "Constituency",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3
                ],
                [],
                [
                    4,
                    5
                ],
                [
                    6,
                    7,
                    8
                ],
                [],
                [],
                [
                    9,
                    10
                ],
                [
                    12
                ],
                [
                    11,
                    13
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    3,
                    12
                ],
                [
                    1,
                    2,
                    4,
                    5,
                    10
                ],
                [
                    7,
                    8
                ],
                [
                    6,
                    9
                ],
                [],
                [],
                [
                    11
                ],
                [
                    13,
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    13
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    13
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_2191_bc22e45a-cda4-46dd-a1fa-5b982f95417a",
        "question_text": "How many more field goals did Dan Carpenter convert than Matt Prater?",
        "split": "dev",
        "decomposition": "return field goals Dan Carpenter did convert ;return field goals Matt Prater did convert ;return number of #1 ;return number of #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['field goals Dan Carpenter did convert']",
            "SELECT['field goals Matt Prater did convert']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals Dan Carpenter did convert"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals Matt Prater did convert"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals Dan Carpenter did convert)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals Matt Prater did convert)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals Dan Carpenter did convert)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals Matt Prater did convert)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    9
                ],
                [
                    3,
                    4,
                    5
                ],
                [],
                [
                    6,
                    7
                ],
                [
                    8,
                    10,
                    11
                ],
                [],
                [
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "field",
                "goals",
                "did",
                "Dan",
                "Carpenter",
                "convert",
                "than",
                "Matt",
                "Prater",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4
                ],
                [],
                [],
                [],
                [],
                [
                    6,
                    7,
                    8
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [
                    10
                ],
                [],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [
                    3,
                    4,
                    5
                ],
                [],
                [
                    6
                ],
                [
                    7
                ],
                [
                    9
                ],
                [
                    8,
                    10,
                    11
                ],
                [],
                [],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1095_3a8ad6dc-aaa1-4110-b5eb-23563a43ad58",
        "question_text": "How many incomplete passes did Cassel have on his first drive?",
        "split": "train",
        "decomposition": "return incomplete passes of Cassel ;return #1 on his first drive ;return number of  #2",
        "program": [
            "SELECT['incomplete passes of Cassel']",
            "FILTER['#1', 'on his first drive']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "incomplete passes of Cassel"
                ],
                "on his first drive"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(incomplete passes of Cassel)"
                ],
                "GET_QUESTION_SPAN(on his first drive)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(incomplete passes of Cassel)"
                ],
                "GET_QUESTION_SPAN(on his first drive)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [
                    9
                ],
                [
                    7,
                    8
                ],
                [],
                [
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "incomplete",
                "passes",
                "did",
                "Cassel",
                "have",
                "on",
                "his",
                "first",
                "drive",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    4
                ],
                [
                    5
                ],
                [
                    6
                ],
                [
                    7
                ],
                [
                    8
                ],
                [
                    9
                ],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    4,
                    6
                ],
                [],
                [
                    9
                ],
                [
                    7,
                    8
                ],
                [],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_2474_6f579268-78fa-4887-84ea-2ee4ba68f8cf",
        "question_text": "Who scored more touchdowns, Rice or Craig?",
        "split": "dev",
        "decomposition": "return number of  touchdowns Rice scored ;return number of  touchdowns Craig scored ;return which  is  highest of #1 ,  #2",
        "program": [
            "SELECT['number of touchdowns Rice scored']",
            "SELECT['number of touchdowns Craig scored']",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "number of touchdowns Rice scored"
            ],
            [
                "SELECT",
                "number of touchdowns Craig scored"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(number of touchdowns Rice scored)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(number of touchdowns Craig scored)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(number of touchdowns Rice scored)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(number of touchdowns Craig scored)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4,
                    6
                ],
                [],
                [
                    3,
                    5
                ],
                [],
                [
                    7,
                    8
                ]
            ],
            "question_tokens": [
                "Who",
                "scored",
                "more",
                "touchdowns",
                ",",
                "Rice",
                "or",
                "Craig",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [],
                [],
                [
                    3
                ],
                [
                    5
                ],
                [],
                [
                    4,
                    6
                ],
                [],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    4,
                    6
                ],
                [
                    2
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    7
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    3
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_942_efa429be-0df4-4f29-9f35-2c31be9b073b",
        "question_text": "Are there more males or females in town?",
        "split": "train",
        "decomposition": "return males in town ;return females in town ;return number of #1 ;return number of #2 ;return which  is  highest of #3 , #4",
        "program": [
            "SELECT['males in town']",
            "SELECT['females in town']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "males in town"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "females in town"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(males in town)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(females in town)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(males in town)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(females in town)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [],
                [
                    6,
                    7
                ],
                [
                    8
                ]
            ],
            "question_tokens": [
                "Are",
                "there",
                "more",
                "males",
                "or",
                "females",
                "in",
                "town",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    4
                ],
                [
                    3,
                    5
                ],
                [],
                [],
                [
                    6
                ],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    4,
                    7
                ],
                [
                    0,
                    1,
                    2,
                    3,
                    5
                ],
                [],
                [],
                [],
                [
                    6
                ],
                [],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1816_e74a1ce5-38f2-4b0d-8e93-ccf685104776",
        "question_text": "Which commuter group had more people, those who commuted by driving alone or those who commuted via carpool?",
        "split": "train",
        "decomposition": "return people who  commuted  by driving alone ;return people who  commuted via carpool ;return the  number of  #1 ;return the  number of  #2 ;return which is more of #3 ,  #4",
        "program": [
            "SELECT['people who commuted by driving alone']",
            "SELECT['people who commuted via carpool']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "people who commuted by driving alone"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "people who commuted via carpool"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(people who commuted by driving alone)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(people who commuted via carpool)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(people who commuted by driving alone)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(people who commuted via carpool)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    13,
                    14
                ],
                [
                    8,
                    9
                ],
                [
                    10,
                    11,
                    12
                ],
                [
                    15,
                    16
                ],
                [
                    17,
                    18,
                    19
                ]
            ],
            "question_tokens": [
                "Which",
                "commuter",
                "group",
                "had",
                "more",
                "people",
                ",",
                "those",
                "who",
                "commuted",
                "by",
                "driving",
                "alone",
                "or",
                "those",
                "who",
                "commuted",
                "via",
                "carpool",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [
                    8
                ],
                [
                    6,
                    7
                ],
                [
                    10
                ],
                [
                    9,
                    11,
                    12
                ],
                [
                    15
                ],
                [
                    13,
                    14
                ],
                [],
                [
                    16,
                    17,
                    18
                ],
                [
                    19
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    8,
                    15
                ],
                [
                    2,
                    3,
                    6,
                    13
                ],
                [
                    4,
                    5,
                    7,
                    14
                ],
                [],
                [
                    9,
                    10,
                    11
                ],
                [],
                [
                    12
                ],
                [
                    16,
                    17,
                    18
                ],
                [
                    19
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    18
                ],
                [
                    4,
                    18
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    18
                ],
                [
                    8,
                    12
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    18
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    18
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    18
                ],
                [
                    17,
                    17
                ],
                [
                    17,
                    18
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2365_629c1dcf-3d55-4bce-9311-170215a7a9e4",
        "question_text": "who was in the lead at halftime?",
        "split": "train",
        "decomposition": "return who  was  in  the  lead at halftime",
        "program": [
            "SELECT['who was in the lead at halftime']"
        ],
        "nested_expression": [
            "SELECT",
            "who was in the lead at halftime"
        ],
        "typed_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(who was in the lead at halftime)"
        ],
        "drop_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(who was in the lead at halftime)"
        ],
        "operators": [
            "select"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [
                    6,
                    7
                ]
            ],
            "question_tokens": [
                "who",
                "was",
                "in",
                "the",
                "lead",
                "at",
                "halftime",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4
                ],
                [
                    5
                ],
                [
                    6,
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    4
                ],
                [
                    2,
                    3
                ],
                [
                    5
                ],
                [
                    6,
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    4
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_2270_0ec43a88-b174-4aa9-ba47-8fe1be941999",
        "question_text": "How many people live in Lausanne?",
        "split": "dev",
        "decomposition": "return people that live in  Lausanne ;return number of  #1",
        "program": [
            "SELECT['people that live in Lausanne']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "people that live in Lausanne"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(people that live in Lausanne)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "SELECT",
                "GET_QUESTION_SPAN(people that live in Lausanne)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    6
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "people",
                "live",
                "in",
                "Lausanne",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3
                ],
                [],
                [],
                [
                    4
                ],
                [
                    5
                ],
                [
                    6
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    3
                ],
                [
                    4
                ],
                [
                    5
                ],
                [
                    6
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1743_8aa72066-46f1-4fa2-ba5a-8fb6b85e22f4",
        "question_text": "How many yards of differential were there between Nick Folk's first field goal and the first rushing touchdown of the game?",
        "split": "dev",
        "decomposition": "return field goals from  Nick Folk ;return the  first of #1 ;return the  yards of #2 ;return rushing touchdowns of the  game ;return the  first of #4 ;return the  yards of #5 ;return the  difference of #3 and  #6",
        "program": [
            "SELECT['field goals from Nick Folk']",
            "AGGREGATE['min', '#1']",
            "PROJECT['the yards of #REF', '#2']",
            "SELECT['rushing touchdowns of the game']",
            "AGGREGATE['min', '#4']",
            "PROJECT['the yards of #REF', '#5']",
            "ARITHMETIC['difference', '#3', '#6']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "PROJECT",
                "the yards of #REF",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "field goals from Nick Folk"
                    ]
                ]
            ],
            [
                "PROJECT",
                "the yards of #REF",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "rushing touchdowns of the game"
                    ]
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(the yards of #REF)",
                    [
                        "AGGREGATE_min",
                        [
                            "SELECT",
                            "GET_QUESTION_SPAN(field goals from Nick Folk)"
                        ]
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(the yards of #REF)",
                    [
                        "AGGREGATE_min",
                        [
                            "SELECT",
                            "GET_QUESTION_SPAN(rushing touchdowns of the game)"
                        ]
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(the yards of #REF)",
                    [
                        "AGGREGATE_min",
                        [
                            "SELECT",
                            "GET_QUESTION_SPAN(field goals from Nick Folk)"
                        ]
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(the yards of #REF)",
                    [
                        "AGGREGATE_min",
                        [
                            "SELECT",
                            "GET_QUESTION_SPAN(rushing touchdowns of the game)"
                        ]
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project",
            "select",
            "aggregate",
            "project",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    4
                ],
                [
                    6,
                    7
                ],
                [],
                [],
                [
                    2,
                    10,
                    11,
                    12,
                    13
                ],
                [
                    8
                ],
                [
                    9
                ],
                [
                    14
                ],
                [],
                [],
                [
                    16,
                    17,
                    18
                ],
                [],
                [
                    21,
                    22
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "of",
                "differential",
                "were",
                "there",
                "between",
                "Nick",
                "Folk",
                "'s",
                "first",
                "field",
                "goal",
                "and",
                "the",
                "first",
                "rushing",
                "touchdown",
                "of",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    4
                ],
                [
                    2,
                    10
                ],
                [],
                [],
                [
                    8
                ],
                [
                    9
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    12,
                    13,
                    18
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    21
                ],
                [
                    22
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    6,
                    7
                ],
                [
                    5,
                    8
                ],
                [],
                [],
                [],
                [],
                [
                    2,
                    4,
                    10
                ],
                [
                    12,
                    13
                ],
                [],
                [],
                [],
                [
                    9
                ],
                [],
                [],
                [
                    17,
                    18
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    21,
                    22
                ]
            ],
            "question_spans": [
                [
                    0,
                    4
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    21
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    21
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    13
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    21
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    18
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    21
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    19,
                    21
                ],
                [
                    20,
                    20
                ],
                [
                    20,
                    21
                ],
                [
                    21,
                    21
                ],
                [
                    22,
                    22
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2337_a581c958-db1b-415b-b9d4-c97627d1d8b8",
        "question_text": "How many millions of dollars did Yeman owe Japan after they wrote off some of the debt in 2005?",
        "split": "train",
        "decomposition": "return millions of dollars that Yeman owe Japan ;return #1 after they wrote off some of the  debt in  2005",
        "program": [
            "SELECT['millions of dollars that Yeman owe Japan']",
            "FILTER['#1', 'after they wrote off some of the debt in 2005']"
        ],
        "nested_expression": [
            "FILTER",
            [
                "SELECT",
                "millions of dollars that Yeman owe Japan"
            ],
            "after they wrote off some of the debt in 2005"
        ],
        "typed_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(millions of dollars that Yeman owe Japan)"
            ],
            "GET_QUESTION_SPAN(after they wrote off some of the debt in 2005)"
        ],
        "drop_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(millions of dollars that Yeman owe Japan)"
            ],
            "GET_QUESTION_SPAN(after they wrote off some of the debt in 2005)"
        ],
        "operators": [
            "select",
            "filter"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    4,
                    6,
                    7,
                    17
                ],
                [
                    2,
                    3,
                    5,
                    9,
                    10,
                    12,
                    14,
                    15
                ],
                [
                    8,
                    11,
                    13,
                    16
                ],
                [
                    18,
                    19
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "millions",
                "of",
                "dollars",
                "did",
                "Yeman",
                "owe",
                "Japan",
                "after",
                "they",
                "wrote",
                "off",
                "some",
                "of",
                "the",
                "debt",
                "in",
                "2005",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1,
                    2,
                    4
                ],
                [
                    5,
                    6,
                    7
                ],
                [
                    9
                ],
                [
                    3,
                    10,
                    12
                ],
                [
                    11,
                    13,
                    14
                ],
                [
                    8
                ],
                [
                    15,
                    16,
                    17,
                    18
                ],
                [
                    19
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    5,
                    6
                ],
                [
                    7,
                    15,
                    17
                ],
                [
                    3,
                    10,
                    11,
                    12,
                    14
                ],
                [],
                [
                    8,
                    13,
                    16
                ],
                [
                    18,
                    19
                ]
            ],
            "question_spans": [
                [
                    0,
                    4
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    18
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    18
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    18
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    18
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    18
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    16
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    16
                ],
                [
                    15,
                    16
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    18
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1305_0b41684b-9c45-4bcc-8c6e-da5736e47058",
        "question_text": "How many yards difference were there between the longest touchdown scored and the shortest?",
        "split": "train",
        "decomposition": "return yards of touchdowns ;return longest of #1 ;return shortest of #2 ;return difference of #2 and  #3",
        "program": [
            "SELECT['yards of touchdowns']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['min', '#2']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of touchdowns"
                ]
            ],
            [
                "AGGREGATE_min",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "yards of touchdowns"
                    ]
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdowns)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "AGGREGATE_max",
                        [
                            "SELECT",
                            "GET_QUESTION_SPAN(yards of touchdowns)"
                        ]
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdowns)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "AGGREGATE_max",
                        [
                            "SELECT",
                            "GET_QUESTION_SPAN(yards of touchdowns)"
                        ]
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    2
                ],
                [],
                [],
                [
                    6,
                    11
                ],
                [
                    9,
                    13
                ],
                [
                    8
                ],
                [],
                [
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "difference",
                "were",
                "there",
                "between",
                "the",
                "longest",
                "touchdown",
                "scored",
                "and",
                "the",
                "shortest",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    5,
                    6
                ],
                [],
                [
                    9,
                    13
                ],
                [],
                [
                    8
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3,
                    5,
                    6
                ],
                [
                    4
                ],
                [],
                [
                    2
                ],
                [
                    8
                ],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [
                    9
                ],
                [
                    13
                ],
                [],
                [],
                [],
                [],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    13
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    13
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    7,
                    13
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_261_ed7b6d50-a469-4a17-bc4f-3de6e831b338",
        "question_text": "What event occured first, the Xinhai Revolution or the Russo-Japanese war?",
        "split": "train",
        "decomposition": "return when  was  the Xinhai Revolution ;return when  was  the Russo-Japanese war ;return which  was  first of #1 , #2",
        "program": [
            "SELECT['when was the Xinhai Revolution']",
            "SELECT['when was the Russo-Japanese war']",
            "COMPARISON['min', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "when was the Xinhai Revolution"
            ],
            [
                "SELECT",
                "when was the Russo-Japanese war"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the Xinhai Revolution)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the Russo-Japanese war)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the Xinhai Revolution)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the Russo-Japanese war)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    8
                ],
                [
                    5,
                    6,
                    7
                ],
                [],
                [
                    9,
                    10,
                    11,
                    12
                ],
                [
                    13,
                    14
                ]
            ],
            "question_tokens": [
                "What",
                "event",
                "occured",
                "first",
                ",",
                "the",
                "Xinhai",
                "Revolution",
                "or",
                "the",
                "Russo",
                "-",
                "Japanese",
                "war",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    4
                ],
                [],
                [
                    5
                ],
                [
                    6,
                    7
                ],
                [],
                [],
                [
                    8,
                    10,
                    12
                ],
                [
                    11
                ],
                [
                    13
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    2,
                    4,
                    8
                ],
                [
                    1,
                    3
                ],
                [
                    6
                ],
                [
                    7
                ],
                [],
                [
                    10,
                    11
                ],
                [
                    12,
                    13
                ],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    13
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    13
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    13
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_447_af359e60-1ea6-4bd5-82a8-1b5afd1f46ec",
        "question_text": "How many passes did QB Joey Harrington not complete?",
        "split": "train",
        "decomposition": "return passes that Joey Harrington did not  complete ;return number of  #1",
        "program": [
            "SELECT['passes that Joey Harrington did not complete']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "passes that Joey Harrington did not complete"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(passes that Joey Harrington did not complete)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(passes that Joey Harrington did not complete)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    8
                ],
                [
                    5,
                    6,
                    7
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "passes",
                "did",
                "QB",
                "Joey",
                "Harrington",
                "not",
                "complete",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    4
                ],
                [
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    8
                ],
                [
                    6,
                    7
                ],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1915_13b53244-1106-45c2-b853-b3ee40f77b75",
        "question_text": "How many yards did Brandon Tate and Davone Bess combine for on their first touchdown scored?",
        "split": "train",
        "decomposition": "return yards of the  first touchdown of  Brandon Tate ;return yards of the  first touchdown of  Davone Bess ;return the  sum of #1 and  #2",
        "program": [
            "SELECT['yards of the first touchdown of Brandon Tate']",
            "SELECT['yards of the first touchdown of Davone Bess']",
            "ARITHMETIC['sum', '#1', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT",
                "yards of the first touchdown of Brandon Tate"
            ],
            [
                "SELECT",
                "yards of the first touchdown of Davone Bess"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of the first touchdown of Brandon Tate)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of the first touchdown of Davone Bess)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of the first touchdown of Brandon Tate)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of the first touchdown of Davone Bess)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    6
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    5,
                    7,
                    8
                ],
                [
                    4
                ],
                [
                    9
                ],
                [
                    10,
                    11,
                    12,
                    15
                ],
                [
                    13,
                    14,
                    16
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "did",
                "Brandon",
                "Tate",
                "and",
                "Davone",
                "Bess",
                "combine",
                "for",
                "on",
                "their",
                "first",
                "touchdown",
                "scored",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    6
                ],
                [
                    3
                ],
                [
                    2
                ],
                [],
                [],
                [],
                [
                    4,
                    5
                ],
                [
                    8,
                    9
                ],
                [
                    7
                ],
                [],
                [],
                [],
                [
                    10,
                    11,
                    12,
                    13,
                    14
                ],
                [],
                [],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    6
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    7
                ],
                [],
                [],
                [],
                [],
                [
                    8,
                    14
                ],
                [
                    9
                ],
                [
                    11
                ],
                [],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    15
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    15
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1498_ba577294-3be8-40b8-9c9b-7f10373cdf19",
        "question_text": "Which gallery was founded first, Hughes/Donahue Gallery or Art Euphoric?",
        "split": "dev",
        "decomposition": "return when  was  the  Hughes/Donahue Gallery founded ;return when  was  the  Art Euphoric gallery founded ;return which is the  lowest of #1 ,  #2",
        "program": [
            "SELECT['when was the Hughes/Donahue Gallery founded']",
            "SELECT['when was the Art Euphoric gallery founded']",
            "COMPARISON['min', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "when was the Hughes/Donahue Gallery founded"
            ],
            [
                "SELECT",
                "when was the Art Euphoric gallery founded"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the Hughes/Donahue Gallery founded)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the Art Euphoric gallery founded)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the Hughes/Donahue Gallery founded)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the Art Euphoric gallery founded)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    4,
                    5,
                    10
                ],
                [
                    2,
                    6
                ],
                [
                    7,
                    8,
                    9
                ],
                [
                    11
                ],
                [
                    12,
                    13
                ]
            ],
            "question_tokens": [
                "Which",
                "gallery",
                "was",
                "founded",
                "first",
                ",",
                "Hughes",
                "/",
                "Donahue",
                "Gallery",
                "or",
                "Art",
                "Euphoric",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    1
                ],
                [
                    0,
                    4,
                    5
                ],
                [
                    2
                ],
                [
                    3
                ],
                [
                    6
                ],
                [],
                [
                    7,
                    8
                ],
                [
                    9
                ],
                [
                    10
                ],
                [
                    11,
                    12
                ],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    2
                ],
                [
                    1,
                    5,
                    10
                ],
                [
                    3,
                    4
                ],
                [
                    6,
                    7
                ],
                [
                    8
                ],
                [
                    9
                ],
                [],
                [
                    11,
                    12
                ],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    12
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    12
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_771_8847957f-349f-45f3-959b-f7a8a56b8df2",
        "question_text": "Which happened later, the execution of Omar Mukhtar or the seizure of East Tripolitania, Ghadames, the Djebel and Fezzan with Murzuk by the Italians?",
        "split": "train",
        "decomposition": "return when  was  the  execution of Omar Mukhtar ;return when  was  the  seizure of East Tripolitania ,  Ghadames ,   the   Djebel and  Fezzan with  Murzuk by the    Italians ;return which is the  highest of #1 ,  #2",
        "program": [
            "SELECT['when was the execution of Omar Mukhtar']",
            "SELECT['when was the seizure of East Tripolitania , Ghadames , the Djebel and Fezzan with Murzuk by the Italians']",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "when was the execution of Omar Mukhtar"
            ],
            [
                "SELECT",
                "when was the seizure of East Tripolitania , Ghadames , the Djebel and Fezzan with Murzuk by the Italians"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the execution of Omar Mukhtar)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the seizure of East Tripolitania , Ghadames , the Djebel and Fezzan with Murzuk by the Italians)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the execution of Omar Mukhtar)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the seizure of East Tripolitania , Ghadames , the Djebel and Fezzan with Murzuk by the Italians)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    7,
                    8,
                    9,
                    15,
                    17
                ],
                [
                    4,
                    6,
                    10,
                    11,
                    12
                ],
                [
                    13,
                    14,
                    16,
                    19,
                    20
                ],
                [
                    18,
                    21,
                    25,
                    26
                ],
                [
                    22,
                    23,
                    24,
                    27
                ]
            ],
            "question_tokens": [
                "Which",
                "happened",
                "later",
                ",",
                "the",
                "execution",
                "of",
                "Omar",
                "Mukhtar",
                "or",
                "the",
                "seizure",
                "of",
                "East",
                "Tripolitania",
                ",",
                "Ghadames",
                ",",
                "the",
                "Djebel",
                "and",
                "Fezzan",
                "with",
                "Murzuk",
                "by",
                "the",
                "Italians",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    5,
                    7,
                    8,
                    15,
                    17
                ],
                [],
                [
                    6,
                    9,
                    10
                ],
                [
                    11,
                    12
                ],
                [
                    13,
                    14,
                    16
                ],
                [],
                [
                    19,
                    20,
                    26
                ],
                [
                    22,
                    24
                ],
                [
                    21,
                    23
                ],
                [
                    27
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    5
                ],
                [
                    3,
                    9,
                    15,
                    17
                ],
                [
                    1,
                    2,
                    7,
                    8,
                    11
                ],
                [],
                [
                    14,
                    16
                ],
                [
                    13,
                    19
                ],
                [
                    21,
                    26
                ],
                [
                    20,
                    22,
                    23,
                    24
                ],
                [
                    27
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    26
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    26
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    20,
                    20
                ],
                [
                    21,
                    21
                ],
                [
                    22,
                    23
                ],
                [
                    22,
                    22
                ],
                [
                    23,
                    23
                ],
                [
                    24,
                    26
                ],
                [
                    24,
                    24
                ],
                [
                    25,
                    26
                ],
                [
                    25,
                    25
                ],
                [
                    26,
                    26
                ],
                [
                    27,
                    27
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1166_c3c19a38-87ad-433c-9fe2-cf05f1814ef1",
        "question_text": "Who did the Tatars try to capitalize off of?",
        "split": "train",
        "decomposition": "return who  did the  Tatars try to capitalize off of",
        "program": [
            "SELECT['who did the Tatars try to capitalize off of']"
        ],
        "nested_expression": [
            "SELECT",
            "who did the Tatars try to capitalize off of"
        ],
        "typed_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(who did the Tatars try to capitalize off of)"
        ],
        "drop_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(who did the Tatars try to capitalize off of)"
        ],
        "operators": [
            "select"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "Who",
                "did",
                "the",
                "Tatars",
                "try",
                "to",
                "capitalize",
                "off",
                "of",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    5
                ],
                [
                    6,
                    7,
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    4,
                    7,
                    8
                ],
                [
                    3,
                    5,
                    6
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    8
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_157_ca70576a-8733-426a-b0be-6f240fb5abb4",
        "question_text": "How many yards per reception did Donald Driver average during the game?",
        "split": "train",
        "decomposition": "return yards of receptions of  Donald Driver during the  game ;return the  average of #1",
        "program": [
            "SELECT['yards of receptions of Donald Driver during the game']",
            "AGGREGATE['avg', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "yards of receptions of Donald Driver during the game"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of receptions of Donald Driver during the game)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of receptions of Donald Driver during the game)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    6,
                    7,
                    8
                ],
                [
                    5,
                    9,
                    10
                ],
                [
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "per",
                "reception",
                "did",
                "Donald",
                "Driver",
                "average",
                "during",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    8
                ],
                [
                    5
                ],
                [
                    6
                ],
                [
                    7,
                    9,
                    10
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    5
                ],
                [
                    2,
                    3,
                    4,
                    6,
                    7,
                    8
                ],
                [
                    9,
                    10
                ],
                [],
                [
                    11,
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2222_a0aa9deb-19ba-40bf-8faf-62910b4a8c98",
        "question_text": "How many more people, in terms of percentage, belonged to the most common ancestry compared to the three least common ancestries combined?",
        "split": "train",
        "decomposition": "return the  most common ancestry in  terms of percentage ;return the  three least common ancestries in  terms of percentages ;return the  sum of #2 ;return the  difference of #1 and  #3",
        "program": [
            "SELECT['the most common ancestry in terms of percentage']",
            "SELECT['the three least common ancestries in terms of percentages']",
            "AGGREGATE['sum', '#2']",
            "ARITHMETIC['difference', '#1', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "the most common ancestry in terms of percentage"
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "the three least common ancestries in terms of percentages"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the most common ancestry in terms of percentage)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the three least common ancestries in terms of percentages)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the most common ancestry in terms of percentage)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the three least common ancestries in terms of percentages)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    6,
                    8
                ],
                [
                    10,
                    11,
                    16,
                    17
                ],
                [
                    4,
                    5,
                    7,
                    9,
                    12
                ],
                [
                    13,
                    14,
                    15
                ],
                [
                    19,
                    23
                ],
                [
                    18
                ],
                [
                    20,
                    21,
                    22,
                    24
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "people",
                ",",
                "in",
                "terms",
                "of",
                "percentage",
                ",",
                "belonged",
                "to",
                "the",
                "most",
                "common",
                "ancestry",
                "compared",
                "to",
                "the",
                "three",
                "least",
                "common",
                "ancestries",
                "combined",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    6,
                    8,
                    10,
                    16
                ],
                [],
                [
                    9
                ],
                [
                    13,
                    14
                ],
                [],
                [
                    15
                ],
                [],
                [
                    23
                ],
                [],
                [],
                [
                    19,
                    20,
                    21
                ],
                [],
                [
                    22
                ],
                [
                    24
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    6
                ],
                [
                    2,
                    3,
                    8
                ],
                [],
                [
                    10,
                    11,
                    16,
                    17
                ],
                [
                    13
                ],
                [
                    15
                ],
                [
                    14
                ],
                [],
                [
                    19,
                    23
                ],
                [],
                [
                    22
                ],
                [
                    21,
                    24
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    23
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    23
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    23
                ],
                [
                    11,
                    15
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    15
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    23
                ],
                [
                    17,
                    23
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    22
                ],
                [
                    18,
                    23
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    20,
                    20
                ],
                [
                    21,
                    21
                ],
                [
                    22,
                    22
                ],
                [
                    23,
                    23
                ],
                [
                    24,
                    24
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1861_3bbcd121-a7f9-4f03-a1a7-75de60a8f1af",
        "question_text": "How many people, in terms of percentage of the population, did not live below the poverty line?",
        "split": "train",
        "decomposition": "return percentage of people that live below the  poverty line ;return the  difference of 100 and  #1",
        "program": [
            "SELECT['percentage of people that live below the poverty line']",
            "PROJECT['the difference of 100 and #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "the difference of 100 and #REF",
            [
                "SELECT",
                "percentage of people that live below the poverty line"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the difference of 100 and #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(percentage of people that live below the poverty line)"
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            "SELECT_IMPLICIT_NUM(100)",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percentage of people that live below the poverty line)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    5,
                    7
                ],
                [
                    2,
                    6,
                    8,
                    10,
                    13,
                    15,
                    17
                ],
                [
                    14
                ],
                [
                    3,
                    4,
                    9,
                    11,
                    12,
                    16
                ],
                [
                    18,
                    19
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "people",
                ",",
                "in",
                "terms",
                "of",
                "percentage",
                "of",
                "the",
                "population",
                ",",
                "did",
                "not",
                "live",
                "below",
                "the",
                "poverty",
                "line",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    3
                ],
                [
                    0,
                    1
                ],
                [
                    2,
                    4,
                    5,
                    6,
                    8,
                    10,
                    13
                ],
                [],
                [
                    7,
                    14
                ],
                [],
                [
                    11,
                    12
                ],
                [
                    15
                ],
                [],
                [
                    17,
                    18
                ],
                [
                    19
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    5
                ],
                [
                    7
                ],
                [
                    2,
                    6,
                    8,
                    10,
                    13,
                    15
                ],
                [
                    12
                ],
                [
                    14,
                    17
                ],
                [
                    3,
                    11
                ],
                [],
                [
                    18,
                    19
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    10
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    10
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    18
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    18
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    18
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    18
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1787_6509c3ad-69d7-4596-95ce-b78b0f86b79c",
        "question_text": "What was the least increase in the United States: births or deaths?",
        "split": "train",
        "decomposition": "return increase of births in  the  United States ;return increase of deaths in  the  United States ;return which is lowest of #1 ,  #2",
        "program": [
            "SELECT['increase of births in the United States']",
            "SELECT['increase of deaths in the United States']",
            "COMPARISON['min', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "increase of births in the United States"
            ],
            [
                "SELECT",
                "increase of deaths in the United States"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(increase of births in the United States)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(increase of deaths in the United States)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(increase of births in the United States)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(increase of deaths in the United States)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    3,
                    7,
                    9,
                    11
                ],
                [
                    0,
                    1,
                    2,
                    4,
                    5,
                    6
                ],
                [
                    8
                ],
                [
                    10,
                    12
                ],
                [
                    13
                ]
            ],
            "question_tokens": [
                "What",
                "was",
                "the",
                "least",
                "increase",
                "in",
                "the",
                "United",
                "States",
                ":",
                "births",
                "or",
                "deaths",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    3,
                    9
                ],
                [],
                [
                    4
                ],
                [
                    5
                ],
                [
                    8
                ],
                [
                    7,
                    12
                ],
                [
                    10
                ],
                [
                    11
                ],
                [],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    7,
                    11,
                    12
                ],
                [
                    3,
                    4,
                    9
                ],
                [
                    5
                ],
                [],
                [],
                [
                    8,
                    10
                ],
                [],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    1,
                    12
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    12
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_259_fef2cf95-7cca-4270-8a18-2823c3d71bba",
        "question_text": "How many ships in percent did the British not seize?",
        "split": "train",
        "decomposition": "return percent of ships that the  British did seize ;return difference of 100 and  #1",
        "program": [
            "SELECT['percent of ships that the British did seize']",
            "PROJECT['difference of 100 and #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "difference of 100 and #REF",
            [
                "SELECT",
                "percent of ships that the British did seize"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(difference of 100 and #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(percent of ships that the British did seize)"
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            "SELECT_IMPLICIT_NUM(100)",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent of ships that the British did seize)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    4,
                    8
                ],
                [],
                [
                    2,
                    3,
                    5,
                    6,
                    7,
                    9
                ],
                [
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "ships",
                "in",
                "percent",
                "did",
                "the",
                "British",
                "not",
                "seize",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    4,
                    8
                ],
                [
                    2
                ],
                [],
                [
                    5
                ],
                [
                    6
                ],
                [
                    7
                ],
                [],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    4,
                    8
                ],
                [
                    5
                ],
                [],
                [
                    2,
                    9
                ],
                [
                    7
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1940_5f31ee8e-a2c2-4cfa-877b-621d3cde6910",
        "question_text": "Did Greg Jennings catch fewer touchdown passes in the first half or the second half?",
        "split": "train",
        "decomposition": "return touchdown passes that Greg Jennings catch in  the first half  ;return touchdown passes that Greg Jennings catch in  the second half  ;return the number of  #1 ;return the number of  #2 ;return which is  fewer of  #3 , #4",
        "program": [
            "SELECT['touchdown passes that Greg Jennings catch in the first half']",
            "SELECT['touchdown passes that Greg Jennings catch in the second half']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['min', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdown passes that Greg Jennings catch in the first half"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdown passes that Greg Jennings catch in the second half"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown passes that Greg Jennings catch in the first half)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown passes that Greg Jennings catch in the second half)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_count_min",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes that Greg Jennings catch)"
                ],
                "GET_QUESTION_SPAN(in the first half)"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes that Greg Jennings catch)"
                ],
                "GET_QUESTION_SPAN(in the second half)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4
                ],
                [
                    6
                ],
                [],
                [
                    3
                ],
                [],
                [
                    7,
                    9,
                    10,
                    13,
                    14
                ],
                [],
                [
                    11
                ],
                [
                    15
                ]
            ],
            "question_tokens": [
                "Did",
                "Greg",
                "Jennings",
                "catch",
                "fewer",
                "touchdown",
                "passes",
                "in",
                "the",
                "first",
                "half",
                "or",
                "the",
                "second",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    4
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [
                    6,
                    7,
                    9,
                    10,
                    14
                ],
                [],
                [
                    11
                ],
                [],
                [],
                [
                    13
                ],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    11
                ],
                [
                    0,
                    1,
                    2,
                    4
                ],
                [
                    6
                ],
                [
                    7
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [
                    9,
                    10,
                    13,
                    14
                ],
                [],
                [],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    14
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    14
                ],
                [
                    8,
                    14
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_345_dbf339da-f096-4b4f-9bc7-24fe552052ee",
        "question_text": "How many points did San Francisco win?",
        "split": "train",
        "decomposition": "return points that San Francisco did win ;return sum of #1",
        "program": [
            "SELECT['points that San Francisco did win']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "points that San Francisco did win"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(points that San Francisco did win)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "SELECT",
                "GET_QUESTION_SPAN(points that San Francisco did win)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4
                ],
                [
                    3,
                    5
                ],
                [
                    6,
                    7
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "points",
                "did",
                "San",
                "Francisco",
                "win",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [],
                [
                    3,
                    4
                ],
                [
                    5,
                    6
                ],
                [],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    4
                ],
                [
                    5
                ],
                [
                    6
                ],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_103_771cca7b-8f3e-4e80-8fcf-047723e49a53",
        "question_text": "How many 40+ yard field goals did Andersen make?",
        "split": "train",
        "decomposition": "return field goals of  Andersen ;return #1 that are  40+ yard ;return number of  #2",
        "program": [
            "SELECT['field goals of Andersen']",
            "FILTER['#1', 'that are 40+ yard']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "field goals of Andersen"
                ],
                "that are 40+ yard"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Andersen)"
                ],
                "GET_QUESTION_SPAN(that are 40+ yard)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_GT",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Andersen)"
                ],
                "GET_QUESTION_NUMBER(40+)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    7
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [
                    10
                ],
                [
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "40",
                "+",
                "yard",
                "field",
                "goals",
                "did",
                "Andersen",
                "make",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [
                    7
                ],
                [],
                [],
                [
                    8,
                    9
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    8
                ],
                [
                    7
                ],
                [
                    4,
                    5,
                    6
                ],
                [
                    2,
                    3
                ],
                [],
                [],
                [
                    10
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_983_3a16b908-0f7d-44db-9001-77118258baec",
        "question_text": "How many years did the Miao Rebellion last for?",
        "split": "train",
        "decomposition": "return years when  the  Miao Rebellion last ;return the  number of  #1",
        "program": [
            "SELECT['years when the Miao Rebellion last']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "years when the Miao Rebellion last"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years when the Miao Rebellion last)"
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Single_Event",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years when the Miao Rebellion last)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    7,
                    8
                ],
                [
                    4
                ],
                [
                    6,
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "did",
                "the",
                "Miao",
                "Rebellion",
                "last",
                "for",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3
                ],
                [],
                [
                    4,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    7
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    5,
                    7,
                    8
                ],
                [
                    4
                ],
                [
                    6
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2782_fa7072d5-6833-473b-8503-f7cf79a315e5",
        "question_text": "Which is the second largest ethnic group in Addis Ababa?",
        "split": "train",
        "decomposition": "return ethnic groups in  Addis Ababa ;return second largest of #1",
        "program": [
            "SELECT['ethnic groups in Addis Ababa']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "ethnic groups in Addis Ababa"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(ethnic groups in Addis Ababa)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(ethnic groups in Addis Ababa)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    3,
                    4,
                    5,
                    8
                ],
                [
                    0,
                    1,
                    2,
                    6,
                    7
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "Which",
                "is",
                "the",
                "second",
                "largest",
                "ethnic",
                "group",
                "in",
                "Addis",
                "Ababa",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    3,
                    4,
                    5
                ],
                [
                    6
                ],
                [],
                [
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    6
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    8
                ],
                [
                    2,
                    7
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    9
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1451_3ac54be7-b7b4-4339-a022-b3ba816de59e",
        "question_text": "How many touchdowns did the Browns score in the first quarter?",
        "split": "train",
        "decomposition": "return touchdowns of the  Browns in  the first quarter ;return the  number of  #1",
        "program": [
            "SELECT['touchdowns of the Browns in the first quarter']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "touchdowns of the Browns in the first quarter"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdowns of the Browns in the first quarter)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns of the Browns)"
                ],
                "GET_QUESTION_SPAN(in the first quarter)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    6,
                    7,
                    9,
                    10
                ],
                [
                    4,
                    5,
                    8
                ],
                [],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "touchdowns",
                "did",
                "the",
                "Browns",
                "score",
                "in",
                "the",
                "first",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    6,
                    10
                ],
                [],
                [
                    5
                ],
                [
                    7
                ],
                [],
                [
                    9
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3
                ],
                [],
                [
                    6,
                    7,
                    9,
                    10
                ],
                [
                    5
                ],
                [],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1298_989273e3-6d57-46d1-bbac-08932bce8dd2",
        "question_text": "How many countries resettled on Circassian lands?",
        "split": "dev",
        "decomposition": "return countries that resettled on Circassian lands ;return number of  #1",
        "program": [
            "SELECT['countries that resettled on Circassian lands']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "countries that resettled on Circassian lands"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(countries that resettled on Circassian lands)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(countries that resettled on Circassian lands)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    4
                ],
                [
                    5,
                    6,
                    7
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "countries",
                "resettled",
                "on",
                "Circassian",
                "lands",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [
                    3
                ],
                [],
                [
                    4,
                    5
                ],
                [
                    6
                ],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    6
                ],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2583_2ca7f792-1beb-4a0f-bef5-983800f2f6c4",
        "question_text": "Which three locations did less than five percent of the refugees come from?",
        "split": "train",
        "decomposition": "return locations that refugees come from  ;return the  percent of refugees that come from  #1 ;return #1 where #2 is less than five percent",
        "program": [
            "SELECT['locations that refugees come from']",
            "PROJECT['the percent of refugees that come from #REF', '#1']",
            "COMPARATIVE['#1', '#2', 'is less than five percent']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "locations that refugees come from"
            ],
            [
                "PROJECT",
                "the percent of refugees that come from #REF",
                [
                    "SELECT",
                    "locations that refugees come from"
                ]
            ],
            "is less than five percent"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(locations that refugees come from)"
            ],
            [
                "PARTIAL_GROUP_sum",
                [
                    "PARTIAL_SELECT_NUM",
                    "GET_QUESTION_SPAN(the percent of refugees that come from #REF)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is less than five percent)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(locations that refugees come from)"
            ],
            [
                "PARTIAL_SELECT_SINGLE_NUM",
                "GET_QUESTION_SPAN(the percent of refugees that come from #REF)"
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is less than five percent)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    9
                ],
                [],
                [
                    4,
                    6,
                    10
                ],
                [],
                [
                    5,
                    8,
                    11,
                    12
                ],
                [
                    13
                ]
            ],
            "question_tokens": [
                "Which",
                "three",
                "locations",
                "did",
                "less",
                "than",
                "five",
                "percent",
                "of",
                "the",
                "refugees",
                "come",
                "from",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [
                    2
                ],
                [
                    3
                ],
                [
                    1
                ],
                [],
                [
                    6,
                    7
                ],
                [
                    4
                ],
                [],
                [],
                [],
                [
                    5,
                    10
                ],
                [
                    11,
                    12
                ],
                [],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    7
                ],
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    6
                ],
                [
                    11
                ],
                [],
                [
                    4
                ],
                [
                    8,
                    10
                ],
                [],
                [
                    5
                ],
                [
                    12,
                    13
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    12
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_409_09e97b73-afdf-483d-bb44-9569a34b0e27",
        "question_text": "Around how many months do these events span?",
        "split": "train",
        "decomposition": "return these events ;return months of #1 ;return number of  #2",
        "program": [
            "SELECT['these events']",
            "PROJECT['months of #REF', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "months of #REF",
                [
                    "SELECT",
                    "these events"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(months of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(these events)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(months of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(these events)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4
                ],
                [
                    7
                ],
                [
                    5,
                    6
                ],
                [],
                [
                    8
                ]
            ],
            "question_tokens": [
                "Around",
                "how",
                "many",
                "months",
                "do",
                "these",
                "events",
                "span",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    3
                ],
                [
                    1,
                    2
                ],
                [],
                [],
                [
                    4,
                    7
                ],
                [],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    4
                ],
                [
                    7
                ],
                [
                    6
                ],
                [
                    5
                ],
                [],
                [],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1375_7862af3c-8ebf-4c54-a573-2dc7ba40ebac",
        "question_text": "Where did American and Soviet forces met and on what date?",
        "split": "train",
        "decomposition": "return where did American and  Soviet forces meet ;return on what  date did American and  Soviet forces meet ;return #1 ,  #2",
        "program": [
            "SELECT['where did American and Soviet forces meet']",
            "SELECT['on what date did American and Soviet forces meet']",
            "UNION['#1', '#2']"
        ],
        "nested_expression": [
            "UNION",
            [
                "SELECT",
                "where did American and Soviet forces meet"
            ],
            [
                "SELECT",
                "on what date did American and Soviet forces meet"
            ]
        ],
        "typed_nested_expression": [
            "UNION",
            [
                "SELECT",
                "GET_QUESTION_SPAN(where did American and Soviet forces meet)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(on what date did American and Soviet forces meet)"
            ]
        ],
        "drop_nested_expression": [
            "UNION",
            [
                "SELECT",
                "GET_QUESTION_SPAN(where did American and Soviet forces meet)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(on what date did American and Soviet forces meet)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "union"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    3,
                    7,
                    8
                ],
                [
                    1,
                    4,
                    5,
                    6
                ],
                [],
                [
                    9,
                    10
                ],
                [
                    11
                ]
            ],
            "question_tokens": [
                "Where",
                "did",
                "American",
                "and",
                "Soviet",
                "forces",
                "met",
                "and",
                "on",
                "what",
                "date",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    3
                ],
                [
                    5
                ],
                [
                    2,
                    4,
                    6
                ],
                [
                    9,
                    10
                ],
                [
                    7
                ],
                [
                    8
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    9,
                    10
                ],
                [],
                [
                    3,
                    7,
                    8
                ],
                [
                    6
                ],
                [
                    2,
                    4,
                    5
                ],
                [],
                [],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    6
                ],
                [
                    1,
                    10
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1805_5d679643-1a80-45fb-96b7-422699c14b6d",
        "question_text": "According to the 2011 United Kingdom Census, which group is larger: Black British or British Arabs?",
        "split": "train",
        "decomposition": "return Black British  According to the 2011 United Kingdom Census ;return British  Arabs According to the 2011 United Kingdom Census ;return number of  #1 ;return number of  #2 ;return which is  highest of  #3 , #4",
        "program": [
            "SELECT['Black British According to the 2011 United Kingdom Census']",
            "SELECT['British Arabs According to the 2011 United Kingdom Census']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "Black British According to the 2011 United Kingdom Census"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "British Arabs According to the 2011 United Kingdom Census"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(Black British According to the 2011 United Kingdom Census)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(British Arabs According to the 2011 United Kingdom Census)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(Black British According to the 2011 United Kingdom Census)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(British Arabs According to the 2011 United Kingdom Census)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    3,
                    4,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    15
                ],
                [
                    1,
                    2,
                    5
                ],
                [],
                [
                    13,
                    14,
                    16
                ],
                [
                    17,
                    18
                ]
            ],
            "question_tokens": [
                "According",
                "to",
                "the",
                "2011",
                "United",
                "Kingdom",
                "Census",
                ",",
                "which",
                "group",
                "is",
                "larger",
                ":",
                "Black",
                "British",
                "or",
                "British",
                "Arabs",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    3,
                    4,
                    8,
                    9,
                    10,
                    11
                ],
                [],
                [
                    5,
                    6,
                    7
                ],
                [],
                [],
                [
                    13
                ],
                [
                    12,
                    14
                ],
                [
                    15,
                    16
                ],
                [
                    17
                ],
                [
                    18
                ]
            ],
            "fastalign.grammar": [
                [
                    8
                ],
                [
                    0,
                    4,
                    7,
                    12,
                    15
                ],
                [
                    3,
                    6,
                    9,
                    10,
                    11
                ],
                [
                    1,
                    5
                ],
                [],
                [],
                [
                    13
                ],
                [
                    14,
                    16,
                    17
                ],
                [
                    18
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    1,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    6
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    17
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3433_3d010ebe-fd24-4ee1-bd0a-dee5f76f6c7a",
        "question_text": "How many yards was the second-longest touchdown?",
        "split": "train",
        "decomposition": "return yards of touchdowns ;return second-longest of #1",
        "program": [
            "SELECT['yards of touchdowns']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "yards of touchdowns"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdowns)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdowns)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    5,
                    7,
                    8
                ],
                [
                    4,
                    6
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "the",
                "second",
                "-",
                "longest",
                "touchdown",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    5,
                    7,
                    8
                ],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    5
                ],
                [
                    7,
                    8
                ],
                [
                    6
                ],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_605_500c4ce7-7e83-488a-9efd-84ab06b16289",
        "question_text": "What happened last, the sailing of the French fleet, or the arrival of the British fleet?",
        "split": "train",
        "decomposition": "return when  was  the  sailing of the   French fleet ;return when  was  the  arrival of the   British fleet ;return which is the  highest of #1 ,  #2",
        "program": [
            "SELECT['when was the sailing of the French fleet']",
            "SELECT['when was the arrival of the British fleet']",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "when was the sailing of the French fleet"
            ],
            [
                "SELECT",
                "when was the arrival of the British fleet"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the sailing of the French fleet)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the arrival of the British fleet)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the sailing of the French fleet)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the arrival of the British fleet)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    10,
                    11
                ],
                [
                    4,
                    6,
                    7,
                    9
                ],
                [
                    8
                ],
                [
                    12,
                    13,
                    14,
                    15,
                    16,
                    17
                ],
                [
                    18
                ]
            ],
            "question_tokens": [
                "What",
                "happened",
                "last",
                ",",
                "the",
                "sailing",
                "of",
                "the",
                "French",
                "fleet",
                ",",
                "or",
                "the",
                "arrival",
                "of",
                "the",
                "British",
                "fleet",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    10
                ],
                [],
                [
                    5,
                    6,
                    9
                ],
                [
                    8
                ],
                [],
                [
                    13
                ],
                [
                    11,
                    12
                ],
                [
                    14,
                    15,
                    16
                ],
                [
                    17
                ],
                [
                    18
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    3,
                    10,
                    11
                ],
                [
                    1,
                    2,
                    5
                ],
                [
                    8,
                    9
                ],
                [],
                [],
                [
                    13,
                    17
                ],
                [
                    16
                ],
                [
                    18
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    12,
                    17
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    17
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    17
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_611_6a5305d9-32c3-40ec-a996-0f66cdb84fda",
        "question_text": "How many yards was the longest touchdown play of the game?",
        "split": "train",
        "decomposition": "return touchdown plays of the  game ;return longest of #1 ;return yards of #2",
        "program": [
            "SELECT['touchdown plays of the game']",
            "AGGREGATE['max', '#1']",
            "PROJECT['yards of #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "yards of #REF",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "touchdown plays of the game"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(yards of #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown plays of the game)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown plays of the game)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    5,
                    6,
                    7
                ],
                [
                    4,
                    8,
                    9
                ],
                [
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "the",
                "longest",
                "touchdown",
                "play",
                "of",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    5,
                    6
                ],
                [],
                [],
                [
                    7,
                    8
                ],
                [],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3
                ],
                [
                    5,
                    6,
                    7
                ],
                [
                    8
                ],
                [],
                [
                    10,
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_464_19611cdc-2e96-412e-92f9-3cbad5b8f3da",
        "question_text": "How long was Anderson's shortest TD pass?",
        "split": "train",
        "decomposition": "return TD passes of Anderson ;return shortest of #1 ;return how long #2 was",
        "program": [
            "SELECT['TD passes of Anderson']",
            "AGGREGATE['min', '#1']",
            "PROJECT['how long #REF was', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "how long #REF was",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "TD passes of Anderson"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(how long #REF was)",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(TD passes of Anderson)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(how long #REF was)",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(TD passes of Anderson)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    3
                ],
                [
                    2,
                    4,
                    5,
                    6,
                    7
                ],
                [],
                [
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "long",
                "was",
                "Anderson",
                "'s",
                "shortest",
                "TD",
                "pass",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    6
                ],
                [
                    3
                ],
                [
                    2,
                    4
                ],
                [
                    5,
                    7
                ],
                [],
                [],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    7
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_382_bd222f85-6a0d-4122-bcc3-d51a63e6140a",
        "question_text": "How many field goals occured before half time?",
        "split": "train",
        "decomposition": "return field goals ;return #1 that occured before half time ;return the  number of  #2",
        "program": [
            "SELECT['field goals']",
            "FILTER['#1', 'that occured before half time']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "field goals"
                ],
                "that occured before half time"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals)"
                ],
                "GET_QUESTION_SPAN(that occured before half time)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals)"
                ],
                "GET_QUESTION_SPAN(that occured before half time)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    5,
                    6
                ],
                [],
                [
                    4,
                    7
                ],
                [
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "field",
                "goals",
                "occured",
                "before",
                "half",
                "time",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    6
                ],
                [
                    4
                ],
                [],
                [
                    5
                ],
                [],
                [
                    7
                ],
                [],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [
                    2
                ],
                [
                    4,
                    5,
                    6
                ],
                [],
                [],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2180_47313fa2-31de-40c8-9b4a-3e9ba674b8f8",
        "question_text": "How many more cases of assault and embezzlement were there combined compared to cases of motorcycle thefts?",
        "split": "train",
        "decomposition": "return cases  of assault ;return cases  of embezzlement ;return cases  of motorcycle thefts ;return number of  #1 ;return number of  #2 ;return number of  #3 ;return sum of #4 and  #5 ;return difference of #7 and  #6",
        "program": [
            "SELECT['cases of assault']",
            "SELECT['cases of embezzlement']",
            "SELECT['cases of motorcycle thefts']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "AGGREGATE['count', '#3']",
            "ARITHMETIC['sum', '#4', '#5']",
            "ARITHMETIC['difference', '#7', '#6']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "cases of assault"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "cases of embezzlement"
                    ]
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "cases of motorcycle thefts"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(cases of assault)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(cases of embezzlement)"
                    ]
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(cases of motorcycle thefts)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(cases of assault)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(cases of embezzlement)"
                    ]
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(cases of motorcycle thefts)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "aggregate",
            "aggregate",
            "aggregate",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    9,
                    11,
                    13
                ],
                [
                    6,
                    8,
                    10,
                    16
                ],
                [],
                [],
                [
                    5
                ],
                [
                    7
                ],
                [],
                [],
                [
                    15
                ],
                [],
                [
                    17
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "cases",
                "of",
                "assault",
                "and",
                "embezzlement",
                "were",
                "there",
                "combined",
                "compared",
                "to",
                "cases",
                "of",
                "motorcycle",
                "thefts",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    6,
                    10
                ],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [
                    5
                ],
                [],
                [
                    7
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    13
                ],
                [],
                [],
                [
                    15,
                    16
                ],
                [],
                [
                    17
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    9,
                    13
                ],
                [],
                [
                    6,
                    8,
                    10
                ],
                [],
                [
                    7
                ],
                [],
                [],
                [
                    5
                ],
                [
                    11
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    15,
                    16
                ],
                [],
                [],
                [
                    17
                ]
            ],
            "question_spans": [
                [
                    0,
                    7
                ],
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    16
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    16
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    16
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    16
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    16
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3040_6770c09d-1b91-4df6-a4b8-87f2e841dec0",
        "question_text": "How many yards per carry did Carlos Hyde average during this game?",
        "split": "train",
        "decomposition": "return yards of carries of  Carlos Hyde ;return the  average of #1",
        "program": [
            "SELECT['yards of carries of Carlos Hyde']",
            "AGGREGATE['avg', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "yards of carries of Carlos Hyde"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of carries of Carlos Hyde)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of carries of Carlos Hyde)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    6,
                    7,
                    8
                ],
                [
                    5,
                    9
                ],
                [
                    10,
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "per",
                "carry",
                "did",
                "Carlos",
                "Hyde",
                "average",
                "during",
                "this",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    8
                ],
                [
                    5,
                    6
                ],
                [
                    7
                ],
                [
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    5
                ],
                [
                    2,
                    3,
                    4,
                    6,
                    7,
                    8
                ],
                [
                    9
                ],
                [
                    10
                ],
                [
                    11,
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2420_a9bbbe18-0378-4070-b8bd-f934d2b3ed9a",
        "question_text": "Is more space taken up by grain fields or pastures?",
        "split": "train",
        "decomposition": "return the  space taken up by grain fields ;return the  space taken up by pastures ;return which  is  more of #1 ,  #2",
        "program": [
            "SELECT['the space taken up by grain fields']",
            "SELECT['the space taken up by pastures']",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "the space taken up by grain fields"
            ],
            [
                "SELECT",
                "the space taken up by pastures"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the space taken up by grain fields)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(the space taken up by pastures)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the space taken up by grain fields)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(the space taken up by pastures)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    8
                ],
                [
                    2,
                    3,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    7
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "Is",
                "more",
                "space",
                "taken",
                "up",
                "by",
                "grain",
                "fields",
                "or",
                "pastures",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    3,
                    4
                ],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [],
                [
                    8
                ],
                [
                    7,
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0,
                    8
                ],
                [
                    1
                ],
                [
                    2,
                    3,
                    4
                ],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [
                    7,
                    9
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1295_35620ab4-c0ce-4058-996d-7a244313eb0a",
        "question_text": "How many yards was Jay Feely's shortest field goal?",
        "split": "train",
        "decomposition": "return yards of field goals of  Jay Feely ;return the  shortest of #1",
        "program": [
            "SELECT['yards of field goals of Jay Feely']",
            "AGGREGATE['min', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "yards of field goals of Jay Feely"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals of Jay Feely)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals of Jay Feely)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9
                ],
                [],
                [
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "Jay",
                "Feely",
                "'s",
                "shortest",
                "field",
                "goal",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    6,
                    7,
                    8,
                    9
                ],
                [],
                [
                    4
                ],
                [],
                [
                    5
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    6
                ],
                [
                    7,
                    8,
                    9
                ],
                [],
                [
                    5
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2615_5288d6b5-1c77-4254-a7be-57e0cfba2106",
        "question_text": "Which years did Aston Martin not sell more than 5000 cars in?",
        "split": "train",
        "decomposition": "return years in  which Aston Martin did not  sell more than 5000 cars",
        "program": [
            "SELECT['years in which Aston Martin did not sell more than 5000 cars']"
        ],
        "nested_expression": [
            "SELECT",
            "years in which Aston Martin did not sell more than 5000 cars"
        ],
        "typed_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(years in which Aston Martin did not sell more than 5000 cars)"
        ],
        "drop_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(years in which Aston Martin did not sell more than 5000 cars)"
        ],
        "operators": [
            "select"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    11
                ],
                [
                    8,
                    9,
                    10,
                    12
                ]
            ],
            "question_tokens": [
                "Which",
                "years",
                "did",
                "Aston",
                "Martin",
                "not",
                "sell",
                "more",
                "than",
                "5000",
                "cars",
                "in",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1,
                    2,
                    3,
                    7
                ],
                [
                    4,
                    5,
                    6
                ],
                [
                    8,
                    9,
                    10,
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    2,
                    3
                ],
                [
                    4,
                    5,
                    6,
                    11
                ],
                [
                    9,
                    10
                ],
                [
                    8,
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    11
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    11
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_811_616d33e0-11bc-43b4-a8da-c1debfcf99c3",
        "question_text": "How many yards of touchdown passes did Matt Hasselbeck have?",
        "split": "train",
        "decomposition": "return yards of touchdown passes of  Matt Hasselbeck ;return the  sum of #1",
        "program": [
            "SELECT['yards of touchdown passes of Matt Hasselbeck']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "yards of touchdown passes of Matt Hasselbeck"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdown passes of Matt Hasselbeck)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdown passes of Matt Hasselbeck)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    5,
                    6,
                    7,
                    9
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "of",
                "touchdown",
                "passes",
                "did",
                "Matt",
                "Hasselbeck",
                "have",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [],
                [
                    3,
                    5,
                    6
                ],
                [
                    4,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    4,
                    8,
                    9
                ],
                [
                    2,
                    5,
                    6,
                    7
                ],
                [
                    3
                ],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2267_dd25c430-1ab1-472f-b8e7-21c25fe95759",
        "question_text": "How many more house units were there compared to households?",
        "split": "train",
        "decomposition": "return house units that were there  ;return households that were there  ;return number of  #1 ;return number of  #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['house units that were there']",
            "SELECT['households that were there']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "house units that were there"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "households that were there"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(house units that were there)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(households that were there)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(house units that were there)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(households that were there)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    9
                ],
                [
                    4
                ],
                [],
                [
                    3
                ],
                [
                    5,
                    6,
                    7,
                    8
                ],
                [],
                [
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "house",
                "units",
                "were",
                "there",
                "compared",
                "to",
                "households",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    4,
                    5,
                    6,
                    7,
                    9
                ],
                [],
                [],
                [
                    8
                ],
                [],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    6,
                    9
                ],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    3
                ],
                [
                    5
                ],
                [
                    7,
                    8
                ],
                [],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1897_5a4bffc7-7a53-45c0-992c-6fac1a511277",
        "question_text": "How many percent of people were not Asian and living in the city as of in 2010?",
        "split": "train",
        "decomposition": "return percent of people that were Asian and  living in  the  city as of  2010 ;return the  difference of 100 and  #1",
        "program": [
            "SELECT['percent of people that were Asian and living in the city as of 2010']",
            "PROJECT['the difference of 100 and #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "the difference of 100 and #REF",
            [
                "SELECT",
                "percent of people that were Asian and living in the city as of 2010"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the difference of 100 and #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(percent of people that were Asian and living in the city as of 2010)"
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            "SELECT_IMPLICIT_NUM(100)",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent of people that were Asian and living in the city as of 2010)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    9,
                    13,
                    14
                ],
                [
                    8,
                    16
                ],
                [
                    10,
                    11,
                    15
                ],
                [
                    7,
                    12,
                    17
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "percent",
                "of",
                "people",
                "were",
                "not",
                "Asian",
                "and",
                "living",
                "in",
                "the",
                "city",
                "as",
                "of",
                "in",
                "2010",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [
                    8,
                    9
                ],
                [],
                [
                    11
                ],
                [
                    10,
                    12,
                    13,
                    14,
                    15
                ],
                [
                    7
                ],
                [
                    16
                ],
                [
                    17
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    9,
                    13,
                    14
                ],
                [],
                [
                    8,
                    16
                ],
                [
                    15
                ],
                [
                    7,
                    12
                ],
                [
                    17
                ]
            ],
            "question_spans": [
                [
                    0,
                    4
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    16
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    16
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    16
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    16
                ],
                [
                    15,
                    16
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_972_dcecb668-4a9f-46d2-ab21-19c3b9811cdd",
        "question_text": "How many yards was Aaron Rodgers shortest touchdown pass?",
        "split": "train",
        "decomposition": "return yards of touchdown passes of  Aaron Rodgers ;return the  shortest of #1",
        "program": [
            "SELECT['yards of touchdown passes of Aaron Rodgers']",
            "AGGREGATE['min', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "yards of touchdown passes of Aaron Rodgers"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdown passes of Aaron Rodgers)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdown passes of Aaron Rodgers)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    6,
                    7,
                    8
                ],
                [
                    5
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "Aaron",
                "Rodgers",
                "shortest",
                "touchdown",
                "pass",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    6,
                    7,
                    8
                ],
                [],
                [],
                [
                    4,
                    5
                ],
                [],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    7
                ],
                [
                    6,
                    8
                ],
                [
                    4
                ],
                [
                    5
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1917_bce86022-d425-4fd0-a638-dd72d27c1ffd",
        "question_text": "How many yards longer was the touchdown pass that Roethlisberger threw in the second quarter than the pass that Henne threw in the second quarter?",
        "split": "train",
        "decomposition": "return yards of the  touchdown pass that Roethlisberger threw  in  the   second  quarter ;return yards of the  touchdown pass that Henne threw  in  the   second  quarter ;return the  difference of #1 and  #2",
        "program": [
            "SELECT['yards of the touchdown pass that Roethlisberger threw in the second quarter']",
            "SELECT['yards of the touchdown pass that Henne threw in the second quarter']",
            "ARITHMETIC['difference', '#1', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "yards of the touchdown pass that Roethlisberger threw in the second quarter"
            ],
            [
                "SELECT",
                "yards of the touchdown pass that Henne threw in the second quarter"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of the touchdown pass that Roethlisberger threw in the second quarter)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of the touchdown pass that Henne threw in the second quarter)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of the touchdown pass that Roethlisberger threw)"
                    ],
                    "GET_QUESTION_SPAN(in the second quarter)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of the touchdown pass that Henne threw)"
                    ],
                    "GET_QUESTION_SPAN(in the second quarter)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    7
                ],
                [
                    8,
                    10,
                    11
                ],
                [
                    9
                ],
                [],
                [],
                [
                    15,
                    17
                ],
                [
                    13,
                    14,
                    18,
                    20,
                    21,
                    23,
                    24
                ],
                [],
                [
                    19
                ],
                [
                    25
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "the",
                "touchdown",
                "pass",
                "that",
                "Roethlisberger",
                "threw",
                "in",
                "the",
                "second",
                "quarter",
                "than",
                "the",
                "pass",
                "that",
                "Henne",
                "threw",
                "in",
                "the",
                "second",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [],
                [
                    2
                ],
                [
                    4
                ],
                [
                    10
                ],
                [],
                [],
                [
                    9
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    15
                ],
                [],
                [
                    14,
                    20,
                    24
                ],
                [],
                [],
                [
                    19
                ],
                [],
                [],
                [
                    23
                ],
                [],
                [
                    25
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3
                ],
                [],
                [
                    7
                ],
                [],
                [
                    10,
                    11,
                    13,
                    14
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    15,
                    17
                ],
                [],
                [
                    20,
                    21,
                    23,
                    24
                ],
                [],
                [
                    19
                ],
                [],
                [
                    25
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    5,
                    14
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    14
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    14
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    14
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    24
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    24
                ],
                [
                    16,
                    17
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    24
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    19,
                    24
                ],
                [
                    20,
                    20
                ],
                [
                    20,
                    24
                ],
                [
                    21,
                    21
                ],
                [
                    21,
                    24
                ],
                [
                    22,
                    24
                ],
                [
                    22,
                    22
                ],
                [
                    23,
                    23
                ],
                [
                    24,
                    24
                ],
                [
                    25,
                    25
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_941_60c0e411-ada8-4d48-8655-fc6673eb78a0",
        "question_text": "Which team did not score in the second half?",
        "split": "train",
        "decomposition": "return teams ;return #1 that score in  the  second half ;return #1 besides  #2",
        "program": [
            "SELECT['teams']",
            "FILTER['#1', 'that score in the second half']",
            "DISCARD['#1', '#2']"
        ],
        "nested_expression": [
            "DISCARD",
            [
                "SELECT",
                "teams"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "teams"
                ],
                "that score in the second half"
            ]
        ],
        "typed_nested_expression": [
            "DISCARD",
            [
                "SELECT",
                "GET_QUESTION_SPAN(teams)"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(teams)"
                ],
                "GET_QUESTION_SPAN(that score in the second half)"
            ]
        ],
        "drop_nested_expression": [
            "DISCARD",
            [
                "SELECT",
                "GET_QUESTION_SPAN(teams)"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(teams)"
                ],
                "GET_QUESTION_SPAN(that score in the second half)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "discard"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    3,
                    4
                ],
                [
                    2
                ],
                [],
                [
                    0,
                    5,
                    7,
                    8
                ],
                [
                    6
                ],
                [],
                [
                    9
                ]
            ],
            "question_tokens": [
                "Which",
                "team",
                "did",
                "not",
                "score",
                "in",
                "the",
                "second",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [],
                [
                    4,
                    5,
                    8
                ],
                [],
                [],
                [],
                [
                    7
                ],
                [],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [],
                [
                    1,
                    3,
                    4
                ],
                [],
                [],
                [],
                [],
                [
                    5,
                    7,
                    8
                ],
                [],
                [],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1471_b448d01b-65d7-497c-bcfa-89e9ab450d42",
        "question_text": "Which players scored field goals longer than 18 yards?",
        "split": "dev",
        "decomposition": "return players ;return yards of field goals of  #1 ;return #1 where #2 is higher than 18",
        "program": [
            "SELECT['players']",
            "PROJECT['yards of field goals of #REF', '#1']",
            "COMPARATIVE['#1', '#2', 'is higher than 18']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "players"
            ],
            [
                "PROJECT",
                "yards of field goals of #REF",
                [
                    "SELECT",
                    "players"
                ]
            ],
            "is higher than 18"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(players)"
            ],
            [
                "PARTIAL_GROUP_sum",
                [
                    "PARTIAL_SELECT_NUM",
                    "GET_QUESTION_SPAN(yards of field goals of #REF)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is higher than 18)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(players)"
            ],
            [
                "PARTIAL_SELECT_SINGLE_NUM",
                "GET_QUESTION_SPAN(yards of field goals of #REF)"
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is higher than 18)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [],
                [
                    7
                ],
                [
                    4,
                    6,
                    8
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "Which",
                "players",
                "scored",
                "field",
                "goals",
                "longer",
                "than",
                "18",
                "yards",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [
                    6,
                    8
                ],
                [
                    7
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [],
                [
                    7
                ],
                [],
                [],
                [],
                [],
                [
                    4,
                    6
                ],
                [
                    8,
                    9
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1904_0769398f-8579-4dce-9350-448829ab26dc",
        "question_text": "How many field goals longer than 24 yards were kicked by both kickers combined?",
        "split": "train",
        "decomposition": "return field goals ;return yards of #1 ;return #1 where #2 is higher than 24 ;return number of  #3",
        "program": [
            "SELECT['field goals']",
            "PROJECT['yards of #REF', '#1']",
            "COMPARATIVE['#1', '#2', 'is higher than 24']",
            "AGGREGATE['count', '#3']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "field goals"
                ],
                [
                    "PROJECT",
                    "yards of #REF",
                    [
                        "SELECT",
                        "field goals"
                    ]
                ],
                "is higher than 24"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals)"
                ],
                [
                    "PARTIAL_GROUP_sum",
                    [
                        "PARTIAL_SELECT_NUM",
                        "GET_QUESTION_SPAN(yards of #REF)"
                    ]
                ],
                [
                    "CONDITION",
                    "GET_QUESTION_SPAN(is higher than 24)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_GT",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals)"
                ],
                "GET_QUESTION_NUMBER(24)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "comparative",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    11
                ],
                [
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [
                    6,
                    10,
                    14
                ],
                [
                    7,
                    8,
                    9,
                    12,
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "field",
                "goals",
                "longer",
                "than",
                "24",
                "yards",
                "were",
                "kicked",
                "by",
                "both",
                "kickers",
                "combined",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [],
                [
                    10
                ],
                [
                    6
                ],
                [
                    7,
                    8,
                    9,
                    11,
                    12
                ],
                [
                    13
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    11,
                    13
                ],
                [],
                [
                    2,
                    3,
                    8
                ],
                [
                    4,
                    5
                ],
                [],
                [
                    6,
                    10
                ],
                [
                    14
                ],
                [
                    7,
                    9,
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    7
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    13
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    13
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_781_a87484a9-4906-4e0f-9e72-410b6da82579",
        "question_text": "How many yards difference is there between the shortest and longest TD pass?",
        "split": "train",
        "decomposition": "return yards of TD passes ;return the  longest of #1 ;return the  shortest of #1 ;return the  difference of #2 and  #3",
        "program": [
            "SELECT['yards of TD passes']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['min', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of TD passes"
                ]
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of TD passes"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of TD passes)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of TD passes)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of TD passes)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of TD passes)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    4
                ],
                [
                    5
                ],
                [
                    2,
                    10,
                    11,
                    12
                ],
                [],
                [],
                [
                    6,
                    9
                ],
                [
                    8
                ],
                [],
                [
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "difference",
                "is",
                "there",
                "between",
                "the",
                "shortest",
                "and",
                "longest",
                "TD",
                "pass",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3,
                    10
                ],
                [
                    4
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    5,
                    6,
                    9
                ],
                [],
                [
                    8,
                    11,
                    12
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [],
                [
                    2
                ],
                [
                    10,
                    11,
                    12
                ],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [],
                [
                    8
                ],
                [],
                [],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    12
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    12
                ],
                [
                    7,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1642_b412b813-cccf-4fe0-ae9b-117cb89ad5d9",
        "question_text": "how many yards did cutler pass to olsen?",
        "split": "train",
        "decomposition": "return passes from  cutler to olsen ;return the  yards of #1 ;return the  sum of #2",
        "program": [
            "SELECT['passes from cutler to olsen']",
            "PROJECT['the yards of #REF', '#1']",
            "AGGREGATE['sum', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "PROJECT",
                "the yards of #REF",
                [
                    "SELECT",
                    "passes from cutler to olsen"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(the yards of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(passes from cutler to olsen)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(the yards of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(passes from cutler to olsen)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4
                ],
                [
                    5
                ],
                [],
                [
                    6
                ],
                [
                    7,
                    8
                ]
            ],
            "question_tokens": [
                "how",
                "many",
                "yards",
                "did",
                "cutler",
                "pass",
                "to",
                "olsen",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    5,
                    6
                ],
                [],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4
                ],
                [],
                [
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [
                    7,
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2157_2796c624-9a18-4380-a605-b0ec25aea661",
        "question_text": "How many in percent of families aren't below the poverty line?",
        "split": "train",
        "decomposition": "return percent of families below the  poverty line ;return difference of 100 and  #1",
        "program": [
            "SELECT['percent of families below the poverty line']",
            "PROJECT['difference of 100 and #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "difference of 100 and #REF",
            [
                "SELECT",
                "percent of families below the poverty line"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(difference of 100 and #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(percent of families below the poverty line)"
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            "SELECT_IMPLICIT_NUM(100)",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent of families below the poverty line)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    3,
                    4,
                    6,
                    7,
                    8,
                    10
                ],
                [],
                [
                    2,
                    9
                ],
                [
                    5,
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "in",
                "percent",
                "of",
                "families",
                "are",
                "n't",
                "below",
                "the",
                "poverty",
                "line",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    7
                ],
                [],
                [],
                [
                    6
                ],
                [],
                [
                    8
                ],
                [
                    5,
                    10
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    3,
                    4,
                    7,
                    8
                ],
                [
                    6
                ],
                [
                    10
                ],
                [],
                [
                    5
                ],
                [
                    11,
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    11
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2861_88f42254-63ea-42ef-ac0a-782ebc7f9862",
        "question_text": "By how many percent does the prevalence of abortions at 10 and 11 weeks differ?",
        "split": "train",
        "decomposition": "return the percent of  prevalence of abortions at 10 weeks ;return the percent of  prevalence of abortions at 11 weeks ;return difference of  #1 and #2",
        "program": [
            "SELECT['the percent of prevalence of abortions at 10 weeks']",
            "SELECT['the percent of prevalence of abortions at 11 weeks']",
            "ARITHMETIC['difference', '#1', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "the percent of prevalence of abortions at 10 weeks"
            ],
            [
                "SELECT",
                "the percent of prevalence of abortions at 11 weeks"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the percent of prevalence of abortions at 10 weeks)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the percent of prevalence of abortions at 11 weeks)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the percent of prevalence of abortions at 10 weeks)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the percent of prevalence of abortions at 11 weeks)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    3
                ],
                [
                    1,
                    6
                ],
                [
                    4,
                    5,
                    7,
                    9
                ],
                [
                    8,
                    10
                ],
                [
                    11
                ],
                [
                    12,
                    13
                ],
                [
                    14,
                    15
                ]
            ],
            "question_tokens": [
                "By",
                "how",
                "many",
                "percent",
                "does",
                "the",
                "prevalence",
                "of",
                "abortions",
                "at",
                "10",
                "and",
                "11",
                "weeks",
                "differ",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    2,
                    3
                ],
                [
                    1
                ],
                [],
                [],
                [
                    4
                ],
                [],
                [
                    6
                ],
                [],
                [
                    8
                ],
                [
                    11
                ],
                [
                    13
                ],
                [],
                [
                    9,
                    10,
                    12
                ],
                [],
                [
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    1,
                    2
                ],
                [
                    0,
                    3
                ],
                [],
                [
                    4
                ],
                [
                    6
                ],
                [],
                [
                    8,
                    9
                ],
                [
                    10
                ],
                [
                    13
                ],
                [
                    11
                ],
                [],
                [
                    12,
                    14
                ],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    14
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    13
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    13
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3298_e6225278-db93-465c-8b17-343a1658c1ae",
        "question_text": "How many points did the Texans lead by at halftime?",
        "split": "train",
        "decomposition": "return points that the Texans lead by at halftime",
        "program": [
            "SELECT['points that the Texans lead by at halftime']"
        ],
        "nested_expression": [
            "SELECT",
            "points that the Texans lead by at halftime"
        ],
        "typed_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(points that the Texans lead by at halftime)"
        ],
        "drop_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(points that the Texans lead by at halftime)"
        ],
        "operators": [
            "select"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    8
                ],
                [
                    7,
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "points",
                "did",
                "the",
                "Texans",
                "lead",
                "by",
                "at",
                "halftime",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    4,
                    5,
                    6
                ],
                [
                    7,
                    8
                ],
                [
                    9,
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2,
                    3,
                    6
                ],
                [
                    4,
                    5
                ],
                [
                    7,
                    8
                ],
                [
                    9,
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_254_0c11408e-7a51-4e9f-a7ce-ee78f361d8a4",
        "question_text": "What player had the longest touchdown running?",
        "split": "train",
        "decomposition": "return running touchdowns ;return the  longest of the #1 ;return the  player that  had #2",
        "program": [
            "SELECT['running touchdowns']",
            "PROJECT['the longest of the #REF', '#1']",
            "PROJECT['the player that had #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "the player that had #REF",
            [
                "PROJECT",
                "the longest of the #REF",
                [
                    "SELECT",
                    "running touchdowns"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the player that had #REF)",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(the longest of the #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(running touchdowns)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the player that had #REF)",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(the longest of the #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(running touchdowns)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [
                    6
                ],
                [
                    7
                ]
            ],
            "question_tokens": [
                "What",
                "player",
                "had",
                "the",
                "longest",
                "touchdown",
                "running",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    4,
                    5
                ],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [],
                [
                    2
                ],
                [
                    3,
                    4,
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_381_eb9bbe95-1169-421f-8e73-6845573a3dc0",
        "question_text": "How many yards was the second-longest field goal of the game?",
        "split": "train",
        "decomposition": "return yards of field goals of  the  game ;return the  second-longest of #1",
        "program": [
            "SELECT['yards of field goals of the game']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "yards of field goals of the game"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals of the game)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals of the game)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    5,
                    7,
                    8,
                    9
                ],
                [
                    4,
                    6,
                    10,
                    11
                ],
                [
                    12,
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "the",
                "second",
                "-",
                "longest",
                "field",
                "goal",
                "of",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    5,
                    7,
                    8,
                    9
                ],
                [],
                [
                    6
                ],
                [
                    10
                ],
                [],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    5,
                    9
                ],
                [
                    7,
                    8
                ],
                [
                    6,
                    10
                ],
                [],
                [
                    12,
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    12
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    12
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    12
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_769_1fbfd533-800a-41d4-bae1-f9b0da57b527",
        "question_text": "Compared to the amount of troops the Arabs and Turks had at Benghazi how many less did they have at Derna?",
        "split": "train",
        "decomposition": "return amount of troops of  the  Arabs at  Benghazi ;return amount of troops of  the  Turks at  Benghazi ;return amount of troops of  the  Arabs at  Derna ;return amount of troops of  the  Turks at  Derna ;return number of  #1 ;return number of  #2 ;return number of  #3 ;return number of  #4 ;return sum of #5 and  #6 ;return sum of #7 and  #8 ;return difference of #9 and  #10",
        "program": [
            "SELECT['amount of troops of the Arabs at Benghazi']",
            "SELECT['amount of troops of the Turks at Benghazi']",
            "SELECT['amount of troops of the Arabs at Derna']",
            "SELECT['amount of troops of the Turks at Derna']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "AGGREGATE['count', '#3']",
            "AGGREGATE['count', '#4']",
            "ARITHMETIC['sum', '#5', '#6']",
            "ARITHMETIC['sum', '#7', '#8']",
            "ARITHMETIC['difference', '#9', '#10']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "amount of troops of the Arabs at Benghazi"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "amount of troops of the Turks at Benghazi"
                    ]
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "amount of troops of the Arabs at Derna"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "amount of troops of the Turks at Derna"
                    ]
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(amount of troops of the Arabs at Benghazi)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(amount of troops of the Turks at Benghazi)"
                    ]
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(amount of troops of the Arabs at Derna)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(amount of troops of the Turks at Derna)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(amount of troops of the Arabs at Benghazi)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(amount of troops of the Turks at Benghazi)"
                    ]
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(amount of troops of the Arabs at Derna)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(amount of troops of the Turks at Derna)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "select",
            "aggregate",
            "aggregate",
            "aggregate",
            "aggregate",
            "arithmetic",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    14,
                    15
                ],
                [
                    5
                ],
                [],
                [
                    3
                ],
                [
                    7
                ],
                [],
                [
                    9
                ],
                [],
                [
                    8,
                    12
                ],
                [],
                [],
                [],
                [
                    16,
                    18
                ],
                [],
                [
                    20,
                    21
                ]
            ],
            "question_tokens": [
                "Compared",
                "to",
                "the",
                "amount",
                "of",
                "troops",
                "the",
                "Arabs",
                "and",
                "Turks",
                "had",
                "at",
                "Benghazi",
                "how",
                "many",
                "less",
                "did",
                "they",
                "have",
                "at",
                "Derna",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [],
                [],
                [
                    5
                ],
                [],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [
                    7
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [],
                [],
                [],
                [
                    8
                ],
                [
                    12
                ],
                [
                    14
                ],
                [
                    13
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    19
                ],
                [],
                [
                    20
                ],
                [],
                [
                    21
                ]
            ],
            "fastalign.grammar": [
                [
                    13,
                    14
                ],
                [
                    0
                ],
                [
                    15
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    7
                ],
                [],
                [],
                [],
                [
                    9
                ],
                [],
                [],
                [],
                [
                    8
                ],
                [],
                [
                    12,
                    16
                ],
                [],
                [],
                [],
                [],
                [
                    18
                ],
                [],
                [],
                [
                    20,
                    21
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    20
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    20
                ],
                [
                    2,
                    3
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    20
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    20
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    19,
                    20
                ],
                [
                    20,
                    20
                ],
                [
                    21,
                    21
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2845_366c21d9-31c2-43c0-8aef-91a8ec6c13ba",
        "question_text": "How many more mg/L is highest amount of arsenic in drinking water linked to skin cancer risk than the lowest mg/L amount?",
        "split": "train",
        "decomposition": "return the  amounts of arsenic in  drinking water linked to skin cancer risk ;return the  highest of #1 in  mg/L  ;return the  lowest of #1 in  mg/L  ;return the  difference of #2 and  #3",
        "program": [
            "SELECT['the amounts of arsenic in drinking water linked to skin cancer risk']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['min', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "the amounts of arsenic in drinking water linked to skin cancer risk"
                ]
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "the amounts of arsenic in drinking water linked to skin cancer risk"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the amounts of arsenic in drinking water linked to skin cancer risk)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the amounts of arsenic in drinking water linked to skin cancer risk)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the amounts of arsenic in drinking water linked to skin cancer risk)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the amounts of arsenic in drinking water linked to skin cancer risk)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    6
                ],
                [
                    4
                ],
                [
                    7,
                    10,
                    12
                ],
                [],
                [
                    16,
                    17
                ],
                [
                    13,
                    14,
                    15,
                    18,
                    19,
                    23
                ],
                [
                    3,
                    5,
                    8,
                    21,
                    22,
                    24,
                    25
                ],
                [],
                [
                    26
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "mg",
                "/",
                "L",
                "is",
                "highest",
                "amount",
                "of",
                "arsenic",
                "in",
                "drinking",
                "water",
                "linked",
                "to",
                "skin",
                "cancer",
                "risk",
                "than",
                "the",
                "lowest",
                "mg",
                "/",
                "L",
                "amount",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    4,
                    6
                ],
                [
                    7
                ],
                [
                    10
                ],
                [
                    8
                ],
                [],
                [
                    3,
                    5
                ],
                [
                    12
                ],
                [
                    13,
                    14,
                    16,
                    17
                ],
                [],
                [
                    19
                ],
                [],
                [
                    21
                ],
                [
                    23
                ],
                [
                    25
                ],
                [
                    18
                ],
                [
                    22
                ],
                [
                    24
                ],
                [],
                [
                    26
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    6
                ],
                [],
                [],
                [
                    3,
                    5,
                    12,
                    14
                ],
                [
                    7,
                    10
                ],
                [
                    13
                ],
                [
                    16,
                    18
                ],
                [
                    17
                ],
                [],
                [
                    15,
                    19
                ],
                [
                    22,
                    24
                ],
                [
                    21
                ],
                [],
                [],
                [
                    26
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    25
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    18
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    18
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    18
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    18
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    18
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    19,
                    25
                ],
                [
                    20,
                    25
                ],
                [
                    20,
                    20
                ],
                [
                    21,
                    21
                ],
                [
                    22,
                    22
                ],
                [
                    23,
                    23
                ],
                [
                    24,
                    24
                ],
                [
                    25,
                    25
                ],
                [
                    26,
                    26
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1892_60de0e6e-4f2a-4522-850e-e5d83555e7cb",
        "question_text": "How many percent were not POSSLQ?",
        "split": "dev",
        "decomposition": "return percent that were POSSLQ ;return the  difference of 100 percent and  #1",
        "program": [
            "SELECT['percent that were POSSLQ']",
            "PROJECT['the difference of 100 percent and #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "the difference of 100 percent and #REF",
            [
                "SELECT",
                "percent that were POSSLQ"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the difference of 100 percent and #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(percent that were POSSLQ)"
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            "SELECT_IMPLICIT_NUM(100)",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent that were POSSLQ)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4
                ],
                [],
                [
                    5
                ],
                [
                    6
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "percent",
                "were",
                "not",
                "POSSLQ",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2,
                    4
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [
                    5
                ],
                [],
                [
                    6
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    4
                ],
                [],
                [],
                [
                    5
                ],
                [],
                [
                    6
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1594_ec94dad0-ec56-462b-a26d-bb40254b9822",
        "question_text": "Which happened first, William Pepperrell capturing Louisbourg or Lord Jeffrey Amherst and General Wolfe capturing Louisbourg?",
        "split": "train",
        "decomposition": "return when  did William Pepperrell capture Louisbourg  ;return when  did Lord Jeffrey Amherst and  General Wolfe capture Louisbourg  ;return which is the  lowest of #1 ,  #2",
        "program": [
            "SELECT['when did William Pepperrell capture Louisbourg']",
            "SELECT['when did Lord Jeffrey Amherst and General Wolfe capture Louisbourg']",
            "COMPARISON['min', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "when did William Pepperrell capture Louisbourg"
            ],
            [
                "SELECT",
                "when did Lord Jeffrey Amherst and General Wolfe capture Louisbourg"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did William Pepperrell capture Louisbourg)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did Lord Jeffrey Amherst and General Wolfe capture Louisbourg)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did William Pepperrell capture Louisbourg)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did Lord Jeffrey Amherst and General Wolfe capture Louisbourg)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    8,
                    15
                ],
                [
                    7
                ],
                [
                    9,
                    10,
                    11,
                    12
                ],
                [
                    13,
                    14,
                    16
                ],
                [
                    17
                ]
            ],
            "question_tokens": [
                "Which",
                "happened",
                "first",
                ",",
                "William",
                "Pepperrell",
                "capturing",
                "Louisbourg",
                "or",
                "Lord",
                "Jeffrey",
                "Amherst",
                "and",
                "General",
                "Wolfe",
                "capturing",
                "Louisbourg",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    4,
                    5,
                    7
                ],
                [
                    6,
                    8
                ],
                [
                    10,
                    11
                ],
                [
                    9,
                    14
                ],
                [
                    12,
                    13,
                    16
                ],
                [
                    15
                ],
                [],
                [
                    17
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    3,
                    8
                ],
                [
                    1,
                    2,
                    4,
                    5,
                    6,
                    15
                ],
                [
                    7
                ],
                [
                    9,
                    10,
                    12
                ],
                [
                    11
                ],
                [
                    13,
                    16
                ],
                [
                    14
                ],
                [
                    17
                ]
            ],
            "question_spans": [
                [
                    0,
                    2
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    16
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    11
                ],
                [
                    6,
                    16
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    16
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    16
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1049_bff2b626-50c5-4864-ba23-f1d20e1ef1c0",
        "question_text": "Who helped them prosper",
        "split": "train",
        "decomposition": "return who  helped them prosper",
        "program": [
            "SELECT['who helped them prosper']"
        ],
        "nested_expression": [
            "SELECT",
            "who helped them prosper"
        ],
        "typed_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(who helped them prosper)"
        ],
        "drop_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(who helped them prosper)"
        ],
        "operators": [
            "select"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3
                ]
            ],
            "question_tokens": [
                "Who",
                "helped",
                "them",
                "prosper"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    3
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2566_92a75ba4-83fb-4861-8010-3cab0dd23502",
        "question_text": "Which player had the shortest touchdown-scoring play of the game?",
        "split": "train",
        "decomposition": "return touchdown-scoring plays of the  game ;return the  shortest of #1 ;return the  player that had #2",
        "program": [
            "SELECT['touchdown-scoring plays of the game']",
            "AGGREGATE['min', '#1']",
            "PROJECT['the player that had #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "the player that had #REF",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "touchdown-scoring plays of the game"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the player that had #REF)",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown-scoring plays of the game)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the player that had #REF)",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown-scoring plays of the game)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    10
                ],
                [
                    8
                ],
                [
                    4,
                    5,
                    7
                ],
                [
                    6,
                    9
                ],
                [
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "had",
                "the",
                "shortest",
                "touchdown",
                "-",
                "scoring",
                "play",
                "of",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    4,
                    5,
                    7
                ],
                [],
                [
                    6
                ],
                [
                    8,
                    9
                ],
                [],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    5,
                    9,
                    10
                ],
                [],
                [
                    7,
                    8
                ],
                [
                    4
                ],
                [
                    6
                ],
                [],
                [
                    11,
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    11
                ],
                [
                    3,
                    11
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2967_5f3968c6-9e80-4d58-bb34-01e8c678f2b1",
        "question_text": "How many more points ahead were the Texans  at the end of the game than early in the second quarter?",
        "split": "train",
        "decomposition": "return points that the  Texans were ahead at the   end of the    game ;return points that the  Texans were ahead early in  the   second quarter ;return the  difference of #1 and  #2",
        "program": [
            "SELECT['points that the Texans were ahead at the end of the game']",
            "SELECT['points that the Texans were ahead early in the second quarter']",
            "ARITHMETIC['difference', '#1', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "points that the Texans were ahead at the end of the game"
            ],
            [
                "SELECT",
                "points that the Texans were ahead early in the second quarter"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points that the Texans were ahead at the end of the game)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points that the Texans were ahead early in the second quarter)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points that the Texans were ahead at the end of the game)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points that the Texans were ahead early in the second quarter)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12
                ],
                [
                    13,
                    15
                ],
                [
                    14
                ],
                [
                    16,
                    17
                ],
                [
                    18,
                    19,
                    20
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "points",
                "ahead",
                "were",
                "the",
                "Texans",
                "at",
                "the",
                "end",
                "of",
                "the",
                "game",
                "than",
                "early",
                "in",
                "the",
                "second",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    5
                ],
                [],
                [
                    4,
                    7
                ],
                [
                    8,
                    10
                ],
                [],
                [
                    13
                ],
                [],
                [
                    14
                ],
                [],
                [],
                [
                    15,
                    16
                ],
                [
                    18
                ],
                [
                    19
                ],
                [
                    20
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    3,
                    5
                ],
                [],
                [
                    4,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    13
                ],
                [],
                [
                    14,
                    18
                ],
                [],
                [
                    15
                ],
                [
                    19,
                    20
                ]
            ],
            "question_spans": [
                [
                    0,
                    4
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    13
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    13
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    19
                ],
                [
                    15,
                    19
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    19
                ],
                [
                    17,
                    19
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    20,
                    20
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1648_99f51933-46b0-420f-8edb-76666192ffe7",
        "question_text": "How many yards longer was Hasselbeck's touchdown pass compared to Warner's?",
        "split": "train",
        "decomposition": "return yards of Hasselbeck 's  touchdown pass ;return yards of Warner 's  touchdown pass ;return difference of #1 and  #2",
        "program": [
            "SELECT[\"yards of Hasselbeck 's touchdown pass\"]",
            "SELECT[\"yards of Warner 's touchdown pass\"]",
            "ARITHMETIC['difference', '#1', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "yards of Hasselbeck 's touchdown pass"
            ],
            [
                "SELECT",
                "yards of Warner 's touchdown pass"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of Hasselbeck 's touchdown pass)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of Warner 's touchdown pass)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of Hasselbeck 's touchdown pass)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of Warner 's touchdown pass)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    6
                ],
                [
                    4,
                    5
                ],
                [
                    7
                ],
                [
                    8,
                    9,
                    10,
                    12
                ],
                [
                    11
                ],
                [
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "Hasselbeck",
                "'s",
                "touchdown",
                "pass",
                "compared",
                "to",
                "Warner",
                "'s",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3
                ],
                [
                    4
                ],
                [],
                [],
                [
                    5
                ],
                [],
                [],
                [
                    8,
                    9
                ],
                [],
                [],
                [
                    12
                ],
                [
                    11
                ],
                [],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4
                ],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [
                    7,
                    11
                ],
                [
                    8,
                    9,
                    10,
                    12
                ],
                [],
                [],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    12
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1474_b210e0f8-95fc-48a2-ba12-9dba146a4e6f",
        "question_text": "How many yards was the longest touchdown pass thrown in the second quarter?",
        "split": "train",
        "decomposition": "return yards of second quarter touchdown passes ;return longest of #1",
        "program": [
            "SELECT['yards of second quarter touchdown passes']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "yards of second quarter touchdown passes"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of second quarter touchdown passes)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of second quarter touchdown passes)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    5,
                    6,
                    7,
                    11
                ],
                [
                    4,
                    8,
                    9,
                    10
                ],
                [
                    12,
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "the",
                "longest",
                "touchdown",
                "pass",
                "thrown",
                "in",
                "the",
                "second",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    5,
                    6,
                    7
                ],
                [],
                [],
                [
                    9
                ],
                [
                    8
                ],
                [
                    11,
                    12
                ],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    6,
                    11
                ],
                [
                    5,
                    7,
                    8
                ],
                [
                    9
                ],
                [],
                [
                    12,
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    12
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    12
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    12
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1079_ea125e88-f84b-4d0e-81c9-d6cd443920d2",
        "question_text": "How many years passed between the treaty signed in 1230 and Pope Innocent IV allotting 2/3 of conquered Courland to the Livonian Order?",
        "split": "train",
        "decomposition": "return year when  the  treaty was  signed in  1230 ;return year when  Pope Innocent IV allot 2/3 of conquered Courland to the  Livonian Order ;return the  difference of #2 and  #1",
        "program": [
            "SELECT['year when the treaty was signed in 1230']",
            "SELECT['year when Pope Innocent IV allot 2/3 of conquered Courland to the Livonian Order']",
            "ARITHMETIC['difference', '#2', '#1']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "year when Pope Innocent IV allot 2/3 of conquered Courland to the Livonian Order"
            ],
            [
                "SELECT",
                "year when the treaty was signed in 1230"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year when Pope Innocent IV allot 2/3 of conquered Courland to the Livonian Order)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year when the treaty was signed in 1230)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Two_Events",
            [
                "SELECT",
                "GET_QUESTION_SPAN(year when Pope Innocent IV allot 2/3 of conquered Courland to the Livonian Order)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(year when the treaty was signed in 1230)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    6,
                    7,
                    10,
                    12
                ],
                [
                    5,
                    8,
                    11,
                    13
                ],
                [
                    9,
                    14,
                    15
                ],
                [
                    16,
                    17,
                    18,
                    19,
                    20,
                    21
                ],
                [
                    22,
                    23
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "passed",
                "between",
                "the",
                "treaty",
                "signed",
                "in",
                "1230",
                "and",
                "Pope",
                "Innocent",
                "IV",
                "allotting",
                "2/3",
                "of",
                "conquered",
                "Courland",
                "to",
                "the",
                "Livonian",
                "Order",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    4
                ],
                [],
                [
                    6,
                    7,
                    12
                ],
                [
                    8,
                    10,
                    11
                ],
                [
                    9,
                    15
                ],
                [
                    14
                ],
                [
                    13,
                    16,
                    17
                ],
                [
                    19,
                    20
                ],
                [
                    18,
                    21
                ],
                [
                    22,
                    23
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4
                ],
                [
                    6,
                    7,
                    10,
                    12,
                    13,
                    16
                ],
                [
                    8,
                    11
                ],
                [
                    9,
                    14
                ],
                [
                    15
                ],
                [
                    17,
                    18
                ],
                [
                    19,
                    21
                ],
                [
                    22,
                    23
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    22
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    22
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    18
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    18
                ],
                [
                    17,
                    17
                ],
                [
                    17,
                    18
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    19,
                    22
                ],
                [
                    20,
                    20
                ],
                [
                    20,
                    22
                ],
                [
                    21,
                    21
                ],
                [
                    22,
                    22
                ],
                [
                    23,
                    23
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1072_bb980110-2f90-4d42-ac11-0fcb8725a722",
        "question_text": "How many more touchdowns than field goals were scored in this game?",
        "split": "train",
        "decomposition": "return touchdowns that were scored in  this game ;return field goals that were scored in  this game ;return the  number of  #1 ;return the  number of  #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['touchdowns that were scored in this game']",
            "SELECT['field goals that were scored in this game']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdowns that were scored in this game"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals that were scored in this game"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns that were scored in this game)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that were scored in this game)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns that were scored in this game)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that were scored in this game)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4
                ],
                [
                    3,
                    5
                ],
                [],
                [],
                [
                    6,
                    7,
                    10
                ],
                [
                    8,
                    9
                ],
                [
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "touchdowns",
                "than",
                "field",
                "goals",
                "were",
                "scored",
                "in",
                "this",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [
                    5,
                    6
                ],
                [
                    8
                ],
                [],
                [
                    9
                ],
                [
                    10
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    4
                ],
                [
                    3,
                    5,
                    6
                ],
                [],
                [],
                [],
                [
                    7
                ],
                [
                    8,
                    10
                ],
                [],
                [],
                [
                    11,
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    11
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_701_921ae967-d332-468e-9766-7c1fb9eb2b39",
        "question_text": "How many total yards of field goals did Gostkowski  make?",
        "split": "train",
        "decomposition": "return yards of field goals that Gostkowski make ;return sum of #1",
        "program": [
            "SELECT['yards of field goals that Gostkowski make']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "yards of field goals that Gostkowski make"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals that Gostkowski make)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals that Gostkowski make)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    6,
                    7,
                    8,
                    9
                ],
                [
                    4
                ],
                [
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "total",
                "yards",
                "of",
                "field",
                "goals",
                "did",
                "Gostkowski",
                "make",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    5,
                    6
                ],
                [],
                [
                    4,
                    7
                ],
                [
                    8
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    5
                ],
                [
                    2,
                    3,
                    6,
                    7,
                    8,
                    9
                ],
                [
                    4
                ],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2285_092788c6-d165-47e4-bbc4-89fde4db2508",
        "question_text": "Which player scored the first touchdown run of the game?",
        "split": "train",
        "decomposition": "return touchdown runs of the  game ;return first of #1 ;return the  player that scored #2",
        "program": [
            "SELECT['touchdown runs of the game']",
            "AGGREGATE['min', '#1']",
            "PROJECT['the player that scored #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "the player that scored #REF",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "touchdown runs of the game"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the player that scored #REF)",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown runs of the game)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the player that scored #REF)",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown runs of the game)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    8
                ],
                [],
                [
                    4,
                    5,
                    6
                ],
                [
                    7
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "scored",
                "the",
                "first",
                "touchdown",
                "run",
                "of",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [
                    4
                ],
                [],
                [
                    5,
                    6
                ],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    5,
                    7,
                    8
                ],
                [],
                [],
                [
                    4,
                    6
                ],
                [],
                [],
                [
                    9,
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_682_f900bb63-21a0-4e22-bf65-9d0fa8dd6981",
        "question_text": "How many field goals did Janikowski kick during the first half?",
        "split": "train",
        "decomposition": "return field goals of Janikowski in  the  first half ;return the  number of  #1",
        "program": [
            "SELECT['field goals of Janikowski in the first half']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "field goals of Janikowski in the first half"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals of Janikowski in the first half)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Janikowski)"
                ],
                "GET_QUESTION_SPAN(in the first half)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [
                    6,
                    7,
                    9,
                    10
                ],
                [
                    8
                ],
                [],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "field",
                "goals",
                "did",
                "Janikowski",
                "kick",
                "during",
                "the",
                "first",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4,
                    6,
                    10
                ],
                [],
                [],
                [
                    5,
                    7
                ],
                [],
                [
                    9
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3,
                    4,
                    5,
                    7
                ],
                [
                    2
                ],
                [
                    6,
                    9,
                    10
                ],
                [],
                [],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1416_dcd39a4b-fd43-4aae-8181-7267f3a9cc98",
        "question_text": "How many more touchdown runs were there than touchdown passes?",
        "split": "train",
        "decomposition": "return touchdown runs ;return touchdown passes ;return number of  #1 ;return number of  #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['touchdown runs']",
            "SELECT['touchdown passes']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdown runs"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdown passes"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown runs)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown runs)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    6,
                    7
                ],
                [],
                [],
                [
                    3,
                    4
                ],
                [
                    5,
                    9
                ],
                [],
                [
                    8,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "touchdown",
                "runs",
                "were",
                "there",
                "than",
                "touchdown",
                "passes",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    9
                ],
                [],
                [],
                [
                    8
                ],
                [],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    6
                ],
                [
                    3
                ],
                [
                    4
                ],
                [],
                [],
                [],
                [
                    5,
                    7,
                    8
                ],
                [
                    9
                ],
                [],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2796_efc30798-e48d-4966-92a0-724482ade864",
        "question_text": "How many field goals did Nick Folk have in the first half?",
        "split": "train",
        "decomposition": "return field goals of Nick Folk in  the  first half ;return the  number of  #1",
        "program": [
            "SELECT['field goals of Nick Folk in the first half']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "field goals of Nick Folk in the first half"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals of Nick Folk in the first half)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Nick Folk)"
                ],
                "GET_QUESTION_SPAN(in the first half)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    7
                ],
                [
                    8,
                    10,
                    11
                ],
                [
                    9
                ],
                [
                    6
                ],
                [
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "field",
                "goals",
                "did",
                "Nick",
                "Folk",
                "have",
                "in",
                "the",
                "first",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4,
                    11
                ],
                [
                    5
                ],
                [],
                [
                    7,
                    8
                ],
                [
                    6
                ],
                [
                    10
                ],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3,
                    4,
                    5,
                    6,
                    7
                ],
                [
                    2
                ],
                [
                    8,
                    10,
                    11
                ],
                [],
                [],
                [],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    11
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1741_05d7c98b-2f77-48ad-8e12-2a8b54f58b36",
        "question_text": "What was the common last name for the runningbacks that scored the initial two touchdowns?",
        "split": "train",
        "decomposition": "return runningbacks that scored the  initial two touchdowns ;return the  last name of #1",
        "program": [
            "SELECT['runningbacks that scored the initial two touchdowns']",
            "PROJECT['the last name of #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "the last name of #REF",
            [
                "SELECT",
                "runningbacks that scored the initial two touchdowns"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the last name of #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(runningbacks that scored the initial two touchdowns)"
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the last name of #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(runningbacks that scored the initial two touchdowns)"
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    7,
                    9,
                    10,
                    11,
                    13,
                    14
                ],
                [
                    8
                ],
                [
                    6,
                    12
                ],
                [
                    15
                ]
            ],
            "question_tokens": [
                "What",
                "was",
                "the",
                "common",
                "last",
                "name",
                "for",
                "the",
                "runningbacks",
                "that",
                "scored",
                "the",
                "initial",
                "two",
                "touchdowns",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    1
                ],
                [
                    0,
                    2,
                    3,
                    4,
                    5,
                    9,
                    10,
                    13
                ],
                [
                    6,
                    8
                ],
                [],
                [
                    7
                ],
                [
                    11,
                    12,
                    14
                ],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    5,
                    10
                ],
                [
                    2,
                    3,
                    4,
                    7,
                    8,
                    9,
                    11,
                    13,
                    14
                ],
                [],
                [
                    12
                ],
                [
                    6
                ],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    14
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    5
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    14
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    14
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    14
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    14
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    14
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2183_1330fdf7-9a62-4145-91f2-00957ac94aea",
        "question_text": "Which gender group is fewer in number: females or males?",
        "split": "train",
        "decomposition": "return females there  are ;return males there  are ;return the  number of  #1 ;return the  number of  #2 ;return which is fewer of #3 ,  #4",
        "program": [
            "SELECT['females there are']",
            "SELECT['males there are']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['min', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "females there are"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "males there are"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(females there are)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(males there are)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(females there are)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(males there are)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    7,
                    9
                ],
                [
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "question_tokens": [
                "Which",
                "gender",
                "group",
                "is",
                "fewer",
                "in",
                "number",
                ":",
                "females",
                "or",
                "males",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    7
                ],
                [],
                [],
                [
                    5,
                    6
                ],
                [],
                [],
                [],
                [
                    9
                ],
                [
                    8,
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    9
                ],
                [
                    2,
                    3,
                    4,
                    7
                ],
                [
                    5,
                    6
                ],
                [],
                [],
                [
                    10
                ],
                [
                    8
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1674_01919d99-2c0a-43b2-ada9-1cd0c83c28af",
        "question_text": "How many yards combined are the two longest touchdown passes made?",
        "split": "train",
        "decomposition": "return yards of touchdown passes ;return the  two longest of #1 ;return the  sum of #2",
        "program": [
            "SELECT['yards of touchdown passes']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['sum', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of touchdown passes"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdown passes)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdown passes)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    9
                ],
                [
                    4,
                    6,
                    7,
                    8
                ],
                [
                    5,
                    10
                ],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "combined",
                "are",
                "the",
                "two",
                "longest",
                "touchdown",
                "passes",
                "made",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3
                ],
                [],
                [
                    6,
                    7,
                    8
                ],
                [
                    4
                ],
                [
                    9
                ],
                [
                    10
                ],
                [],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    9
                ],
                [
                    4
                ],
                [
                    6,
                    7,
                    8
                ],
                [],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_935_adffb778-724c-4587-aa8c-a8397665c827",
        "question_text": "How many years was Professor Ricklefs was sectional editor for Southeast Asia",
        "split": "train",
        "decomposition": "return years that Professor Ricklefs was  sectional editor for Southeast Asia ;return number of  #1",
        "program": [
            "SELECT['years that Professor Ricklefs was sectional editor for Southeast Asia']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "years that Professor Ricklefs was sectional editor for Southeast Asia"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years that Professor Ricklefs was sectional editor for Southeast Asia)"
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Single_Event",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years that Professor Ricklefs was sectional editor for Southeast Asia)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    9
                ],
                [
                    7,
                    8,
                    10
                ],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "was",
                "Professor",
                "Ricklefs",
                "was",
                "sectional",
                "editor",
                "for",
                "Southeast",
                "Asia"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    4,
                    5
                ],
                [
                    3,
                    6
                ],
                [],
                [
                    7,
                    9
                ],
                [
                    8,
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4,
                    6
                ],
                [
                    5,
                    7,
                    8,
                    9
                ],
                [],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    11
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_903_1408820e-b0fa-4320-8b5b-7966b5949b98",
        "question_text": "How many more touchdown passing yards did Warner have compared with Campbell?",
        "split": "train",
        "decomposition": "return yards of touchdown passing of  Warner ;return yards of touchdown passing of  Campbell ;return sum of #1 ;return sum of #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['yards of touchdown passing of Warner']",
            "SELECT['yards of touchdown passing of Campbell']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of touchdown passing of Warner"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of touchdown passing of Campbell"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdown passing of Warner)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdown passing of Campbell)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdown passing of Warner)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdown passing of Campbell)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    9
                ],
                [
                    4,
                    5
                ],
                [
                    7
                ],
                [
                    3
                ],
                [
                    6,
                    8
                ],
                [
                    11
                ],
                [
                    10,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "touchdown",
                "passing",
                "yards",
                "did",
                "Warner",
                "have",
                "compared",
                "with",
                "Campbell",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    4
                ],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    5,
                    6
                ],
                [],
                [
                    11
                ],
                [
                    10
                ],
                [],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    3
                ],
                [
                    4,
                    5,
                    6
                ],
                [],
                [],
                [],
                [
                    7,
                    8,
                    9
                ],
                [],
                [
                    11
                ],
                [
                    10
                ],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    11
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1471_7d97814e-34aa-45a1-8aac-cc5844c789e3",
        "question_text": "Which player scored the first field goal of the game?",
        "split": "dev",
        "decomposition": "return field goals of the  game ;return the  first of #1 ;return the  player that scored #2",
        "program": [
            "SELECT['field goals of the game']",
            "AGGREGATE['min', '#1']",
            "PROJECT['the player that scored #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "the player that scored #REF",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "field goals of the game"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the player that scored #REF)",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of the game)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the player that scored #REF)",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of the game)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    8
                ],
                [],
                [
                    4,
                    5,
                    6
                ],
                [
                    7
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "scored",
                "the",
                "first",
                "field",
                "goal",
                "of",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [
                    4
                ],
                [],
                [
                    5,
                    6
                ],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    7,
                    8
                ],
                [],
                [],
                [
                    4,
                    5,
                    6
                ],
                [],
                [],
                [
                    9,
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2315_17f152d9-9841-44f7-a42a-7923ef8e58e7",
        "question_text": "How many points did Atlanta lead by at halftime?",
        "split": "train",
        "decomposition": "return points at halftime ;return points of Atlanta at halftime ;return the  sum of #1 ;return the  difference of #3 and  #2 ;return the  difference of #2 and  #4",
        "program": [
            "SELECT['points at halftime']",
            "SELECT['points of Atlanta at halftime']",
            "AGGREGATE['sum', '#1']",
            "ARITHMETIC['difference', '#3', '#2']",
            "ARITHMETIC['difference', '#2', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "points of Atlanta at halftime"
            ],
            [
                "ARITHMETIC_difference",
                [
                    "AGGREGATE_sum",
                    [
                        "SELECT",
                        "points at halftime"
                    ]
                ],
                [
                    "SELECT",
                    "points of Atlanta at halftime"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points of Atlanta at halftime)"
                ]
            ],
            [
                "ARITHMETIC_difference",
                [
                    "AGGREGATE_sum",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(points at halftime)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(points of Atlanta at halftime)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points of Atlanta at halftime)"
                ]
            ],
            [
                "ARITHMETIC_difference",
                [
                    "AGGREGATE_sum",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(points at halftime)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(points of Atlanta at halftime)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    4
                ],
                [],
                [],
                [],
                [
                    3
                ],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [
                    7
                ],
                [
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "points",
                "did",
                "Atlanta",
                "lead",
                "by",
                "at",
                "halftime",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    3
                ],
                [],
                [
                    4,
                    5
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [
                    8
                ],
                [],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2
                ],
                [
                    4
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    3
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    8,
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_57_284dcd4a-c867-4323-8224-b8331761e36c",
        "question_text": "How many months did it take tickets for the opening ceremony to sell out?",
        "split": "train",
        "decomposition": "return months it did take for the  opening ceremony to sell out",
        "program": [
            "SELECT['months it did take for the opening ceremony to sell out']"
        ],
        "nested_expression": [
            "SELECT",
            "months it did take for the opening ceremony to sell out"
        ],
        "typed_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(months it did take for the opening ceremony to sell out)"
        ],
        "drop_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(months it did take for the opening ceremony to sell out)"
        ],
        "operators": [
            "select"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12
                ],
                [
                    13,
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "months",
                "did",
                "it",
                "take",
                "tickets",
                "for",
                "the",
                "opening",
                "ceremony",
                "to",
                "sell",
                "out",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1,
                    2,
                    3,
                    4
                ],
                [
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    12
                ],
                [
                    11,
                    13
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    3
                ],
                [
                    4,
                    5,
                    6,
                    8,
                    9,
                    12
                ],
                [
                    7,
                    10,
                    11,
                    13
                ],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    13
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    13
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    13
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1610_9adcaa5c-e8a6-4d62-bd53-10966250687b",
        "question_text": "Did the army have more elephants or horses?",
        "split": "train",
        "decomposition": "return elephants in  the  army ;return horses in  the  army ;return number of  #1 ;return number of  #2 ;return which is highest of #3 ,  #4",
        "program": [
            "SELECT['elephants in the army']",
            "SELECT['horses in the army']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "elephants in the army"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "horses in the army"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(elephants in the army)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(horses in the army)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(elephants in the army)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(horses in the army)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    4,
                    6
                ],
                [
                    1,
                    2,
                    3
                ],
                [
                    5
                ],
                [],
                [
                    7,
                    8
                ]
            ],
            "question_tokens": [
                "Did",
                "the",
                "army",
                "have",
                "more",
                "elephants",
                "or",
                "horses",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    4
                ],
                [],
                [
                    2
                ],
                [
                    3
                ],
                [
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0,
                    2,
                    6
                ],
                [
                    3,
                    4
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    7
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1223_fcfd1f52-20bc-4bc6-8c2b-f596fe8567cd",
        "question_text": "What was the shortest pass for a touchdown?",
        "split": "dev",
        "decomposition": "return touchdown passes ;return the  shortest of #1",
        "program": [
            "SELECT['touchdown passes']",
            "AGGREGATE['min', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "touchdown passes"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown passes)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown passes)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    3,
                    4,
                    7
                ],
                [
                    0,
                    2,
                    5,
                    6
                ],
                [
                    8
                ]
            ],
            "question_tokens": [
                "What",
                "was",
                "the",
                "shortest",
                "pass",
                "for",
                "a",
                "touchdown",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    3,
                    4,
                    7
                ],
                [],
                [
                    2
                ],
                [
                    5,
                    6
                ],
                [],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    3,
                    4,
                    7
                ],
                [
                    2,
                    6
                ],
                [
                    5
                ],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    1,
                    7
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_245_715cac47-8568-4b3d-85bb-6b6957f88019",
        "question_text": "How many years did the Beja Congress sabotage the oil pipelint to Port Sudan?",
        "split": "train",
        "decomposition": "return years when  the  Beja Congress sabotage the oil pipelint to Port Sudan ;return the  number of  #1",
        "program": [
            "SELECT['years when the Beja Congress sabotage the oil pipelint to Port Sudan']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "years when the Beja Congress sabotage the oil pipelint to Port Sudan"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years when the Beja Congress sabotage the oil pipelint to Port Sudan)"
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Single_Event",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years when the Beja Congress sabotage the oil pipelint to Port Sudan)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    6,
                    7
                ],
                [
                    4,
                    8,
                    10,
                    11
                ],
                [
                    9,
                    12,
                    13,
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "did",
                "the",
                "Beja",
                "Congress",
                "sabotage",
                "the",
                "oil",
                "pipelint",
                "to",
                "Port",
                "Sudan",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    5
                ],
                [
                    6
                ],
                [
                    4,
                    7,
                    8
                ],
                [
                    9,
                    10,
                    11
                ],
                [
                    12
                ],
                [
                    13,
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    5
                ],
                [
                    6,
                    7,
                    10
                ],
                [
                    4,
                    8,
                    9
                ],
                [
                    11,
                    12
                ],
                [
                    13,
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    13
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    13
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_902_52599270-6b65-4d7e-9a8b-02ab022abd7c",
        "question_text": "What year was the discovery of the sea route to India by Vasco da Gama?",
        "split": "train",
        "decomposition": "return the  sea route to India ;return discovery of #1 by Vasco da Gama ;return year of #2",
        "program": [
            "SELECT['the sea route to India']",
            "PROJECT['discovery of #REF by Vasco da Gama', '#1']",
            "PROJECT['year of #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "year of #REF",
            [
                "PROJECT",
                "discovery of #REF by Vasco da Gama",
                [
                    "SELECT",
                    "the sea route to India"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(year of #REF)",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(discovery of #REF by Vasco da Gama)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the sea route to India)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(year of #REF)",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(discovery of #REF by Vasco da Gama)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the sea route to India)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4
                ],
                [],
                [
                    6,
                    7,
                    8
                ],
                [
                    10,
                    11,
                    12
                ],
                [
                    5,
                    9
                ],
                [
                    13,
                    14,
                    15
                ]
            ],
            "question_tokens": [
                "What",
                "year",
                "was",
                "the",
                "discovery",
                "of",
                "the",
                "sea",
                "route",
                "to",
                "India",
                "by",
                "Vasco",
                "da",
                "Gama",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    2
                ],
                [
                    0,
                    1
                ],
                [
                    3
                ],
                [
                    4
                ],
                [],
                [
                    7,
                    8
                ],
                [],
                [
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    12,
                    13
                ],
                [
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [
                    7
                ],
                [
                    8
                ],
                [
                    10,
                    12
                ],
                [
                    9
                ],
                [
                    11
                ],
                [
                    13,
                    14,
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    14
                ],
                [
                    3,
                    14
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    10
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1443_7ac9cb3d-a309-4c80-82a0-4d5db5f2120f",
        "question_text": "How many murders and homicides are their total?",
        "split": "train",
        "decomposition": "return number of  murders ;return number of  homicides ;return sum of #1 and  #2",
        "program": [
            "SELECT['number of murders']",
            "SELECT['number of homicides']",
            "ARITHMETIC['sum', '#1', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT",
                "number of murders"
            ],
            [
                "SELECT",
                "number of homicides"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(number of murders)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(number of homicides)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(number of murders)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(number of homicides)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    3,
                    5,
                    7
                ],
                [
                    1
                ],
                [],
                [],
                [
                    4
                ],
                [
                    6
                ],
                [
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "murders",
                "and",
                "homicides",
                "are",
                "their",
                "total",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    7
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    4
                ],
                [
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    7
                ],
                [],
                [
                    4
                ],
                [],
                [],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2271_4fe1416b-4c07-455d-ac0f-cd6cc8dda982",
        "question_text": "Where there more rushing yards or passing yards in the game?",
        "split": "train",
        "decomposition": "return yards  of rushing in  the  game ;return yards  of passing in  the  game ;return sum of #1 ;return sum of #2 ;return which is highest of #3 ,  #4",
        "program": [
            "SELECT['yards of rushing in the game']",
            "SELECT['yards of passing in the game']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of rushing in the game"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of passing in the game"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_sum_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of rushing in the game)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of passing in the game)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_sum_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of rushing in the game)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of passing in the game)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    7
                ],
                [
                    6
                ],
                [
                    5
                ],
                [
                    8,
                    9
                ],
                [
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "Where",
                "there",
                "more",
                "rushing",
                "yards",
                "or",
                "passing",
                "yards",
                "in",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    4,
                    7
                ],
                [],
                [],
                [
                    3,
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [
                    8,
                    9
                ],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    5
                ],
                [
                    2,
                    3,
                    4,
                    7
                ],
                [],
                [],
                [],
                [
                    8
                ],
                [],
                [
                    10,
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    10
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1137_381efd17-6c21-463b-a7d8-1b2d9a1c3d7a",
        "question_text": "How many total yards of field goals did Reed succeed at?",
        "split": "train",
        "decomposition": "return yards of field goals of  Reed ;return sum of #1",
        "program": [
            "SELECT['yards of field goals of Reed']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "yards of field goals of Reed"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals of Reed)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals of Reed)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    6,
                    7
                ],
                [
                    4,
                    8,
                    9,
                    10
                ],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "total",
                "yards",
                "of",
                "field",
                "goals",
                "did",
                "Reed",
                "succeed",
                "at",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    5,
                    6
                ],
                [],
                [
                    4,
                    7,
                    8,
                    9
                ],
                [
                    10
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    5
                ],
                [
                    2,
                    3,
                    6,
                    7
                ],
                [
                    4,
                    9
                ],
                [
                    8,
                    10
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1649_c01f4b59-6d67-4467-93c1-bec286a0339a",
        "question_text": "Which player threw more touchdown passes, Brett Favre or Tarvaris Jackson?",
        "split": "train",
        "decomposition": "return touchdown passes that Brett Favre threw ;return touchdown passes that Tarvaris Jackson threw ;return number of  #1 ;return number of  #2 ;return which is highest of #3 ,  #4",
        "program": [
            "SELECT['touchdown passes that Brett Favre threw']",
            "SELECT['touchdown passes that Tarvaris Jackson threw']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdown passes that Brett Favre threw"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdown passes that Tarvaris Jackson threw"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown passes that Brett Favre threw)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown passes that Tarvaris Jackson threw)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown passes that Brett Favre threw)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown passes that Tarvaris Jackson threw)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    9
                ],
                [],
                [
                    7,
                    8
                ],
                [
                    10,
                    11
                ],
                [
                    12
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "threw",
                "more",
                "touchdown",
                "passes",
                ",",
                "Brett",
                "Favre",
                "or",
                "Tarvaris",
                "Jackson",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    5
                ],
                [],
                [
                    6
                ],
                [
                    4
                ],
                [
                    7,
                    8
                ],
                [
                    10
                ],
                [
                    9,
                    11
                ],
                [],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    6,
                    9
                ],
                [
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [],
                [
                    7
                ],
                [
                    8,
                    10,
                    11
                ],
                [],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    11
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2648_2f9189ab-fbd6-44e4-9fc9-016c4171752e",
        "question_text": "Who scored the shortest field goal?",
        "split": "train",
        "decomposition": "return field goals ;return the  shortest of #1 ;return who  scored #2",
        "program": [
            "SELECT['field goals']",
            "AGGREGATE['min', '#1']",
            "PROJECT['who scored #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "who scored #REF",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "field goals"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who scored #REF)",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who scored #REF)",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4,
                    5
                ],
                [],
                [
                    6
                ]
            ],
            "question_tokens": [
                "Who",
                "scored",
                "the",
                "shortest",
                "field",
                "goal",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    3,
                    4,
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    6
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    2
                ],
                [],
                [],
                [
                    3,
                    4,
                    5
                ],
                [],
                [],
                [
                    6
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2750_1bb7ba61-e6fe-4fb1-b51d-031aaa82e64c",
        "question_text": "How many yards longer was the longest field goal of the first half than the shortest?",
        "split": "train",
        "decomposition": "return yards of field goals in  the  first half ;return the  longest of #1 ;return the  shortest of #1 ;return the  difference of #2 and  #3",
        "program": [
            "SELECT['yards of field goals in the first half']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['min', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of field goals in the first half"
                ]
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of field goals in the first half"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals in the first half)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals in the first half)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "FILTER",
                        [
                            "SELECT",
                            "GET_QUESTION_SPAN(yards of field goals)"
                        ],
                        "GET_QUESTION_SPAN(in the first half)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "FILTER",
                        [
                            "SELECT",
                            "GET_QUESTION_SPAN(yards of field goals)"
                        ],
                        "GET_QUESTION_SPAN(in the first half)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    6
                ],
                [],
                [],
                [],
                [],
                [
                    13
                ],
                [
                    7,
                    8,
                    15
                ],
                [
                    11,
                    12
                ],
                [],
                [],
                [
                    16
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "the",
                "longest",
                "field",
                "goal",
                "of",
                "the",
                "first",
                "half",
                "than",
                "the",
                "shortest",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    13
                ],
                [],
                [
                    7,
                    8,
                    15
                ],
                [],
                [
                    12
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [],
                [
                    2,
                    3,
                    4
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    13
                ],
                [],
                [
                    7,
                    8,
                    15
                ],
                [],
                [
                    11,
                    12
                ],
                [],
                [],
                [],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    15
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    12
                ],
                [
                    5,
                    15
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    15
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    15
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1748_749d41be-3488-483b-bb8f-89b25dfc95aa",
        "question_text": "How many more residents were in Ungheni and Cahul than in Soroca and Orhei?",
        "split": "dev",
        "decomposition": "return residents in  Ungheni ;return residents in  Cahul ;return residents in  Soroca ;return residents in  Orhei ;return number of  #1 ;return number of  #2 ;return number of  #3 ;return number of  #4 ;return sum of #5 and  #6 ;return sum of #7 and  #8 ;return difference of #9 and  #10",
        "program": [
            "SELECT['residents in Ungheni']",
            "SELECT['residents in Cahul']",
            "SELECT['residents in Soroca']",
            "SELECT['residents in Orhei']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "AGGREGATE['count', '#3']",
            "AGGREGATE['count', '#4']",
            "ARITHMETIC['sum', '#5', '#6']",
            "ARITHMETIC['sum', '#7', '#8']",
            "ARITHMETIC['difference', '#9', '#10']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "residents in Ungheni"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "residents in Cahul"
                    ]
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "residents in Soroca"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "residents in Orhei"
                    ]
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(residents in Ungheni)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(residents in Cahul)"
                    ]
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(residents in Soroca)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(residents in Orhei)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(residents in Ungheni)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(residents in Cahul)"
                    ]
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(residents in Soroca)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(residents in Orhei)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "select",
            "aggregate",
            "aggregate",
            "aggregate",
            "aggregate",
            "arithmetic",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    9
                ],
                [
                    4
                ],
                [],
                [],
                [],
                [],
                [
                    6,
                    8
                ],
                [],
                [
                    7,
                    12
                ],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    13,
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "residents",
                "were",
                "in",
                "Ungheni",
                "and",
                "Cahul",
                "than",
                "in",
                "Soroca",
                "and",
                "Orhei",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    2
                ],
                [],
                [],
                [],
                [
                    1
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    6
                ],
                [],
                [
                    8
                ],
                [],
                [
                    7,
                    12
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    13
                ],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    6
                ],
                [
                    8
                ],
                [],
                [],
                [
                    7,
                    12
                ],
                [
                    9
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    13
                ],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    13
                ],
                [
                    5,
                    13
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    13
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2250_1ab72dfd-0304-4897-b65b-56a2bf0eb329",
        "question_text": "How many yards longer was Suisham's longest field goal over his shortest one?",
        "split": "train",
        "decomposition": "return yards of field goals of  Suisham ;return longest of #1 ;return shortest of #1 ;return difference of #2 and  #3",
        "program": [
            "SELECT['yards of field goals of Suisham']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['min', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of field goals of Suisham"
                ]
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of field goals of Suisham"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Suisham)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Suisham)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Suisham)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Suisham)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    10,
                    13
                ],
                [],
                [],
                [],
                [
                    8,
                    9,
                    11,
                    12
                ],
                [],
                [
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "Suisham",
                "'s",
                "longest",
                "field",
                "goal",
                "over",
                "his",
                "shortest",
                "one",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    7
                ],
                [],
                [],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    6,
                    8,
                    9,
                    11,
                    12
                ],
                [],
                [],
                [],
                [],
                [
                    13
                ],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    2,
                    4,
                    5
                ],
                [
                    6,
                    7,
                    13
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    10
                ],
                [
                    8,
                    9,
                    11,
                    12
                ],
                [],
                [],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    13
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    13
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_982_bbc0e2d7-4a5d-417e-a385-a2e81614161f",
        "question_text": "How many touchdowns did the Vikings make in the first half?",
        "split": "train",
        "decomposition": "return touchdowns of the  Vikings in  the first half ;return the  number of  #1",
        "program": [
            "SELECT['touchdowns of the Vikings in the first half']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "touchdowns of the Vikings in the first half"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdowns of the Vikings in the first half)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns of the Vikings)"
                ],
                "GET_QUESTION_SPAN(in the first half)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    6
                ],
                [
                    5,
                    7,
                    9,
                    10
                ],
                [
                    4,
                    8
                ],
                [],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "touchdowns",
                "did",
                "the",
                "Vikings",
                "make",
                "in",
                "the",
                "first",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    10
                ],
                [],
                [
                    5
                ],
                [
                    7
                ],
                [
                    6
                ],
                [
                    9
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    6
                ],
                [],
                [
                    5,
                    7,
                    9,
                    10
                ],
                [],
                [],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2373_38bd5b19-06b7-4e92-b5dc-c09938fa322e",
        "question_text": "How many more percent of Bronx residents spoke Spanish than Italian?",
        "split": "train",
        "decomposition": "return percent of Bronx residents that spoke Spanish ;return percent of Bronx residents that spoke Italian ;return difference of #1 and  #2",
        "program": [
            "SELECT['percent of Bronx residents that spoke Spanish']",
            "SELECT['percent of Bronx residents that spoke Italian']",
            "ARITHMETIC['difference', '#1', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "percent of Bronx residents that spoke Spanish"
            ],
            [
                "SELECT",
                "percent of Bronx residents that spoke Italian"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent of Bronx residents that spoke Spanish)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent of Bronx residents that spoke Italian)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent of Bronx residents that spoke Spanish)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent of Bronx residents that spoke Italian)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    4
                ],
                [
                    5
                ],
                [
                    6,
                    7,
                    9
                ],
                [
                    8,
                    10
                ],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "percent",
                "of",
                "Bronx",
                "residents",
                "spoke",
                "Spanish",
                "than",
                "Italian",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    5
                ],
                [
                    6,
                    7,
                    9
                ],
                [],
                [
                    8
                ],
                [],
                [],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3
                ],
                [
                    2,
                    6
                ],
                [],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    7,
                    9
                ],
                [
                    8
                ],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_759_72660ce8-ca96-49b0-ab91-dca9025dd2a9",
        "question_text": "How many 44-yard field goals were made in the game?",
        "split": "train",
        "decomposition": "return field goals that were made in  the game ;return #1 that are  44-yard ;return number of  #2",
        "program": [
            "SELECT['field goals that were made in the game']",
            "FILTER['#1', 'that are 44-yard']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "field goals that were made in the game"
                ],
                "that are 44-yard"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that were made in the game)"
                ],
                "GET_QUESTION_SPAN(that are 44-yard)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_EQ",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that were made in the game)"
                ],
                "GET_QUESTION_NUMBER(44)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    6
                ],
                [
                    7,
                    8
                ],
                [
                    10
                ],
                [
                    5,
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "44-yard",
                "field",
                "goals",
                "were",
                "made",
                "in",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4
                ],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    5,
                    6
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    5
                ],
                [
                    4,
                    6
                ],
                [
                    7
                ],
                [],
                [
                    10
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1240_cef3f6a2-7a96-46de-a2bb-68c1c5fceeaf",
        "question_text": "How many more field goals did Nick Folk make compared to Joe Nedney?",
        "split": "dev",
        "decomposition": "return field goals that Nick Folk did make ;return field goals that Joe Nedney did make ;return number of  #1 ;return number of  #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['field goals that Nick Folk did make']",
            "SELECT['field goals that Joe Nedney did make']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals that Nick Folk did make"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals that Joe Nedney did make"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that Nick Folk did make)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that Joe Nedney did make)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that Nick Folk did make)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that Joe Nedney did make)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    9
                ],
                [
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [
                    7
                ],
                [
                    8,
                    12
                ],
                [
                    10,
                    11
                ],
                [
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "field",
                "goals",
                "did",
                "Nick",
                "Folk",
                "make",
                "compared",
                "to",
                "Joe",
                "Nedney",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4,
                    5
                ],
                [],
                [],
                [],
                [
                    6
                ],
                [
                    7,
                    8
                ],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [
                    3,
                    4,
                    5,
                    6,
                    7
                ],
                [],
                [],
                [],
                [
                    9
                ],
                [
                    8,
                    12
                ],
                [
                    11
                ],
                [],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    4
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    12
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    12
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2324_e8de48db-6ed4-4306-a253-3ec1fc30d744",
        "question_text": "How many yards were Greg Pruitt's punt returns on average, to two decimal places?",
        "split": "train",
        "decomposition": "return yards of Greg Pruitt 's punt returns ;return average of #1 to two decimal places",
        "program": [
            "SELECT[\"yards of Greg Pruitt 's punt returns\"]",
            "AGGREGATE['avg', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "yards of Greg Pruitt 's punt returns"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of Greg Pruitt 's punt returns)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of Greg Pruitt 's punt returns)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    13,
                    14,
                    15
                ],
                [
                    12
                ],
                [
                    16
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "were",
                "Greg",
                "Pruitt",
                "'s",
                "punt",
                "returns",
                "on",
                "average",
                ",",
                "to",
                "two",
                "decimal",
                "places",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1,
                    3
                ],
                [
                    2,
                    4,
                    5,
                    6,
                    10,
                    11,
                    14,
                    15
                ],
                [],
                [
                    8
                ],
                [
                    7,
                    9,
                    12,
                    13
                ],
                [],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3
                ],
                [
                    2,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    13,
                    14,
                    15
                ],
                [],
                [
                    12
                ],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    15
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    15
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    15
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_254_c3f82783-9713-4bc6-81cd-a658755f549d",
        "question_text": "How many TD passes did Brady have in the first half?",
        "split": "train",
        "decomposition": "return first half TD passes of Brady ;return number of  #1",
        "program": [
            "SELECT['first half TD passes of Brady']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "first half TD passes of Brady"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(first half TD passes of Brady)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(first half TD passes of Brady)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [
                    7,
                    8
                ],
                [
                    9,
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "TD",
                "passes",
                "did",
                "Brady",
                "have",
                "in",
                "the",
                "first",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    4
                ],
                [],
                [
                    5,
                    6
                ],
                [
                    7,
                    8,
                    9
                ],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    4,
                    6
                ],
                [
                    7,
                    8
                ],
                [],
                [
                    9,
                    10,
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_502_c3d613cf-115f-4793-81ae-b3f0653bd26a",
        "question_text": "In which quarters did only the Panther's score?",
        "split": "train",
        "decomposition": "return quarters ;return who  scores in  #1 ;return #1 where #2 is only the  Panther 's",
        "program": [
            "SELECT['quarters']",
            "PROJECT['who scores in #REF', '#1']",
            "COMPARATIVE['#1', '#2', \"is only the Panther 's\"]"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "quarters"
            ],
            [
                "PROJECT",
                "who scores in #REF",
                [
                    "SELECT",
                    "quarters"
                ]
            ],
            "is only the Panther 's"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(quarters)"
            ],
            [
                "PARTIAL_GROUP_sum",
                [
                    "PARTIAL_SELECT_NUM",
                    "GET_QUESTION_SPAN(who scores in #REF)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is only the Panther 's)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(quarters)"
            ],
            [
                "PARTIAL_SELECT_SINGLE_NUM",
                "GET_QUESTION_SPAN(who scores in #REF)"
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is only the Panther 's)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    6
                ],
                [
                    3,
                    5,
                    7
                ],
                [],
                [
                    4
                ],
                [],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "In",
                "which",
                "quarters",
                "did",
                "only",
                "the",
                "Panther",
                "'s",
                "score",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2
                ],
                [
                    3
                ],
                [],
                [
                    4
                ],
                [],
                [
                    6
                ],
                [],
                [
                    7,
                    8
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    1
                ],
                [
                    0
                ],
                [
                    2,
                    6
                ],
                [],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    8
                ],
                [
                    9
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2206_82e6b949-8344-4fb8-bf89-7883259f2259",
        "question_text": "how many yards did the 49ers get?",
        "split": "train",
        "decomposition": "return yards of the  49ers ;return sum of #1",
        "program": [
            "SELECT['yards of the 49ers']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "yards of the 49ers"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of the 49ers)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of the 49ers)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    6
                ],
                [
                    4,
                    5
                ],
                [
                    7
                ]
            ],
            "question_tokens": [
                "how",
                "many",
                "yards",
                "did",
                "the",
                "49ers",
                "get",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    4,
                    5
                ],
                [
                    6
                ],
                [],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    6
                ],
                [
                    4,
                    5
                ],
                [],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2629_db340d2d-1936-418a-adf5-ce974d138302",
        "question_text": "Which team failed to score at the half?",
        "split": "train",
        "decomposition": "return teams ;return #1 that score at the  half ;return #1 besides  #2",
        "program": [
            "SELECT['teams']",
            "FILTER['#1', 'that score at the half']",
            "DISCARD['#1', '#2']"
        ],
        "nested_expression": [
            "DISCARD",
            [
                "SELECT",
                "teams"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "teams"
                ],
                "that score at the half"
            ]
        ],
        "typed_nested_expression": [
            "DISCARD",
            [
                "SELECT",
                "GET_QUESTION_SPAN(teams)"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(teams)"
                ],
                "GET_QUESTION_SPAN(that score at the half)"
            ]
        ],
        "drop_nested_expression": [
            "DISCARD",
            [
                "SELECT",
                "GET_QUESTION_SPAN(teams)"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(teams)"
                ],
                "GET_QUESTION_SPAN(that score at the half)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "discard"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    2,
                    4
                ],
                [
                    3
                ],
                [],
                [
                    0,
                    7
                ],
                [
                    5,
                    6
                ],
                [],
                [
                    8
                ]
            ],
            "question_tokens": [
                "Which",
                "team",
                "failed",
                "to",
                "score",
                "at",
                "the",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    4,
                    7
                ],
                [],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [],
                [
                    1,
                    2,
                    4
                ],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    5
                ],
                [],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    7
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_3380_5604c12d-792e-4b27-aaa6-cde94e317ed5",
        "question_text": "Which of the surrounding plateaus have a height at or above 2500m?",
        "split": "train",
        "decomposition": "return surrounding plateaus ;return height of #1 ;return #1 where #2 is at least 2500m",
        "program": [
            "SELECT['surrounding plateaus']",
            "PROJECT['height of #REF', '#1']",
            "COMPARATIVE['#1', '#2', 'is at least 2500m']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "surrounding plateaus"
            ],
            [
                "PROJECT",
                "height of #REF",
                [
                    "SELECT",
                    "surrounding plateaus"
                ]
            ],
            "is at least 2500m"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(surrounding plateaus)"
            ],
            [
                "PARTIAL_GROUP_sum",
                [
                    "PARTIAL_SELECT_NUM",
                    "GET_QUESTION_SPAN(height of #REF)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is at least 2500m)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(surrounding plateaus)"
            ],
            [
                "PARTIAL_SELECT_SINGLE_NUM",
                "GET_QUESTION_SPAN(height of #REF)"
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is at least 2500m)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    3
                ],
                [
                    1,
                    2,
                    5,
                    6,
                    8
                ],
                [],
                [
                    4,
                    7
                ],
                [
                    9
                ],
                [
                    10,
                    11,
                    12
                ],
                [
                    13
                ]
            ],
            "question_tokens": [
                "Which",
                "of",
                "the",
                "surrounding",
                "plateaus",
                "have",
                "a",
                "height",
                "at",
                "or",
                "above",
                "2500",
                "m",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [
                    3
                ],
                [],
                [],
                [
                    5
                ],
                [
                    4
                ],
                [
                    7
                ],
                [
                    6,
                    8,
                    9
                ],
                [],
                [],
                [
                    10,
                    11,
                    12
                ],
                [],
                [],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0
                ],
                [
                    3,
                    4
                ],
                [],
                [
                    8,
                    9
                ],
                [],
                [
                    7
                ],
                [
                    1
                ],
                [],
                [
                    10,
                    11
                ],
                [
                    12,
                    13
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    4
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    1,
                    4
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    12
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    12
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1159_627b6d78-4a07-43e3-bb58-1435c161f614",
        "question_text": "Which receiver had more touchdown receptions, Laveranues Coles or Jerricho Cotchery?",
        "split": "train",
        "decomposition": "return touchdown receptions of Laveranues Coles ;return touchdown receptions of Jerricho Cotchery ;return the  number of  #1 ;return the  number of  #2 ;return which is more of #3 ,  #4",
        "program": [
            "SELECT['touchdown receptions of Laveranues Coles']",
            "SELECT['touchdown receptions of Jerricho Cotchery']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdown receptions of Laveranues Coles"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdown receptions of Jerricho Cotchery"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown receptions of Laveranues Coles)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown receptions of Jerricho Cotchery)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown receptions of Laveranues Coles)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown receptions of Jerricho Cotchery)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    6,
                    9
                ],
                [],
                [
                    5,
                    7,
                    8
                ],
                [
                    10
                ],
                [
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "Which",
                "receiver",
                "had",
                "more",
                "touchdown",
                "receptions",
                ",",
                "Laveranues",
                "Coles",
                "or",
                "Jerricho",
                "Cotchery",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    6
                ],
                [
                    4,
                    5
                ],
                [],
                [
                    7
                ],
                [
                    8,
                    9
                ],
                [],
                [
                    10,
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    6,
                    9
                ],
                [
                    3,
                    4
                ],
                [],
                [
                    7
                ],
                [
                    5,
                    8
                ],
                [],
                [
                    10
                ],
                [
                    11,
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3097_612b955c-7ef7-4ebd-8a78-748495b4a324",
        "question_text": "What was the Bears longest play of the year?",
        "split": "train",
        "decomposition": "return plays of the  Bears ;return longest of #1 of  the  year",
        "program": [
            "SELECT['plays of the Bears']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "plays of the Bears"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(plays of the Bears)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(plays of the Bears)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    4,
                    5
                ],
                [
                    0,
                    2,
                    6,
                    7,
                    8
                ],
                [
                    3,
                    9
                ]
            ],
            "question_tokens": [
                "What",
                "was",
                "the",
                "Bears",
                "longest",
                "play",
                "of",
                "the",
                "year",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    4
                ],
                [
                    8
                ],
                [
                    3
                ],
                [
                    5,
                    6,
                    7
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    8
                ],
                [
                    1
                ],
                [
                    4,
                    5
                ],
                [
                    2,
                    6,
                    7
                ],
                [],
                [
                    3,
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    8
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1348_5610660f-8b16-40fb-af9c-85aa61b041f6",
        "question_text": "How many years into the war did Seongjong die?",
        "split": "train",
        "decomposition": "return years of the  war ;return the  lowest of #1 ;return year when  Seongjong dies ;return the  difference of #3 and  #2",
        "program": [
            "SELECT['years of the war']",
            "AGGREGATE['min', '#1']",
            "SELECT['year when Seongjong dies']",
            "ARITHMETIC['difference', '#3', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "year when Seongjong dies"
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "years of the war"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year when Seongjong dies)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(years of the war)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Two_Events",
            [
                "SELECT",
                "GET_QUESTION_SPAN(year when Seongjong dies)"
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(years of the war)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    4
                ],
                [
                    3,
                    5
                ],
                [
                    7
                ],
                [
                    6
                ],
                [
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "into",
                "the",
                "war",
                "did",
                "Seongjong",
                "die",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [],
                [],
                [
                    3
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    6
                ],
                [],
                [
                    7
                ],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [],
                [
                    3,
                    5
                ],
                [],
                [],
                [],
                [],
                [
                    7,
                    8
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1138_a9335a3d-e48a-40bb-b3f6-db30148dc3ae",
        "question_text": "How many days passed between the death of Diego Silang and Gabriela Silang?",
        "split": "train",
        "decomposition": "return date of the  death of  Diego Silang  ;return date of the  death of  Gabriela Silang  ;return difference of #2 and  #1 in  days",
        "program": [
            "SELECT['date of the death of Diego Silang']",
            "SELECT['date of the death of Gabriela Silang']",
            "ARITHMETIC['difference', '#2', '#1']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "date of the death of Gabriela Silang"
            ],
            [
                "SELECT",
                "date of the death of Diego Silang"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(date of the death of Gabriela Silang)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(date of the death of Diego Silang)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(date of the death of Gabriela Silang)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(date of the death of Diego Silang)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    4
                ],
                [
                    5,
                    7
                ],
                [
                    6
                ],
                [
                    8,
                    9,
                    10,
                    12
                ],
                [
                    11
                ],
                [
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "days",
                "passed",
                "between",
                "the",
                "death",
                "of",
                "Diego",
                "Silang",
                "and",
                "Gabriela",
                "Silang",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4
                ],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [
                    8,
                    10
                ],
                [],
                [
                    11
                ],
                [
                    9,
                    12
                ],
                [],
                [],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    3,
                    4
                ],
                [],
                [],
                [],
                [
                    9
                ],
                [
                    6
                ],
                [],
                [
                    8,
                    10
                ],
                [
                    11
                ],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    12
                ],
                [
                    4,
                    12
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    12
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    12
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3012_abb9a520-8ed6-441a-ae88-64fe25777b38",
        "question_text": "How many more points did the Eagles have at halftime?",
        "split": "train",
        "decomposition": "return points at halftime ;return points of the  Eagles at halftime ;return difference of #1 and  #2 ;return difference of #2 and  #3",
        "program": [
            "SELECT['points at halftime']",
            "SELECT['points of the Eagles at halftime']",
            "ARITHMETIC['difference', '#1', '#2']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "points of the Eagles at halftime"
            ],
            [
                "ARITHMETIC_difference",
                [
                    "SELECT",
                    "points at halftime"
                ],
                [
                    "SELECT",
                    "points of the Eagles at halftime"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points of the Eagles at halftime)"
                ]
            ],
            [
                "ARITHMETIC_difference",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(points at halftime)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(points of the Eagles at halftime)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points of the Eagles at halftime)"
                ]
            ],
            [
                "ARITHMETIC_difference",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(points at halftime)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(points of the Eagles at halftime)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    8
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "points",
                "did",
                "the",
                "Eagles",
                "have",
                "at",
                "halftime",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    8
                ],
                [],
                [
                    9
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    4
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    7
                ],
                [],
                [],
                [],
                [
                    9,
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2325_8368c73f-3ee2-4720-9013-377b16d1181d",
        "question_text": "How many yards long, to two decimal places, were Branch's receptions on average?",
        "split": "train",
        "decomposition": "return yards of receptions of  Branch ;return average of #1 to two decimal places",
        "program": [
            "SELECT['yards of receptions of Branch']",
            "AGGREGATE['avg', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "yards of receptions of Branch"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of receptions of Branch)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of receptions of Branch)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    6,
                    7,
                    8,
                    9,
                    11,
                    12,
                    13,
                    14,
                    15
                ],
                [
                    5,
                    10
                ],
                [
                    16
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "long",
                ",",
                "to",
                "two",
                "decimal",
                "places",
                ",",
                "were",
                "Branch",
                "'s",
                "receptions",
                "on",
                "average",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    6,
                    7,
                    8,
                    9,
                    15
                ],
                [
                    10
                ],
                [
                    5
                ],
                [
                    11,
                    12,
                    13,
                    14
                ],
                [],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    10
                ],
                [
                    2,
                    3,
                    4,
                    6,
                    7,
                    8,
                    9,
                    11,
                    12,
                    13,
                    14,
                    15
                ],
                [
                    5
                ],
                [],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    15
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    15
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_3195_f8c184d6-68b7-469b-9b20-7af0b77dfa70",
        "question_text": "What two credits largely refunded the FICA and or SECA payments of low salaries workers?",
        "split": "train",
        "decomposition": "return credits that largely refunded the  FICA payments of low salary workers ;return credits that largely refunded the  SECA payments of low salary workers ;return #1 ,  #2",
        "program": [
            "SELECT['credits that largely refunded the FICA payments of low salary workers']",
            "SELECT['credits that largely refunded the SECA payments of low salary workers']",
            "UNION['#1', '#2']"
        ],
        "nested_expression": [
            "UNION",
            [
                "SELECT",
                "credits that largely refunded the FICA payments of low salary workers"
            ],
            [
                "SELECT",
                "credits that largely refunded the SECA payments of low salary workers"
            ]
        ],
        "typed_nested_expression": [
            "UNION",
            [
                "SELECT",
                "GET_QUESTION_SPAN(credits that largely refunded the FICA payments of low salary workers)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(credits that largely refunded the SECA payments of low salary workers)"
            ]
        ],
        "drop_nested_expression": [
            "UNION",
            [
                "SELECT",
                "GET_QUESTION_SPAN(credits that largely refunded the FICA payments of low salary workers)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(credits that largely refunded the SECA payments of low salary workers)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "union"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    6,
                    7
                ],
                [
                    5
                ],
                [
                    8,
                    9,
                    10
                ],
                [
                    11,
                    12
                ],
                [
                    13,
                    14,
                    15
                ]
            ],
            "question_tokens": [
                "What",
                "two",
                "credits",
                "largely",
                "refunded",
                "the",
                "FICA",
                "and",
                "or",
                "SECA",
                "payments",
                "of",
                "low",
                "salaries",
                "workers",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    4
                ],
                [],
                [
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    7
                ],
                [
                    9
                ],
                [
                    10,
                    11
                ],
                [],
                [
                    12,
                    13,
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    8
                ],
                [
                    2,
                    3,
                    4,
                    6,
                    7
                ],
                [],
                [
                    9
                ],
                [
                    10
                ],
                [],
                [
                    12,
                    13
                ],
                [
                    14,
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    14
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1836_de64e95b-7bdb-4bf2-927f-0b3693fe4d3a",
        "question_text": "Which players caught two touchdown passes?",
        "split": "train",
        "decomposition": "return touchdown passes ;return players that caught #1 ;return the  number of  #1 for each #2 ;return #2 where #3 is equal to two",
        "program": [
            "SELECT['touchdown passes']",
            "PROJECT['players that caught #REF', '#1']",
            "GROUP['count', '#1', '#2']",
            "COMPARATIVE['#2', '#3', 'is equal to two']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "PROJECT",
                "players that caught #REF",
                [
                    "SELECT",
                    "touchdown passes"
                ]
            ],
            [
                "GROUP_count",
                [
                    "SELECT",
                    "touchdown passes"
                ],
                [
                    "PROJECT",
                    "players that caught #REF",
                    [
                        "SELECT",
                        "touchdown passes"
                    ]
                ]
            ],
            "is equal to two"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(players that caught #REF)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(touchdown passes)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is equal to two)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(players that caught #REF)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(touchdown passes)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is equal to two)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2
                ],
                [
                    3,
                    4,
                    5
                ],
                [],
                [],
                [
                    6
                ]
            ],
            "question_tokens": [
                "Which",
                "players",
                "caught",
                "two",
                "touchdown",
                "passes",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    2,
                    3
                ],
                [],
                [
                    4,
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    6
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0
                ],
                [
                    1
                ],
                [],
                [],
                [],
                [
                    2
                ],
                [
                    3
                ],
                [],
                [
                    4,
                    5
                ],
                [],
                [],
                [
                    6
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1838_d729b650-0e09-4c6c-b534-89fbf546f08e",
        "question_text": "Which player kicked at most two field goals?",
        "split": "dev",
        "decomposition": "return players ;return field goals that #1 kicked ;return the  number of  #2 for each #1 ;return #1 where #3 is at most two",
        "program": [
            "SELECT['players']",
            "PROJECT['field goals that #REF kicked', '#1']",
            "GROUP['count', '#2', '#1']",
            "COMPARATIVE['#1', '#3', 'is at most two']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "players"
            ],
            [
                "GROUP_count",
                [
                    "PROJECT",
                    "field goals that #REF kicked",
                    [
                        "SELECT",
                        "players"
                    ]
                ],
                [
                    "SELECT",
                    "players"
                ]
            ],
            "is at most two"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(players)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(field goals that #REF kicked)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is at most two)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(players)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(field goals that #REF kicked)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is at most two)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0
                ],
                [
                    3
                ],
                [],
                [
                    1,
                    2,
                    4
                ],
                [
                    5,
                    6,
                    7
                ],
                [],
                [],
                [
                    8
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "kicked",
                "at",
                "most",
                "two",
                "field",
                "goals",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    1,
                    2,
                    5
                ],
                [],
                [
                    4,
                    6,
                    7
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [
                    2
                ],
                [
                    4,
                    5,
                    6
                ],
                [],
                [
                    7
                ],
                [],
                [],
                [
                    8
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    7
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2829_8f1a2c1c-c6bc-4e18-822f-ad33292d8e29",
        "question_text": "How many more yards of total field goals did Shaun Suisham make than Randy Bullock?",
        "split": "train",
        "decomposition": "return yards of field goals from  Shaun Suisham ;return yards of field goals from  Randy Bullock ;return the  sum of #1 ;return the  sum of #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['yards of field goals from Shaun Suisham']",
            "SELECT['yards of field goals from Randy Bullock']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of field goals from Shaun Suisham"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of field goals from Randy Bullock"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals from Shaun Suisham)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals from Randy Bullock)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals from Shaun Suisham)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals from Randy Bullock)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    12
                ],
                [
                    3,
                    5,
                    6,
                    7
                ],
                [
                    4
                ],
                [],
                [
                    8,
                    9,
                    10,
                    11
                ],
                [
                    14
                ],
                [
                    13,
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "yards",
                "of",
                "total",
                "field",
                "goals",
                "did",
                "Shaun",
                "Suisham",
                "make",
                "than",
                "Randy",
                "Bullock",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    5,
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [
                    7,
                    8,
                    10
                ],
                [],
                [],
                [
                    13,
                    14
                ],
                [
                    11
                ],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    6
                ],
                [
                    3,
                    5,
                    7,
                    8
                ],
                [],
                [],
                [],
                [
                    12
                ],
                [
                    9,
                    10,
                    11
                ],
                [
                    13
                ],
                [
                    14
                ],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    14
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_333_b0202dda-9f59-463d-bc3f-e92c959710e7",
        "question_text": "How many years was it from when the Danish claimed Saint John and De Buyck's death?",
        "split": "train",
        "decomposition": "return year the  Danish claimed Saint John ;return year of De Buyck 's death ;return difference of #1 and  #2",
        "program": [
            "SELECT['year the Danish claimed Saint John']",
            "SELECT[\"year of De Buyck 's death\"]",
            "ARITHMETIC['difference', '#1', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "year the Danish claimed Saint John"
            ],
            [
                "SELECT",
                "year of De Buyck 's death"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year the Danish claimed Saint John)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year of De Buyck 's death)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Two_Events",
            [
                "SELECT",
                "GET_QUESTION_SPAN(year the Danish claimed Saint John)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(year of De Buyck 's death)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4,
                    6,
                    10,
                    12,
                    16
                ],
                [
                    3,
                    5,
                    7,
                    8,
                    9
                ],
                [],
                [
                    11,
                    13,
                    14,
                    15
                ],
                [
                    17
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "was",
                "it",
                "from",
                "when",
                "the",
                "Danish",
                "claimed",
                "Saint",
                "John",
                "and",
                "De",
                "Buyck",
                "'s",
                "death",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    4,
                    6,
                    10
                ],
                [
                    3
                ],
                [
                    5,
                    8
                ],
                [],
                [],
                [
                    9
                ],
                [
                    11,
                    12,
                    14
                ],
                [
                    13,
                    15,
                    16
                ],
                [],
                [
                    17
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    4,
                    5
                ],
                [
                    3,
                    6,
                    10,
                    11,
                    12,
                    16
                ],
                [
                    8,
                    9
                ],
                [],
                [],
                [
                    13,
                    14,
                    15
                ],
                [],
                [
                    17
                ]
            ],
            "question_spans": [
                [
                    0,
                    2
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    16
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    16
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    16
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    16
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    16
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    15
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    16
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    15
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_437_a54b76bc-b2e8-4dde-a168-235049c597dd",
        "question_text": "Who had fewer total yards, Wilkins or Rackers?",
        "split": "train",
        "decomposition": "return yards of Wilkins ;return yards of Rackers ;return sum of #1 ;return sum of #2 ;return which is lowest of #3 ,  #4",
        "program": [
            "SELECT['yards of Wilkins']",
            "SELECT['yards of Rackers']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "COMPARISON['min', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of Wilkins"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of Rackers"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_sum_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of Wilkins)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of Rackers)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_sum_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of Wilkins)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of Rackers)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    6,
                    7
                ],
                [],
                [
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "Who",
                "had",
                "fewer",
                "total",
                "yards",
                ",",
                "Wilkins",
                "or",
                "Rackers",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3
                ],
                [],
                [],
                [],
                [
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    7,
                    8
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    4
                ],
                [
                    5,
                    7
                ],
                [
                    1,
                    2,
                    3
                ],
                [],
                [],
                [],
                [
                    6
                ],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    8
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_136_805577f4-0817-4b39-bf05-4bee8828f932",
        "question_text": "How many shows have Ant & Dec hosted?",
        "split": "train",
        "decomposition": "return shows that Ant & Dec have hosted ;return the  number of  #1",
        "program": [
            "SELECT['shows that Ant & Dec have hosted']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "shows that Ant & Dec have hosted"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(shows that Ant & Dec have hosted)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "SELECT",
                "GET_QUESTION_SPAN(shows that Ant & Dec have hosted)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4
                ],
                [
                    5,
                    6,
                    7,
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "shows",
                "have",
                "Ant",
                "&",
                "Dec",
                "hosted",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [],
                [
                    3,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3
                ],
                [],
                [
                    4
                ],
                [
                    5,
                    6,
                    7
                ],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    7
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_280_be354fc0-0aaa-4444-bf3a-f5b514c6e6bf",
        "question_text": "Which did the Saimese army invade second, Burma or Chiang Mai?",
        "split": "train",
        "decomposition": "return when  the Saimese army invades Burma ;return when  the Saimese army invades Chiang Mai ;return which is  the highest of  #1 , #2",
        "program": [
            "SELECT['when the Saimese army invades Burma']",
            "SELECT['when the Saimese army invades Chiang Mai']",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "when the Saimese army invades Burma"
            ],
            [
                "SELECT",
                "when the Saimese army invades Chiang Mai"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when the Saimese army invades Burma)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when the Saimese army invades Chiang Mai)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when the Saimese army invades Burma)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when the Saimese army invades Chiang Mai)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    3,
                    6,
                    7,
                    9
                ],
                [
                    1,
                    2,
                    4,
                    5
                ],
                [
                    8
                ],
                [
                    10,
                    11
                ],
                [
                    12
                ]
            ],
            "question_tokens": [
                "Which",
                "did",
                "the",
                "Saimese",
                "army",
                "invade",
                "second",
                ",",
                "Burma",
                "or",
                "Chiang",
                "Mai",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    3,
                    6,
                    7
                ],
                [],
                [
                    4
                ],
                [
                    5
                ],
                [
                    8
                ],
                [],
                [
                    9
                ],
                [],
                [
                    10,
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    4,
                    7,
                    9
                ],
                [
                    3,
                    6
                ],
                [
                    5
                ],
                [],
                [
                    8
                ],
                [
                    10
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    11
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    4
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    6,
                    11
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1481_f9350607-134d-49ae-bb29-e77697f2a3e6",
        "question_text": "How many years after the 1648 treaty did Sweden attack?",
        "split": "train",
        "decomposition": "return the  year when  Sweden attacks ;return the year of the  1648 treaty ;return the  difference of #1 and  #2",
        "program": [
            "SELECT['the year when Sweden attacks']",
            "SELECT['the year of the 1648 treaty']",
            "ARITHMETIC['difference', '#1', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "the year when Sweden attacks"
            ],
            [
                "SELECT",
                "the year of the 1648 treaty"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the year when Sweden attacks)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the year of the 1648 treaty)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Two_Events",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the year when Sweden attacks)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(the year of the 1648 treaty)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    6
                ],
                [
                    4
                ],
                [
                    5
                ],
                [
                    7,
                    8,
                    9
                ],
                [
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "after",
                "the",
                "1648",
                "treaty",
                "did",
                "Sweden",
                "attack",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3
                ],
                [],
                [],
                [
                    4
                ],
                [
                    5
                ],
                [],
                [
                    6,
                    7
                ],
                [
                    8,
                    9
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3
                ],
                [
                    6
                ],
                [],
                [
                    5
                ],
                [],
                [
                    8
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2053_7c41554b-37a6-4e87-a3f7-c8d4f621e8dd",
        "question_text": "What was declared eradicated first, rinderpest or smallpox?",
        "split": "train",
        "decomposition": "return when  was  rinderpest declared to be eradicated ;return when  was  smallpox declared to be eradicated ;return which is the  lowest of #1 ,  #2",
        "program": [
            "SELECT['when was rinderpest declared to be eradicated']",
            "SELECT['when was smallpox declared to be eradicated']",
            "COMPARISON['min', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "when was rinderpest declared to be eradicated"
            ],
            [
                "SELECT",
                "when was smallpox declared to be eradicated"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was rinderpest declared to be eradicated)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was smallpox declared to be eradicated)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was rinderpest declared to be eradicated)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was smallpox declared to be eradicated)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    4,
                    5,
                    7
                ],
                [
                    1,
                    2,
                    3
                ],
                [
                    6
                ],
                [],
                [
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "What",
                "was",
                "declared",
                "eradicated",
                "first",
                ",",
                "rinderpest",
                "or",
                "smallpox",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    4,
                    5
                ],
                [
                    1
                ],
                [
                    2,
                    3
                ],
                [],
                [],
                [],
                [
                    6
                ],
                [
                    7
                ],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    5,
                    7
                ],
                [
                    3,
                    4
                ],
                [
                    2
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    8,
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    8
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1093_4569787c-f322-43ea-b0f2-ef7907072ea7",
        "question_text": "How many years was the Russian Civil War?",
        "split": "train",
        "decomposition": "return years of the  Russian Civil War ;return number of  #1",
        "program": [
            "SELECT['years of the Russian Civil War']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "years of the Russian Civil War"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years of the Russian Civil War)"
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Single_Event",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years of the Russian Civil War)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    6,
                    7
                ],
                [
                    4,
                    5
                ],
                [
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "was",
                "the",
                "Russian",
                "Civil",
                "War",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    6
                ],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    6,
                    7
                ],
                [
                    4
                ],
                [
                    5
                ],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    7
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1868_c2245cbd-6ec5-48a2-a2ff-2db983337b98",
        "question_text": "Which had a lower amount of poverty, families or population?",
        "split": "train",
        "decomposition": "return amount of poverty of  families ;return amount of poverty of  the  population ;return which was  lowest of #1 ,  #2",
        "program": [
            "SELECT['amount of poverty of families']",
            "SELECT['amount of poverty of the population']",
            "COMPARISON['min', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "amount of poverty of families"
            ],
            [
                "SELECT",
                "amount of poverty of the population"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(amount of poverty of families)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(amount of poverty of the population)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(amount of poverty of families)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(amount of poverty of the population)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    4,
                    7,
                    9
                ],
                [
                    2,
                    5
                ],
                [
                    6,
                    8
                ],
                [],
                [
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "Which",
                "had",
                "a",
                "lower",
                "amount",
                "of",
                "poverty",
                ",",
                "families",
                "or",
                "population",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3,
                    4
                ],
                [],
                [
                    2
                ],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [
                    7
                ],
                [
                    9,
                    10
                ],
                [
                    8
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2,
                    7,
                    9
                ],
                [
                    3,
                    4
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    8
                ],
                [
                    10,
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    1,
                    10
                ],
                [
                    2,
                    10
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1356_de7546a7-717a-4e90-bbe1-c50cf0144fde",
        "question_text": "How many men died if Colonel Cabrera and 26 men were killed?",
        "split": "dev",
        "decomposition": "return men  that died if Colonel Cabrera and  26 men were killed ;return number of  #1",
        "program": [
            "SELECT['men that died if Colonel Cabrera and 26 men were killed']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "men that died if Colonel Cabrera and 26 men were killed"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(men that died if Colonel Cabrera and 26 men were killed)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "SELECT",
                "GET_QUESTION_SPAN(men that died if Colonel Cabrera and 26 men were killed)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4,
                    5,
                    6,
                    7,
                    9,
                    10,
                    11
                ],
                [
                    8
                ],
                [
                    3,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "men",
                "died",
                "if",
                "Colonel",
                "Cabrera",
                "and",
                "26",
                "men",
                "were",
                "killed",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    2,
                    4,
                    7,
                    9
                ],
                [
                    3,
                    5,
                    10
                ],
                [
                    6
                ],
                [
                    8
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    4,
                    10
                ],
                [
                    2,
                    5,
                    6,
                    7,
                    9,
                    11
                ],
                [
                    3,
                    8
                ],
                [],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    11
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    11
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1516_78217f0c-768b-4b40-a692-35fbe7f46826",
        "question_text": "How many more total yards of field goals did Robbie Gould make than Ryan Longwell?",
        "split": "dev",
        "decomposition": "return yards of field goals that Robbie Gould did make ;return yards of field goals that Ryan Longwell did make ;return sum of #1 ;return sum of #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['yards of field goals that Robbie Gould did make']",
            "SELECT['yards of field goals that Ryan Longwell did make']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of field goals that Robbie Gould did make"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of field goals that Ryan Longwell did make"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals that Robbie Gould did make)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals that Ryan Longwell did make)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals that Robbie Gould did make)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals that Ryan Longwell did make)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    12
                ],
                [
                    3,
                    4,
                    6,
                    7
                ],
                [
                    5
                ],
                [],
                [
                    8,
                    9,
                    10,
                    11,
                    13
                ],
                [
                    14
                ],
                [
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "total",
                "yards",
                "of",
                "field",
                "goals",
                "did",
                "Robbie",
                "Gould",
                "make",
                "than",
                "Ryan",
                "Longwell",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4,
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [
                    7,
                    8
                ],
                [],
                [
                    10,
                    13
                ],
                [],
                [
                    11
                ],
                [
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    6
                ],
                [
                    3,
                    4,
                    7,
                    8
                ],
                [],
                [],
                [],
                [
                    12,
                    14
                ],
                [
                    9,
                    10,
                    11,
                    13
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    1,
                    4
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    14
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_37_2a97e0bb-e035-4633-8750-b21362cb3717",
        "question_text": "How many years after forming did  the 5th Light Infantry get it's current name?",
        "split": "train",
        "decomposition": "return year of the  forming of  the 5th Light Infantry ;return year when  the  5th Light Infantry get it 's current name ;return the  difference of #2 and  #1",
        "program": [
            "SELECT['year of the forming of the 5th Light Infantry']",
            "SELECT[\"year when the 5th Light Infantry get it 's current name\"]",
            "ARITHMETIC['difference', '#2', '#1']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "year when the 5th Light Infantry get it 's current name"
            ],
            [
                "SELECT",
                "year of the forming of the 5th Light Infantry"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year when the 5th Light Infantry get it 's current name)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year of the forming of the 5th Light Infantry)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Two_Events",
            [
                "SELECT",
                "GET_QUESTION_SPAN(year when the 5th Light Infantry get it 's current name)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(year of the forming of the 5th Light Infantry)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    11
                ],
                [
                    5,
                    6,
                    7,
                    8
                ],
                [],
                [
                    9,
                    10,
                    12,
                    14
                ],
                [
                    13,
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "after",
                "forming",
                "did",
                "the",
                "5th",
                "Light",
                "Infantry",
                "get",
                "it",
                "'s",
                "current",
                "name",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    4,
                    11
                ],
                [],
                [
                    5
                ],
                [
                    7,
                    8
                ],
                [],
                [],
                [
                    9,
                    14
                ],
                [
                    10,
                    12,
                    13
                ],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4,
                    11
                ],
                [],
                [],
                [
                    7,
                    8,
                    10
                ],
                [],
                [
                    9,
                    12,
                    14
                ],
                [],
                [
                    13,
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    14
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2468_00435631-6cd0-4048-846e-d5c5aba8517f",
        "question_text": "How many more points did Eagles score in the second half than Steelers?",
        "split": "train",
        "decomposition": "return second half points of the  Eagles ;return second half points of the  Steelers ;return sum of #1 ;return sum of #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['second half points of the Eagles']",
            "SELECT['second half points of the Steelers']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "second half points of the Eagles"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "second half points of the Steelers"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(second half points of the Eagles)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(second half points of the Steelers)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(second half points of the Eagles)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(second half points of the Steelers)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    11
                ],
                [
                    4
                ],
                [
                    3,
                    5,
                    6,
                    7
                ],
                [
                    9,
                    10
                ],
                [],
                [
                    8,
                    12
                ],
                [
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "points",
                "did",
                "Eagles",
                "score",
                "in",
                "the",
                "second",
                "half",
                "than",
                "Steelers",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    4
                ],
                [
                    3
                ],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    12
                ],
                [
                    9
                ],
                [
                    10
                ],
                [],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    3
                ],
                [
                    4
                ],
                [
                    5
                ],
                [],
                [
                    10
                ],
                [
                    11
                ],
                [],
                [
                    12
                ],
                [],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    12
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    6,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1304_8ed51534-7d6e-45e3-b9f1-01e7a43250f1",
        "question_text": "How many yards was Portis' longest touchdown run?",
        "split": "dev",
        "decomposition": "return yards of touchdown runs of  Portis ;return longest of #1",
        "program": [
            "SELECT['yards of touchdown runs of Portis']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "yards of touchdown runs of Portis"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdown runs of Portis)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdown runs of Portis)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    5
                ],
                [
                    2,
                    3,
                    4,
                    6,
                    7,
                    8
                ],
                [],
                [
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "Portis",
                "'",
                "longest",
                "touchdown",
                "run",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    6,
                    7
                ],
                [],
                [
                    5
                ],
                [
                    4
                ],
                [],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    5
                ],
                [
                    2,
                    3,
                    4,
                    8
                ],
                [
                    6,
                    7
                ],
                [],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1853_5bdccaef-04ee-44dc-b876-8cd75cc45f71",
        "question_text": "How many more percentage points did the burglary rate drop than murder rate between 1990 and 2013?",
        "split": "dev",
        "decomposition": "return burglary rate  in  1990 ;return burglary rate  in  2013 ;return murder rate  in  1990 ;return murder rate  in  2013 ;return difference of #1 and  #2 ;return difference of #3 and  #4 ;return difference of #5 and  #6",
        "program": [
            "SELECT['burglary rate in 1990']",
            "SELECT['burglary rate in 2013']",
            "SELECT['murder rate in 1990']",
            "SELECT['murder rate in 2013']",
            "ARITHMETIC['difference', '#1', '#2']",
            "ARITHMETIC['difference', '#3', '#4']",
            "ARITHMETIC['difference', '#5', '#6']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "ARITHMETIC_difference",
                [
                    "SELECT",
                    "burglary rate in 1990"
                ],
                [
                    "SELECT",
                    "burglary rate in 2013"
                ]
            ],
            [
                "ARITHMETIC_difference",
                [
                    "SELECT",
                    "murder rate in 1990"
                ],
                [
                    "SELECT",
                    "murder rate in 2013"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "ARITHMETIC_difference",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(burglary rate in 1990)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(burglary rate in 2013)"
                    ]
                ]
            ],
            [
                "ARITHMETIC_difference",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(murder rate in 1990)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(murder rate in 2013)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "ARITHMETIC_difference",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(burglary rate in 1990)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(burglary rate in 2013)"
                    ]
                ]
            ],
            [
                "ARITHMETIC_difference",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(murder rate in 1990)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(murder rate in 2013)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "select",
            "arithmetic",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3
                ],
                [
                    4
                ],
                [],
                [],
                [
                    7,
                    8
                ],
                [],
                [],
                [],
                [
                    9,
                    10,
                    12
                ],
                [
                    11
                ],
                [
                    14
                ],
                [
                    13,
                    15,
                    16
                ],
                [],
                [
                    17
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "percentage",
                "points",
                "did",
                "the",
                "burglary",
                "rate",
                "drop",
                "than",
                "murder",
                "rate",
                "between",
                "1990",
                "and",
                "2013",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [],
                [
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [],
                [
                    7
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    9,
                    10
                ],
                [],
                [
                    11
                ],
                [],
                [],
                [
                    14
                ],
                [],
                [
                    13,
                    16
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    17
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    7,
                    8,
                    9
                ],
                [],
                [],
                [],
                [],
                [
                    13
                ],
                [],
                [
                    10,
                    12
                ],
                [
                    11
                ],
                [
                    14
                ],
                [],
                [],
                [
                    16
                ],
                [],
                [],
                [
                    17
                ]
            ],
            "question_spans": [
                [
                    0,
                    4
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    16
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    16
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    16
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_221_d67e599d-0877-443e-a4fe-4c4fd90b391f",
        "question_text": "Which quarterback had more passing touchdowns?",
        "split": "train",
        "decomposition": "return quarterbacks ;return passing touchdowns of #1 ;return number of  #2 for each #1 ;return #1 where #3 is highest",
        "program": [
            "SELECT['quarterbacks']",
            "PROJECT['passing touchdowns of #REF', '#1']",
            "GROUP['count', '#2', '#1']",
            "SUPERLATIVE['max', '#1', '#3']"
        ],
        "nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "quarterbacks"
            ],
            [
                "GROUP_count",
                [
                    "PROJECT",
                    "passing touchdowns of #REF",
                    [
                        "SELECT",
                        "quarterbacks"
                    ]
                ],
                [
                    "SELECT",
                    "quarterbacks"
                ]
            ]
        ],
        "typed_nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(quarterbacks)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(passing touchdowns of #REF)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(quarterbacks)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(passing touchdowns of #REF)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "superlative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    4
                ],
                [],
                [
                    3
                ],
                [
                    5
                ],
                [
                    6
                ]
            ],
            "question_tokens": [
                "Which",
                "quarterback",
                "had",
                "more",
                "passing",
                "touchdowns",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    2,
                    3
                ],
                [
                    4
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    6
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [],
                [],
                [],
                [
                    3
                ],
                [],
                [
                    5
                ],
                [],
                [
                    6
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1233_30c4acad-427e-41b4-a076-326e0da2e210",
        "question_text": "How many more men larger was the army that began operations against Genoa than the reinforcements from Spain that were captured?",
        "split": "dev",
        "decomposition": "return the  army that began operations against Genoa ;return the  reinforcements from  Spain that were captured ;return men in  #1 ;return men in  #2 ;return number of  #3 ;return number of  #4 ;return the  difference of #5 and  #6",
        "program": [
            "SELECT['the army that began operations against Genoa']",
            "SELECT['the reinforcements from Spain that were captured']",
            "PROJECT['men in #REF', '#1']",
            "PROJECT['men in #REF', '#2']",
            "AGGREGATE['count', '#3']",
            "AGGREGATE['count', '#4']",
            "ARITHMETIC['difference', '#5', '#6']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "PROJECT",
                    "men in #REF",
                    [
                        "SELECT",
                        "the army that began operations against Genoa"
                    ]
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "PROJECT",
                    "men in #REF",
                    [
                        "SELECT",
                        "the reinforcements from Spain that were captured"
                    ]
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(men in #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the army that began operations against Genoa)"
                    ]
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(men in #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the reinforcements from Spain that were captured)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(men in #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the army that began operations against Genoa)"
                    ]
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(men in #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the reinforcements from Spain that were captured)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "project",
            "project",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    13
                ],
                [],
                [
                    5,
                    8
                ],
                [
                    4
                ],
                [
                    7,
                    9
                ],
                [
                    10,
                    11,
                    12
                ],
                [
                    19
                ],
                [
                    18
                ],
                [
                    15,
                    17
                ],
                [],
                [
                    20,
                    21
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "men",
                "larger",
                "was",
                "the",
                "army",
                "that",
                "began",
                "operations",
                "against",
                "Genoa",
                "than",
                "the",
                "reinforcements",
                "from",
                "Spain",
                "that",
                "were",
                "captured",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    3
                ],
                [
                    8
                ],
                [
                    4
                ],
                [
                    5
                ],
                [
                    7,
                    10
                ],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [],
                [],
                [
                    18
                ],
                [
                    12
                ],
                [],
                [
                    15
                ],
                [
                    17
                ],
                [],
                [],
                [
                    20
                ],
                [
                    21
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3
                ],
                [
                    2
                ],
                [],
                [],
                [],
                [
                    8
                ],
                [
                    10
                ],
                [],
                [
                    12
                ],
                [],
                [
                    13,
                    19
                ],
                [],
                [],
                [
                    18
                ],
                [
                    15
                ],
                [],
                [
                    17,
                    20
                ],
                [
                    21
                ]
            ],
            "question_spans": [
                [
                    0,
                    4
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    12
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    20
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    15
                ],
                [
                    14,
                    20
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    17
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    20
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    19,
                    20
                ],
                [
                    20,
                    20
                ],
                [
                    21,
                    21
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1569_0b2a3f65-43ec-471f-bdc3-ccf011475950",
        "question_text": "Who had the least amount of crew, USS Vicksburg or bluejackets?",
        "split": "train",
        "decomposition": "return crew of the  USS Vicksburg ;return crew of the  bluejackets ;return the  number of  #1 ;return the  number of  #2 ;return which is the  least of #3 ,  #4",
        "program": [
            "SELECT['crew of the USS Vicksburg']",
            "SELECT['crew of the bluejackets']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['min', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "crew of the USS Vicksburg"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "crew of the bluejackets"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(crew of the USS Vicksburg)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(crew of the bluejackets)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(crew of the USS Vicksburg)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(crew of the bluejackets)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    3,
                    4,
                    7,
                    10
                ],
                [
                    0,
                    2,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    9
                ],
                [
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "Who",
                "had",
                "the",
                "least",
                "amount",
                "of",
                "crew",
                ",",
                "USS",
                "Vicksburg",
                "or",
                "bluejackets",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    3,
                    4
                ],
                [],
                [],
                [
                    5
                ],
                [
                    6,
                    8
                ],
                [],
                [
                    7
                ],
                [
                    10
                ],
                [
                    9,
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    7,
                    10
                ],
                [
                    3,
                    4
                ],
                [],
                [
                    6,
                    8
                ],
                [],
                [
                    9
                ],
                [],
                [
                    11,
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    11
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    11
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    6,
                    11
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1601_53469cfb-7516-4de2-80dd-6d8e496cedca",
        "question_text": "Where did the Portuguese army go after leaving M\u00e9rida?",
        "split": "dev",
        "decomposition": "return where did the  Portuguese army go after leaving M\u00e9rida",
        "program": [
            "SELECT['where did the Portuguese army go after leaving M\\xe9rida']"
        ],
        "nested_expression": [
            "SELECT",
            "where did the Portuguese army go after leaving M\u00e9rida"
        ],
        "typed_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(where did the Portuguese army go after leaving M\u00e9rida)"
        ],
        "drop_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(where did the Portuguese army go after leaving M\u00e9rida)"
        ],
        "operators": [
            "select"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                ],
                [
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "Where",
                "did",
                "the",
                "Portuguese",
                "army",
                "go",
                "after",
                "leaving",
                "M\u00e9rida",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    8,
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [
                    7
                ],
                [
                    8,
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    8
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    4
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1747_fc0bfffa-45b8-4de4-bc12-8cb88caabdff",
        "question_text": "Which race has the most people living abroad?",
        "split": "train",
        "decomposition": "return races ;return people living abroad of #1 ;return number of  #2 for each #1 ;return #1 where #3 is highest",
        "program": [
            "SELECT['races']",
            "PROJECT['people living abroad of #REF', '#1']",
            "GROUP['count', '#2', '#1']",
            "SUPERLATIVE['max', '#1', '#3']"
        ],
        "nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "races"
            ],
            [
                "GROUP_count",
                [
                    "PROJECT",
                    "people living abroad of #REF",
                    [
                        "SELECT",
                        "races"
                    ]
                ],
                [
                    "SELECT",
                    "races"
                ]
            ]
        ],
        "typed_nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(races)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(people living abroad of #REF)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(races)"
            ],
            [
                "PARTIAL_SELECT_SINGLE_NUM",
                "GET_QUESTION_SPAN(people living abroad of #REF)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "superlative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4
                ],
                [
                    3
                ],
                [],
                [
                    5,
                    6,
                    7
                ],
                [
                    8
                ]
            ],
            "question_tokens": [
                "Which",
                "race",
                "has",
                "the",
                "most",
                "people",
                "living",
                "abroad",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [],
                [],
                [],
                [
                    5
                ],
                [
                    4,
                    7
                ],
                [
                    6
                ],
                [],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0,
                    1
                ],
                [
                    2,
                    4
                ],
                [],
                [],
                [],
                [
                    5,
                    6
                ],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    7
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1361_6bad3e08-6965-4888-adbf-50ae588550ee",
        "question_text": "Which kicker had more field goals in the first quarter?",
        "split": "dev",
        "decomposition": "return kickers ;return first quarter field goals of #1 ;return number of  #2 for each #1 ;return #1 where #3 is highest",
        "program": [
            "SELECT['kickers']",
            "PROJECT['first quarter field goals of #REF', '#1']",
            "GROUP['count', '#2', '#1']",
            "SUPERLATIVE['max', '#1', '#3']"
        ],
        "nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "kickers"
            ],
            [
                "GROUP_count",
                [
                    "PROJECT",
                    "first quarter field goals of #REF",
                    [
                        "SELECT",
                        "kickers"
                    ]
                ],
                [
                    "SELECT",
                    "kickers"
                ]
            ]
        ],
        "typed_nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(kickers)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(first quarter field goals of #REF)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(kickers)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(first quarter field goals of #REF)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "superlative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    7
                ],
                [],
                [
                    3
                ],
                [
                    4,
                    5,
                    6,
                    8,
                    9
                ],
                [
                    10
                ]
            ],
            "question_tokens": [
                "Which",
                "kicker",
                "had",
                "more",
                "field",
                "goals",
                "in",
                "the",
                "first",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    3
                ],
                [],
                [
                    4,
                    5,
                    9
                ],
                [
                    6,
                    8
                ],
                [],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [],
                [],
                [],
                [
                    3
                ],
                [
                    4,
                    6
                ],
                [
                    8
                ],
                [
                    5,
                    9
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    9
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_411_730e18ae-6694-409e-8b3b-4c02dbaa8ed8",
        "question_text": "How many years was it between the time fighting intensified and when a peace agreement was signed?",
        "split": "train",
        "decomposition": "return year the  fighting intensified ;return year a peace agreement was  signed ;return difference of #1 and  #2",
        "program": [
            "SELECT['year the fighting intensified']",
            "SELECT['year a peace agreement was signed']",
            "ARITHMETIC['difference', '#1', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "year the fighting intensified"
            ],
            [
                "SELECT",
                "year a peace agreement was signed"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year the fighting intensified)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year a peace agreement was signed)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Two_Events",
            [
                "SELECT",
                "GET_QUESTION_SPAN(year the fighting intensified)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(year a peace agreement was signed)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4,
                    5,
                    10,
                    11,
                    13,
                    16
                ],
                [
                    3,
                    6,
                    8
                ],
                [
                    7,
                    9
                ],
                [
                    12,
                    15
                ],
                [
                    14,
                    17
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "was",
                "it",
                "between",
                "the",
                "time",
                "fighting",
                "intensified",
                "and",
                "when",
                "a",
                "peace",
                "agreement",
                "was",
                "signed",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    4,
                    5,
                    11
                ],
                [
                    3
                ],
                [
                    6,
                    8
                ],
                [
                    7
                ],
                [
                    9,
                    10
                ],
                [
                    15
                ],
                [
                    12,
                    16
                ],
                [
                    13,
                    14
                ],
                [],
                [
                    17
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    4,
                    5
                ],
                [
                    3,
                    10,
                    11,
                    13,
                    15,
                    16
                ],
                [
                    8
                ],
                [
                    9
                ],
                [
                    7,
                    14
                ],
                [
                    12
                ],
                [],
                [
                    17
                ]
            ],
            "question_spans": [
                [
                    0,
                    2
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    16
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    16
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    16
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    16
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    16
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    16
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_526_497819c6-95e0-4930-8ed2-54bfe7d2a50b",
        "question_text": "Which player had the shortest touchdown run of the game?",
        "split": "train",
        "decomposition": "return touchdown runs of the  game ;return shortest of #1 ;return the  player that had #2",
        "program": [
            "SELECT['touchdown runs of the game']",
            "AGGREGATE['min', '#1']",
            "PROJECT['the player that had #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "the player that had #REF",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "touchdown runs of the game"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the player that had #REF)",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown runs of the game)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the player that had #REF)",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown runs of the game)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    8
                ],
                [],
                [
                    4,
                    5,
                    6
                ],
                [
                    7
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "had",
                "the",
                "shortest",
                "touchdown",
                "run",
                "of",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    4,
                    5,
                    6
                ],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    5,
                    7,
                    8
                ],
                [],
                [],
                [
                    4,
                    6
                ],
                [],
                [],
                [
                    9,
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1948_4cd499e0-8e58-4d58-ac23-11eb7f5a7bbc",
        "question_text": "How many more yards did Brady gain from Tate than Hernandez?",
        "split": "train",
        "decomposition": "return yards that Brady gains from  Tate ;return yards that Brady gains from  Hernandez ;return the  sum of #1 ;return the  sum of #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['yards that Brady gains from Tate']",
            "SELECT['yards that Brady gains from Hernandez']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards that Brady gains from Tate"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards that Brady gains from Hernandez"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards that Brady gains from Tate)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards that Brady gains from Hernandez)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards that Brady gains from Tate)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards that Brady gains from Hernandez)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    9
                ],
                [
                    3,
                    4
                ],
                [
                    5
                ],
                [],
                [
                    6,
                    10
                ],
                [
                    7,
                    8
                ],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "yards",
                "did",
                "Brady",
                "gain",
                "from",
                "Tate",
                "than",
                "Hernandez",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [
                    8
                ],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    5
                ],
                [
                    3,
                    4
                ],
                [],
                [],
                [],
                [
                    8,
                    9
                ],
                [
                    6,
                    10
                ],
                [],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1350_4fffdac6-9606-4dd2-9fe6-408b0625946a",
        "question_text": "How many more field goals did Cundiff kick than Stover?",
        "split": "train",
        "decomposition": "return field goals that Cundiff kick ;return field goals that Stover kick ;return number of  #1 ;return number of  #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['field goals that Cundiff kick']",
            "SELECT['field goals that Stover kick']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals that Cundiff kick"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals that Stover kick"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that Cundiff kick)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that Stover kick)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that Cundiff kick)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that Stover kick)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    8
                ],
                [
                    3,
                    4
                ],
                [
                    6
                ],
                [],
                [
                    5,
                    7,
                    9
                ],
                [],
                [
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "field",
                "goals",
                "did",
                "Cundiff",
                "kick",
                "than",
                "Stover",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [
                    6
                ],
                [],
                [
                    4,
                    5,
                    7
                ],
                [],
                [],
                [],
                [
                    9
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [
                    3,
                    4,
                    5
                ],
                [],
                [],
                [],
                [
                    8
                ],
                [
                    6,
                    7,
                    9
                ],
                [],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1021_581a25ed-56ca-4be7-aa0f-260959f3dd74",
        "question_text": "How many yards difference was Jay Cutler\u2019s first touchdown pass compared to his second?",
        "split": "dev",
        "decomposition": "return touchdown passes from  Jay Cutler ;return the  first of #1 ;return the  second of #1 ;return the  yards of #2 ;return the  yards of #3 ;return the  difference of #4 and  #5",
        "program": [
            "SELECT['touchdown passes from Jay Cutler']",
            "AGGREGATE['min', '#1']",
            "PROJECT['the second of #REF', '#1']",
            "PROJECT['the yards of #REF', '#2']",
            "PROJECT['the yards of #REF', '#3']",
            "ARITHMETIC['difference', '#4', '#5']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "PROJECT",
                "the yards of #REF",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "touchdown passes from Jay Cutler"
                    ]
                ]
            ],
            [
                "PROJECT",
                "the yards of #REF",
                [
                    "PROJECT",
                    "the second of #REF",
                    [
                        "SELECT",
                        "touchdown passes from Jay Cutler"
                    ]
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(the yards of #REF)",
                    [
                        "AGGREGATE_min",
                        [
                            "SELECT",
                            "GET_QUESTION_SPAN(touchdown passes from Jay Cutler)"
                        ]
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(the yards of #REF)",
                    [
                        "PROJECT",
                        "GET_QUESTION_SPAN(the second of #REF)",
                        [
                            "SELECT",
                            "GET_QUESTION_SPAN(touchdown passes from Jay Cutler)"
                        ]
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(the yards of #REF)",
                    [
                        "AGGREGATE_min",
                        [
                            "SELECT",
                            "GET_QUESTION_SPAN(touchdown passes from Jay Cutler)"
                        ]
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(the yards of #REF)",
                    [
                        "PROJECT",
                        "GET_QUESTION_SPAN(the second of #REF)",
                        [
                            "SELECT",
                            "GET_QUESTION_SPAN(touchdown passes from Jay Cutler)"
                        ]
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project",
            "project",
            "project",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [],
                [],
                [],
                [
                    2,
                    4,
                    5,
                    8,
                    9,
                    10,
                    13,
                    14
                ],
                [
                    6
                ],
                [],
                [
                    7,
                    11
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "difference",
                "was",
                "Jay",
                "Cutler",
                "\u2019s",
                "first",
                "touchdown",
                "pass",
                "compared",
                "to",
                "his",
                "second",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    2,
                    4,
                    9,
                    10,
                    13
                ],
                [],
                [],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [
                    7,
                    11
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    2,
                    4,
                    5,
                    6,
                    14
                ],
                [
                    10,
                    13
                ],
                [],
                [],
                [],
                [],
                [
                    7,
                    11
                ],
                [],
                [
                    9
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    14
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    10
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_365_e212794f-2107-4c25-a50f-2672429e3ad9",
        "question_text": "Which happened last, the Russo-Lithuanian War or the near continuous raids on Muscovy?",
        "split": "train",
        "decomposition": "return when  did the  Russo-Lithuanian War happen ;return when  did the  near continuous raids on Muscovy happen ;return which is last of #1 ,  #2",
        "program": [
            "SELECT['when did the Russo-Lithuanian War happen']",
            "SELECT['when did the near continuous raids on Muscovy happen']",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "when did the Russo-Lithuanian War happen"
            ],
            [
                "SELECT",
                "when did the near continuous raids on Muscovy happen"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did the Russo-Lithuanian War happen)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did the near continuous raids on Muscovy happen)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did the Russo-Lithuanian War happen)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did the near continuous raids on Muscovy happen)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    9
                ],
                [
                    4,
                    6,
                    7
                ],
                [
                    8,
                    11
                ],
                [
                    10,
                    12,
                    13,
                    14
                ],
                [
                    15,
                    16
                ]
            ],
            "question_tokens": [
                "Which",
                "happened",
                "last",
                ",",
                "the",
                "Russo",
                "-",
                "Lithuanian",
                "War",
                "or",
                "the",
                "near",
                "continuous",
                "raids",
                "on",
                "Muscovy",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3
                ],
                [],
                [
                    4,
                    5,
                    6
                ],
                [
                    7
                ],
                [
                    8,
                    11
                ],
                [],
                [
                    9
                ],
                [
                    13,
                    14
                ],
                [
                    12,
                    15
                ],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    3,
                    9
                ],
                [
                    1,
                    2,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    8,
                    11
                ],
                [],
                [
                    12,
                    13,
                    14
                ],
                [],
                [
                    15,
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    15
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    15
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1507_1ba7d0a5-82fb-4789-90e5-55020d2119d1",
        "question_text": "How many foreigners pursuing higher education in America were not of Thai in origin, in percentage?",
        "split": "train",
        "decomposition": "return percentage of foreigners pursuing higher education in   America that were of  Thai origin ;return the  difference of 100 and  #1",
        "program": [
            "SELECT['percentage of foreigners pursuing higher education in America that were of Thai origin']",
            "PROJECT['the difference of 100 and #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "the difference of 100 and #REF",
            [
                "SELECT",
                "percentage of foreigners pursuing higher education in America that were of Thai origin"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the difference of 100 and #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(percentage of foreigners pursuing higher education in America that were of Thai origin)"
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            "SELECT_IMPLICIT_NUM(100)",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percentage of foreigners pursuing higher education in America that were of Thai origin)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4,
                    16
                ],
                [
                    3,
                    5,
                    7,
                    8,
                    9,
                    10
                ],
                [
                    13
                ],
                [
                    6,
                    11,
                    12,
                    14,
                    15
                ],
                [
                    17
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "foreigners",
                "pursuing",
                "higher",
                "education",
                "in",
                "America",
                "were",
                "not",
                "of",
                "Thai",
                "in",
                "origin",
                ",",
                "in",
                "percentage",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    2
                ],
                [
                    0,
                    1
                ],
                [
                    3,
                    9,
                    10
                ],
                [],
                [
                    4,
                    8,
                    16
                ],
                [],
                [
                    11,
                    14
                ],
                [
                    12,
                    15
                ],
                [
                    5,
                    7,
                    13
                ],
                [],
                [
                    17
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3
                ],
                [
                    4,
                    16
                ],
                [
                    7,
                    8,
                    9,
                    10
                ],
                [],
                [
                    13
                ],
                [
                    11,
                    12,
                    14,
                    15
                ],
                [],
                [
                    5,
                    17
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    7
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    16
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    16
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_813_990f8eb3-cadc-4904-b9c5-9e5affb05a4e",
        "question_text": "Which did he do first - become a professor or serve as a superintendent at St. Nicholas Church?",
        "split": "train",
        "decomposition": "return when  he become a professor ;return when  he serve as a superintendent at St. Nicholas Church ;return which is  the lowest of  #1 , #2",
        "program": [
            "SELECT['when he become a professor']",
            "SELECT['when he serve as a superintendent at St. Nicholas Church']",
            "COMPARISON['min', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "when he become a professor"
            ],
            [
                "SELECT",
                "when he serve as a superintendent at St. Nicholas Church"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when he become a professor)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when he serve as a superintendent at St. Nicholas Church)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when he become a professor)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when he serve as a superintendent at St. Nicholas Church)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    3,
                    4,
                    9,
                    15
                ],
                [
                    1,
                    2,
                    5,
                    6,
                    7,
                    8,
                    10
                ],
                [],
                [
                    11,
                    12,
                    13,
                    14
                ],
                [
                    16,
                    17,
                    18
                ]
            ],
            "question_tokens": [
                "Which",
                "did",
                "he",
                "do",
                "first",
                "-",
                "become",
                "a",
                "professor",
                "or",
                "serve",
                "as",
                "a",
                "superintendent",
                "at",
                "St.",
                "Nicholas",
                "Church",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    1
                ],
                [
                    0,
                    3,
                    4
                ],
                [],
                [
                    2,
                    5,
                    6
                ],
                [
                    7,
                    9
                ],
                [],
                [
                    8
                ],
                [
                    10,
                    11,
                    12,
                    13
                ],
                [
                    14,
                    15
                ],
                [
                    16,
                    17
                ],
                [
                    18
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3,
                    7,
                    9,
                    10,
                    12
                ],
                [
                    4,
                    15
                ],
                [
                    2,
                    5,
                    6,
                    8
                ],
                [],
                [],
                [
                    11,
                    13
                ],
                [
                    14,
                    16
                ],
                [
                    17,
                    18
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    17
                ],
                [
                    1,
                    1
                ],
                [
                    1,
                    4
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    17
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    17
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    17
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    12,
                    17
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    17
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    17
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2908_a3bd7421-03c3-4fbf-b750-2d3a32d9ed37",
        "question_text": "How many touchdown passes over 16 yards did Andy Dalton throw?",
        "split": "train",
        "decomposition": "return touchdown passes of Andy Dalton ;return yards of #1 ;return #1 where #2 is higher than 16 ;return number of  #3",
        "program": [
            "SELECT['touchdown passes of Andy Dalton']",
            "PROJECT['yards of #REF', '#1']",
            "COMPARATIVE['#1', '#2', 'is higher than 16']",
            "AGGREGATE['count', '#3']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "touchdown passes of Andy Dalton"
                ],
                [
                    "PROJECT",
                    "yards of #REF",
                    [
                        "SELECT",
                        "touchdown passes of Andy Dalton"
                    ]
                ],
                "is higher than 16"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes of Andy Dalton)"
                ],
                [
                    "PARTIAL_GROUP_sum",
                    [
                        "PARTIAL_SELECT_NUM",
                        "GET_QUESTION_SPAN(yards of #REF)"
                    ]
                ],
                [
                    "CONDITION",
                    "GET_QUESTION_SPAN(is higher than 16)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_GT",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes of Andy Dalton)"
                ],
                "GET_QUESTION_NUMBER(16)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "comparative",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    7
                ],
                [
                    2,
                    4,
                    5
                ],
                [
                    8
                ],
                [
                    11
                ],
                [
                    6,
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "touchdown",
                "passes",
                "over",
                "16",
                "yards",
                "did",
                "Andy",
                "Dalton",
                "throw",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [],
                [
                    4
                ],
                [],
                [
                    7
                ],
                [
                    5,
                    8
                ],
                [],
                [
                    6,
                    9,
                    10
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    7,
                    10
                ],
                [
                    2,
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    8
                ],
                [
                    9
                ],
                [
                    11
                ],
                [
                    6
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1735_fffa8705-8444-48d6-aa41-2b483e1743f5",
        "question_text": "How many combined wins did these two teams have coming into this game?",
        "split": "train",
        "decomposition": "return wins of the  two teams coming into this game ;return sum of #1",
        "program": [
            "SELECT['wins of the two teams coming into this game']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "wins of the two teams coming into this game"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(wins of the two teams coming into this game)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(wins of the two teams coming into this game)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4,
                    6,
                    7,
                    8
                ],
                [
                    3,
                    9
                ],
                [
                    5,
                    10,
                    11,
                    12,
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "combined",
                "wins",
                "did",
                "these",
                "two",
                "teams",
                "have",
                "coming",
                "into",
                "this",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    3
                ],
                [
                    1,
                    2,
                    4
                ],
                [],
                [
                    6,
                    7
                ],
                [
                    5,
                    8,
                    9,
                    10
                ],
                [
                    11
                ],
                [
                    12,
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3,
                    8
                ],
                [
                    2,
                    4,
                    6,
                    7
                ],
                [
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    5,
                    12,
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    12
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    12
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1259_c323389b-e07c-4235-9ce7-3c2e955397b0",
        "question_text": "What day celebrates Juan de Padilla and Mar\u00eda Pacheco in Spain?",
        "split": "dev",
        "decomposition": "return day in  Spain that celebrates Juan de Padilla ;return #1 that celebrates Mar\u00eda Pacheco",
        "program": [
            "SELECT['day in Spain that celebrates Juan de Padilla']",
            "FILTER['#1', 'that celebrates Mar\\xeda Pacheco']"
        ],
        "nested_expression": [
            "FILTER",
            [
                "SELECT",
                "day in Spain that celebrates Juan de Padilla"
            ],
            "that celebrates Mar\u00eda Pacheco"
        ],
        "typed_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(day in Spain that celebrates Juan de Padilla)"
            ],
            "GET_QUESTION_SPAN(that celebrates Mar\u00eda Pacheco)"
        ],
        "drop_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(day in Spain that celebrates Juan de Padilla)"
            ],
            "GET_QUESTION_SPAN(that celebrates Mar\u00eda Pacheco)"
        ],
        "operators": [
            "select",
            "filter"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    2,
                    3,
                    9
                ],
                [
                    0,
                    1,
                    4,
                    5
                ],
                [
                    6,
                    7,
                    8
                ],
                [
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "What",
                "day",
                "celebrates",
                "Juan",
                "de",
                "Padilla",
                "and",
                "Mar\u00eda",
                "Pacheco",
                "in",
                "Spain",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    6,
                    7,
                    8
                ],
                [],
                [
                    9,
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    5,
                    9
                ],
                [
                    4
                ],
                [
                    6,
                    7,
                    10
                ],
                [
                    8
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    10
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2898_aa20476c-80ee-49e3-9208-1a6e072419d9",
        "question_text": "How many field goals did Lambo kick in the first half?",
        "split": "train",
        "decomposition": "return field goals that Lambo kicks in  the  first half ;return the  number of  #1",
        "program": [
            "SELECT['field goals that Lambo kicks in the first half']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "field goals that Lambo kicks in the first half"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals that Lambo kicks in the first half)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that Lambo kicks)"
                ],
                "GET_QUESTION_SPAN(in the first half)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4
                ],
                [
                    5,
                    6,
                    7,
                    9,
                    10
                ],
                [
                    8
                ],
                [],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "field",
                "goals",
                "did",
                "Lambo",
                "kick",
                "in",
                "the",
                "first",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4,
                    6,
                    10
                ],
                [],
                [
                    5
                ],
                [
                    7
                ],
                [],
                [
                    9
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3,
                    4
                ],
                [
                    2
                ],
                [
                    6,
                    7,
                    9,
                    10
                ],
                [
                    5
                ],
                [],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_872_ffb15697-0f39-459f-81f6-e7cb95b5670e",
        "question_text": "How many TD passes did Rosenfels complete from 7 yards?",
        "split": "train",
        "decomposition": "return yards of  TD passes of Rosenfels ;return #1 that are  7 yards ;return the number of  #2",
        "program": [
            "SELECT['yards of TD passes of Rosenfels']",
            "FILTER['#1', 'that are 7 yards']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "yards of TD passes of Rosenfels"
                ],
                "that are 7 yards"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of TD passes of Rosenfels)"
                ],
                "GET_QUESTION_SPAN(that are 7 yards)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_EQ",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of TD passes of Rosenfels)"
                ],
                "GET_QUESTION_NUMBER(7)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4,
                    6
                ],
                [
                    3,
                    5
                ],
                [
                    7
                ],
                [
                    10
                ],
                [
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "TD",
                "passes",
                "did",
                "Rosenfels",
                "complete",
                "from",
                "7",
                "yards",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [
                    4,
                    5
                ],
                [],
                [
                    7
                ],
                [
                    6
                ],
                [
                    8,
                    9
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    4,
                    6
                ],
                [
                    2,
                    3
                ],
                [
                    5
                ],
                [],
                [],
                [
                    10
                ],
                [
                    8,
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1401_c306ad76-1573-4adb-95d6-482d6e8c844a",
        "question_text": "How many Christian communities did the mission take care of in Thailand?",
        "split": "dev",
        "decomposition": "return Christian communities the  mission did take care of in  Thailand ;return number of  #1",
        "program": [
            "SELECT['Christian communities the mission did take care of in Thailand']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "Christian communities the mission did take care of in Thailand"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(Christian communities the mission did take care of in Thailand)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(Christian communities the mission did take care of in Thailand)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    4,
                    7
                ],
                [
                    5,
                    6,
                    8,
                    9,
                    10
                ],
                [
                    2,
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "Christian",
                "communities",
                "did",
                "the",
                "mission",
                "take",
                "care",
                "of",
                "in",
                "Thailand",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3,
                    4
                ],
                [],
                [
                    5,
                    6,
                    7
                ],
                [
                    9,
                    10
                ],
                [
                    2,
                    8,
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3,
                    4,
                    7
                ],
                [
                    5,
                    6,
                    9,
                    10
                ],
                [
                    2,
                    8
                ],
                [
                    11,
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    11
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1370_d58621fa-6e77-4d7e-b652-89c3a58d7204",
        "question_text": "What did the US trade with Britain in 1940, but before Roosevelt accused Hitler of planning world conquest?",
        "split": "train",
        "decomposition": "return What the US trades with Britain in  1940 ;return #1 before Roosevelt accused Hitler of  planning world conquest",
        "program": [
            "SELECT['What the US trades with Britain in 1940']",
            "FILTER['#1', 'before Roosevelt accused Hitler of planning world conquest']"
        ],
        "nested_expression": [
            "FILTER",
            [
                "SELECT",
                "What the US trades with Britain in 1940"
            ],
            "before Roosevelt accused Hitler of planning world conquest"
        ],
        "typed_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(What the US trades with Britain in 1940)"
            ],
            "GET_QUESTION_SPAN(before Roosevelt accused Hitler of planning world conquest)"
        ],
        "drop_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(What the US trades with Britain in 1940)"
            ],
            "GET_QUESTION_SPAN(before Roosevelt accused Hitler of planning world conquest)"
        ],
        "operators": [
            "select",
            "filter"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    7,
                    10,
                    11
                ],
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    9,
                    15,
                    17,
                    18
                ],
                [
                    5,
                    6,
                    8,
                    12,
                    13,
                    14,
                    16
                ],
                [
                    19
                ]
            ],
            "question_tokens": [
                "What",
                "did",
                "the",
                "US",
                "trade",
                "with",
                "Britain",
                "in",
                "1940",
                ",",
                "but",
                "before",
                "Roosevelt",
                "accused",
                "Hitler",
                "of",
                "planning",
                "world",
                "conquest",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1,
                    3
                ],
                [
                    7
                ],
                [
                    6
                ],
                [
                    9
                ],
                [
                    4,
                    5,
                    10,
                    11,
                    12,
                    14
                ],
                [
                    8,
                    13
                ],
                [
                    15,
                    16,
                    17,
                    18
                ],
                [
                    19
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    2,
                    6,
                    7,
                    10,
                    11
                ],
                [
                    3,
                    9,
                    15,
                    17,
                    18
                ],
                [
                    4,
                    5,
                    13,
                    14
                ],
                [
                    8,
                    12,
                    16
                ],
                [
                    19
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    1,
                    18
                ],
                [
                    1,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    18
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    18
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    18
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    18
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    18
                ],
                [
                    17,
                    17
                ],
                [
                    17,
                    18
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1378_74ab5291-6b8b-479c-896b-f99f0e8023fe",
        "question_text": "How many yards was the shortest rushing touchdown?",
        "split": "dev",
        "decomposition": "return yards of rushing touchdown ;return shortest of #1",
        "program": [
            "SELECT['yards of rushing touchdown']",
            "AGGREGATE['min', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "yards of rushing touchdown"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of rushing touchdown)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of rushing touchdown)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    5,
                    6,
                    7
                ],
                [
                    4
                ],
                [
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "the",
                "shortest",
                "rushing",
                "touchdown",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    5,
                    7
                ],
                [],
                [
                    4
                ],
                [
                    6
                ],
                [],
                [],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    6
                ],
                [],
                [
                    2,
                    3,
                    7
                ],
                [
                    5
                ],
                [],
                [],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    7
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2592_16d5c51f-5834-425f-9b92-0ea961750cec",
        "question_text": "Who scored more points, Baltimore or Lions?",
        "split": "train",
        "decomposition": "return points Baltimore scored ;return points the  Lions scored ;return which is more of #1 ,  #2",
        "program": [
            "SELECT['points Baltimore scored']",
            "SELECT['points the Lions scored']",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "points Baltimore scored"
            ],
            [
                "SELECT",
                "points the Lions scored"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(points Baltimore scored)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(points the Lions scored)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(points Baltimore scored)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(points the Lions scored)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4,
                    6
                ],
                [
                    3
                ],
                [],
                [
                    5,
                    7
                ],
                [
                    8
                ]
            ],
            "question_tokens": [
                "Who",
                "scored",
                "more",
                "points",
                ",",
                "Baltimore",
                "or",
                "Lions",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [
                    4,
                    5,
                    6
                ],
                [
                    7
                ],
                [],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    3
                ],
                [
                    4,
                    6
                ],
                [
                    2
                ],
                [],
                [],
                [],
                [
                    5
                ],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    7
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    3
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_948_910d9632-57d5-4adf-8141-5c1197d13836",
        "question_text": "How many yards was the shortest touchdown of the entire game?",
        "split": "train",
        "decomposition": "return yards of touchdowns in  the  game ;return the  shortest of #1",
        "program": [
            "SELECT['yards of touchdowns in the game']",
            "AGGREGATE['min', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "yards of touchdowns in the game"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdowns in the game)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdowns in the game)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    5,
                    6
                ],
                [
                    4,
                    7,
                    8,
                    9
                ],
                [
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "the",
                "shortest",
                "touchdown",
                "of",
                "the",
                "entire",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    5,
                    6
                ],
                [],
                [],
                [
                    7,
                    8
                ],
                [
                    9
                ],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    6,
                    9
                ],
                [
                    5
                ],
                [
                    7
                ],
                [],
                [
                    10,
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1471_90a420bb-8381-42d1-8964-8ba40b0bd123",
        "question_text": "Were there fewer touchdowns in the first half or the second half?",
        "split": "dev",
        "decomposition": "return touchdowns in  the  first half  ;return touchdowns in  the  second half  ;return number of  #1 ;return number of  #2 ;return which is lowest of #3 ,  #4",
        "program": [
            "SELECT['touchdowns in the first half']",
            "SELECT['touchdowns in the second half']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['min', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdowns in the first half"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdowns in the second half"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdowns in the first half)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdowns in the second half)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_count_min",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns)"
                ],
                "GET_QUESTION_SPAN(in the first half)"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns)"
                ],
                "GET_QUESTION_SPAN(in the second half)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2
                ],
                [
                    3,
                    4
                ],
                [],
                [],
                [
                    8
                ],
                [
                    6,
                    7,
                    10,
                    11
                ],
                [],
                [],
                [
                    12
                ]
            ],
            "question_tokens": [
                "Were",
                "there",
                "fewer",
                "touchdowns",
                "in",
                "the",
                "first",
                "half",
                "or",
                "the",
                "second",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    2
                ],
                [
                    1
                ],
                [
                    3
                ],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [],
                [],
                [
                    7,
                    11
                ],
                [],
                [
                    8
                ],
                [],
                [
                    10
                ],
                [],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0,
                    1,
                    8
                ],
                [
                    2
                ],
                [
                    3
                ],
                [
                    4
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    6,
                    7,
                    10,
                    11
                ],
                [],
                [],
                [],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    11
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2782_abb0dcc8-cba9-447a-907f-647100c2db9f",
        "question_text": "Which ethnic group was the second largest in Addis Ababa?",
        "split": "train",
        "decomposition": "return ethnic groups in  Addis Ababa ;return the  second largest of #1",
        "program": [
            "SELECT['ethnic groups in Addis Ababa']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "ethnic groups in Addis Ababa"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(ethnic groups in Addis Ababa)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(ethnic groups in Addis Ababa)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    3,
                    5,
                    6,
                    8
                ],
                [
                    0,
                    2,
                    4,
                    7
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "Which",
                "ethnic",
                "group",
                "was",
                "the",
                "second",
                "largest",
                "in",
                "Addis",
                "Ababa",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    2
                ],
                [
                    1,
                    3,
                    5,
                    6
                ],
                [],
                [
                    4
                ],
                [
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    2
                ],
                [
                    1,
                    3,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    4,
                    7
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_57_bdcaf2d1-288a-46ce-a848-b696b4f9be40",
        "question_text": "What sport had sold the least by April 27?",
        "split": "train",
        "decomposition": "return sports ;return what  #1 had sold by April 27 ;return #1 where #2 is the  least",
        "program": [
            "SELECT['sports']",
            "PROJECT['what #REF had sold by April 27', '#1']",
            "COMPARATIVE['#1', '#2', 'is the least']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "sports"
            ],
            [
                "PROJECT",
                "what #REF had sold by April 27",
                [
                    "SELECT",
                    "sports"
                ]
            ],
            "is the least"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(sports)"
            ],
            [
                "PARTIAL_GROUP_sum",
                [
                    "PARTIAL_SELECT_NUM",
                    "GET_QUESTION_SPAN(what #REF had sold by April 27)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is the least)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(sports)"
            ],
            [
                "PARTIAL_SELECT_SINGLE_NUM",
                "GET_QUESTION_SPAN(what #REF had sold by April 27)"
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is the least)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    4
                ],
                [
                    3
                ],
                [
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "What",
                "sport",
                "had",
                "sold",
                "the",
                "least",
                "by",
                "April",
                "27",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    3
                ],
                [],
                [
                    2,
                    5
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [
                    7,
                    8
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    2
                ],
                [],
                [
                    3,
                    6,
                    7
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    8,
                    9
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1313_ba522776-2428-4a77-b794-2268c578d5ec",
        "question_text": "Which army had the least soldiers, Russian or Japanese?",
        "split": "dev",
        "decomposition": "return number of  soldiers that the  Russian army had ;return number of  soldiers that the  Japanese army had ;return which is least of #1 ,  #2",
        "program": [
            "SELECT['number of soldiers that the Russian army had']",
            "SELECT['number of soldiers that the Japanese army had']",
            "COMPARISON['min', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "number of soldiers that the Russian army had"
            ],
            [
                "SELECT",
                "number of soldiers that the Japanese army had"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(number of soldiers that the Russian army had)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(number of soldiers that the Japanese army had)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(number of soldiers that the Russian army had)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(number of soldiers that the Japanese army had)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    4,
                    6,
                    8
                ],
                [
                    1,
                    3
                ],
                [
                    5
                ],
                [
                    7,
                    9
                ],
                [
                    10
                ]
            ],
            "question_tokens": [
                "Which",
                "army",
                "had",
                "the",
                "least",
                "soldiers",
                ",",
                "Russian",
                "or",
                "Japanese",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    2,
                    4
                ],
                [],
                [
                    1,
                    3
                ],
                [],
                [
                    5
                ],
                [],
                [
                    6,
                    7,
                    9
                ],
                [
                    8
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2,
                    6,
                    8
                ],
                [
                    4
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [
                    7,
                    9
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    9
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_827_6e6d3de0-b571-46cb-a320-7ef2b0c90c78",
        "question_text": "how many yards did davenport run?",
        "split": "train",
        "decomposition": "return yards that davenport run ;return sum of #1",
        "program": [
            "SELECT['yards that davenport run']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "yards that davenport run"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards that davenport run)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards that davenport run)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    4
                ],
                [
                    5,
                    6
                ]
            ],
            "question_tokens": [
                "how",
                "many",
                "yards",
                "did",
                "davenport",
                "run",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [
                    4
                ],
                [
                    5
                ],
                [
                    6
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4
                ],
                [],
                [
                    5
                ],
                [
                    6
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1219_6a0d6bbe-f2df-4232-a9d9-4b54061aa0ef",
        "question_text": "How many yards longer was the longest touchdown compared to the shortest?",
        "split": "train",
        "decomposition": "return yards of touchdowns ;return longest of #1 ;return shortest of #2 ;return difference of #2 and  #3",
        "program": [
            "SELECT['yards of touchdowns']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['min', '#2']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of touchdowns"
                ]
            ],
            [
                "AGGREGATE_min",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "yards of touchdowns"
                    ]
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdowns)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "AGGREGATE_max",
                        [
                            "SELECT",
                            "GET_QUESTION_SPAN(yards of touchdowns)"
                        ]
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdowns)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "AGGREGATE_max",
                        [
                            "SELECT",
                            "GET_QUESTION_SPAN(yards of touchdowns)"
                        ]
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    6
                ],
                [],
                [],
                [
                    8,
                    9
                ],
                [
                    7,
                    11
                ],
                [],
                [],
                [
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "the",
                "longest",
                "touchdown",
                "compared",
                "to",
                "the",
                "shortest",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3,
                    4
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    8
                ],
                [],
                [
                    7,
                    11
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [],
                [
                    2,
                    3,
                    4
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [
                    8,
                    9
                ],
                [
                    7
                ],
                [
                    11
                ],
                [],
                [],
                [],
                [],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_483_98860dbf-dfba-4b08-a3ec-47f9c57166cc",
        "question_text": "How many 8-yard touchdown passes were in the game?",
        "split": "train",
        "decomposition": "return touchdown passes in  the game ;return #1 that were 8-yard ;return number of  #2",
        "program": [
            "SELECT['touchdown passes in the game']",
            "FILTER['#1', 'that were 8-yard']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "touchdown passes in the game"
                ],
                "that were 8-yard"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes in the game)"
                ],
                "GET_QUESTION_SPAN(that were 8-yard)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_EQ",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes in the game)"
                ],
                "GET_QUESTION_NUMBER(8)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4
                ],
                [
                    6,
                    7
                ],
                [
                    9
                ],
                [
                    5,
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "8-yard",
                "touchdown",
                "passes",
                "were",
                "in",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4
                ],
                [],
                [],
                [
                    6
                ],
                [],
                [
                    5
                ],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [
                    9
                ],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1538_b188d508-81b8-4ef6-8945-57be6d3d001c",
        "question_text": "How many days after the Bulgarians entered Prokuplje did the Hungarians enter Kursumlija?",
        "split": "train",
        "decomposition": "return day the  Bulgarians entered Prokuplje ;return day the  Hungarians entered Kursumlija ;return difference in  days of #1 and  #2",
        "program": [
            "SELECT['day the Bulgarians entered Prokuplje']",
            "SELECT['day the Hungarians entered Kursumlija']",
            "ARITHMETIC['difference', '#1', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "day the Bulgarians entered Prokuplje"
            ],
            [
                "SELECT",
                "day the Hungarians entered Kursumlija"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(day the Bulgarians entered Prokuplje)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(day the Hungarians entered Kursumlija)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(day the Bulgarians entered Prokuplje)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(day the Hungarians entered Kursumlija)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    4,
                    6
                ],
                [
                    5
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    9,
                    11
                ],
                [
                    12,
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "days",
                "after",
                "the",
                "Bulgarians",
                "entered",
                "Prokuplje",
                "did",
                "the",
                "Hungarians",
                "enter",
                "Kursumlija",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [
                    6
                ],
                [],
                [
                    5
                ],
                [
                    7
                ],
                [
                    8
                ],
                [],
                [],
                [
                    10,
                    11
                ],
                [],
                [],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    3
                ],
                [],
                [
                    7
                ],
                [
                    6
                ],
                [],
                [
                    5
                ],
                [
                    8
                ],
                [
                    10
                ],
                [
                    11
                ],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    7
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    7
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2564_821f3deb-a83b-4ab3-aea3-2bffd410f7e1",
        "question_text": "What was the last team the Rangers played in the playoffs?",
        "split": "train",
        "decomposition": "return teams that the  Rangers played in  the   playoffs ;return the  last of #1",
        "program": [
            "SELECT['teams that the Rangers played in the playoffs']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "teams that the Rangers played in the playoffs"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(teams that the Rangers played in the playoffs)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(teams that the Rangers played in the playoffs)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1
                ],
                [
                    0,
                    2,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9
                ],
                [
                    3,
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "What",
                "was",
                "the",
                "last",
                "team",
                "the",
                "Rangers",
                "played",
                "in",
                "the",
                "playoffs",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    4
                ],
                [
                    5,
                    6,
                    7
                ],
                [
                    3,
                    8,
                    9
                ],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    4,
                    6,
                    7
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    5,
                    8,
                    9
                ],
                [
                    3
                ],
                [
                    10,
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    1,
                    10
                ],
                [
                    2,
                    10
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1821_8fb7542c-3e6c-45d5-870e-49db3daf8eb0",
        "question_text": "Who made the last points of the game?",
        "split": "train",
        "decomposition": "return the  last points of the game ;return who  made #1",
        "program": [
            "SELECT['the last points of the game']",
            "PROJECT['who made #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "who made #REF",
            [
                "SELECT",
                "the last points of the game"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who made #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the last points of the game)"
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who made #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the last points of the game)"
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    6
                ],
                [],
                [
                    4,
                    5
                ],
                [
                    7,
                    8
                ]
            ],
            "question_tokens": [
                "Who",
                "made",
                "the",
                "last",
                "points",
                "of",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [
                    2
                ],
                [
                    4
                ],
                [
                    5
                ],
                [
                    6
                ],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    4
                ],
                [
                    1
                ],
                [
                    2,
                    3,
                    5,
                    6
                ],
                [],
                [],
                [],
                [
                    7,
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    1,
                    7
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_2270_f9895ceb-80f3-4078-8994-a08545b9d1af",
        "question_text": "Are more people between the ages of 30 to 49 or 10 to 29?",
        "split": "dev",
        "decomposition": "return people that are  between the ages of  30 to 49 ;return people that are  between the ages of  10 to 29 ;return the number of  #1 ;return the number of  #2 ;return which is  more of  #3 , #4",
        "program": [
            "SELECT['people that are between the ages of 30 to 49']",
            "SELECT['people that are between the ages of 10 to 29']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "people that are between the ages of 30 to 49"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "people that are between the ages of 10 to 29"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(people that are between the ages of 30 to 49)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(people that are between the ages of 10 to 29)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(people that are between the ages of 30 to 49)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(people that are between the ages of 10 to 29)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    5,
                    10
                ],
                [
                    3,
                    4,
                    6,
                    8
                ],
                [
                    7,
                    9,
                    11
                ],
                [
                    12
                ],
                [
                    13,
                    14
                ]
            ],
            "question_tokens": [
                "Are",
                "more",
                "people",
                "between",
                "the",
                "ages",
                "of",
                "30",
                "to",
                "49",
                "or",
                "10",
                "to",
                "29",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    8
                ],
                [],
                [
                    10
                ],
                [
                    9,
                    11,
                    12
                ],
                [
                    13
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    10
                ],
                [
                    0,
                    1,
                    2,
                    5
                ],
                [
                    7
                ],
                [
                    8
                ],
                [
                    11
                ],
                [
                    9
                ],
                [
                    12,
                    13
                ],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    1,
                    13
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    13
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_123_f552b36d-5cfa-4105-9121-b82211ea25fc",
        "question_text": "how many yards did Romo complete?",
        "split": "train",
        "decomposition": "return yards that Romo did complete ;return sum of #1",
        "program": [
            "SELECT['yards that Romo did complete']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "yards that Romo did complete"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards that Romo did complete)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards that Romo did complete)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [
                    6
                ]
            ],
            "question_tokens": [
                "how",
                "many",
                "yards",
                "did",
                "Romo",
                "complete",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [
                    4
                ],
                [
                    5
                ],
                [
                    6
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [],
                [
                    6
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2065_f17293e9-6b9c-41f9-bf4d-ab92a2a408d6",
        "question_text": "How many touchdown passes longer than 1 yard did Alex Smith throw?",
        "split": "train",
        "decomposition": "return yards of touchdown passes of  Alex Smith that are longer than 1 yard ;return the  number of  #1",
        "program": [
            "SELECT['yards of touchdown passes of Alex Smith that are longer than 1 yard']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "yards of touchdown passes of Alex Smith that are longer than 1 yard"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdown passes of Alex Smith that are longer than 1 yard)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdown passes of Alex Smith that are longer than 1 yard)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    4,
                    8,
                    11
                ],
                [
                    6,
                    7,
                    9,
                    10
                ],
                [
                    2,
                    5,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "touchdown",
                "passes",
                "longer",
                "than",
                "1",
                "yard",
                "did",
                "Alex",
                "Smith",
                "throw",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    6,
                    7,
                    8,
                    9
                ],
                [],
                [
                    10,
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    4,
                    5,
                    9,
                    10
                ],
                [
                    3,
                    6,
                    7,
                    8,
                    11
                ],
                [],
                [],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    7
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2534_75f7cca7-106e-4c90-b69e-607d71f3a884",
        "question_text": "Who scored the most points during the first half?",
        "split": "train",
        "decomposition": "return who  scored points during the  first half ;return the  points scored during the first half of #1 ;return the  sum of #2 for each #1 ;return #1 where #3 is the  highest",
        "program": [
            "SELECT['who scored points during the first half']",
            "PROJECT['the points scored during the first half of #REF', '#1']",
            "GROUP['sum', '#2', '#1']",
            "COMPARATIVE['#1', '#3', 'is the highest']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "who scored points during the first half"
            ],
            [
                "GROUP_sum",
                [
                    "PROJECT",
                    "the points scored during the first half of #REF",
                    [
                        "SELECT",
                        "who scored points during the first half"
                    ]
                ],
                [
                    "SELECT",
                    "who scored points during the first half"
                ]
            ],
            "is the highest"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(who scored points during the first half)"
            ],
            [
                "PARTIAL_GROUP_sum",
                [
                    "PARTIAL_SELECT_NUM",
                    "GET_QUESTION_SPAN(the points scored during the first half of #REF)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is the highest)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(who scored points during the first half)"
            ],
            [
                "PARTIAL_GROUP_sum",
                [
                    "PARTIAL_SELECT_NUM",
                    "GET_QUESTION_SPAN(the points scored during the first half of #REF)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is the highest)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0
                ],
                [],
                [],
                [
                    1,
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    7
                ],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "Who",
                "scored",
                "the",
                "most",
                "points",
                "during",
                "the",
                "first",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    1,
                    3
                ],
                [],
                [
                    4
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    1,
                    3
                ],
                [],
                [
                    4
                ],
                [
                    7
                ],
                [],
                [],
                [
                    8,
                    9
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    8
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    4
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_65_9744171d-f773-415f-b9f4-26bee7f98bc9",
        "question_text": "How many stars all together did the the battalion come home with?",
        "split": "train",
        "decomposition": "return stars that the  battalion come home with ;return the  number of  #1",
        "program": [
            "SELECT['stars that the battalion come home with']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "stars that the battalion come home with"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(stars that the battalion come home with)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "SELECT",
                "GET_QUESTION_SPAN(stars that the battalion come home with)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4,
                    8
                ],
                [
                    3,
                    5,
                    6,
                    7
                ],
                [
                    9,
                    10,
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "stars",
                "all",
                "together",
                "did",
                "the",
                "the",
                "battalion",
                "come",
                "home",
                "with",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    9,
                    11
                ],
                [
                    8,
                    10
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    8
                ],
                [
                    6,
                    7
                ],
                [
                    9,
                    10,
                    11
                ],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2957_b64e3ccd-c843-4e6a-96ef-ed2eff84d9ab",
        "question_text": "How many yards longer was Brandon McManus' first field goal compared to his second?",
        "split": "train",
        "decomposition": "return yards of field goals of  Brandon McManus ;return first of #1 ;return second of #1 ;return difference of #2 and  #3",
        "program": [
            "SELECT['yards of field goals of Brandon McManus']",
            "AGGREGATE['min', '#1']",
            "PROJECT['second of #REF', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of field goals of Brandon McManus"
                ]
            ],
            [
                "PROJECT",
                "second of #REF",
                [
                    "SELECT",
                    "yards of field goals of Brandon McManus"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Brandon McManus)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(second of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Brandon McManus)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Brandon McManus)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(second of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Brandon McManus)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [],
                [
                    2,
                    4,
                    7,
                    8,
                    9,
                    10,
                    13,
                    14
                ],
                [],
                [
                    5
                ],
                [
                    6,
                    11,
                    12
                ],
                [],
                [],
                [],
                [
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "Brandon",
                "McManus",
                "'",
                "first",
                "field",
                "goal",
                "compared",
                "to",
                "his",
                "second",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [],
                [],
                [],
                [
                    2,
                    4,
                    9,
                    10,
                    13
                ],
                [],
                [],
                [],
                [
                    5
                ],
                [],
                [],
                [
                    6
                ],
                [
                    11
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    14
                ],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [
                    5
                ],
                [],
                [
                    2,
                    4,
                    14
                ],
                [
                    8,
                    9,
                    10,
                    13
                ],
                [],
                [],
                [],
                [
                    6
                ],
                [
                    11,
                    12
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    14
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_581_869b6458-a0c7-4cf1-8f69-4fcfff997bab",
        "question_text": "How many yards were the two longest touchdown passes in the game?",
        "split": "train",
        "decomposition": "return yards of touchdown passes ;return two longest of #1",
        "program": [
            "SELECT['yards of touchdown passes']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "yards of touchdown passes"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdown passes)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdown passes)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    2,
                    5,
                    6,
                    7
                ],
                [
                    0,
                    1,
                    3,
                    4,
                    8,
                    9,
                    10
                ],
                [
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "were",
                "the",
                "two",
                "longest",
                "touchdown",
                "passes",
                "in",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    2,
                    5,
                    6,
                    7
                ],
                [
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    5,
                    6,
                    7
                ],
                [
                    4,
                    8,
                    9,
                    10
                ],
                [],
                [
                    11,
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    11
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    11
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2021_353a2785-b702-4eac-a486-f468be3c3680",
        "question_text": "What are the top two longest touchdown passes made?",
        "split": "train",
        "decomposition": "return touchdown passes ;return top two longest of #1",
        "program": [
            "SELECT['touchdown passes']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "touchdown passes"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown passes)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown passes)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    3,
                    4,
                    5,
                    6
                ],
                [
                    0,
                    2,
                    7,
                    8
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "What",
                "are",
                "the",
                "top",
                "two",
                "longest",
                "touchdown",
                "passes",
                "made",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [
                    7
                ],
                [
                    8
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    3,
                    4,
                    5,
                    6
                ],
                [
                    2,
                    7,
                    8
                ],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    8
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_22_0614bfce-8a28-4475-95fe-4e99b921bcbc",
        "question_text": "Which team score the most points in the game?",
        "split": "train",
        "decomposition": "return teams in  the  game ;return points that #1 score ;return the  sum of #2 for each #1 ;return #1 where #3 is the  highest",
        "program": [
            "SELECT['teams in the game']",
            "PROJECT['points that #REF score', '#1']",
            "GROUP['sum', '#2', '#1']",
            "COMPARATIVE['#1', '#3', 'is the highest']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "teams in the game"
            ],
            [
                "GROUP_sum",
                [
                    "PROJECT",
                    "points that #REF score",
                    [
                        "SELECT",
                        "teams in the game"
                    ]
                ],
                [
                    "SELECT",
                    "teams in the game"
                ]
            ],
            "is the highest"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(teams in the game)"
            ],
            [
                "PARTIAL_GROUP_sum",
                [
                    "PARTIAL_SELECT_NUM",
                    "GET_QUESTION_SPAN(points that #REF score)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is the highest)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(teams in the game)"
            ],
            [
                "PARTIAL_SELECT_SINGLE_NUM",
                "GET_QUESTION_SPAN(points that #REF score)"
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is the highest)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    3
                ],
                [],
                [
                    4,
                    5
                ],
                [],
                [
                    2,
                    6,
                    8
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "Which",
                "team",
                "score",
                "the",
                "most",
                "points",
                "in",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2
                ],
                [],
                [],
                [
                    4,
                    5
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [],
                [
                    4,
                    5
                ],
                [],
                [],
                [
                    2,
                    6
                ],
                [
                    8,
                    9
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2237_62b98e89-898b-468b-a195-acb47ea71a7e",
        "question_text": "How many 30-yard field goals were made in the game?",
        "split": "train",
        "decomposition": "return 30-yard field goals made in  the  game ;return number of  #1",
        "program": [
            "SELECT['30-yard field goals made in the game']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "30-yard field goals made in the game"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(30-yard field goals made in the game)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(30-yard field goals made in the game)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [
                    6,
                    7,
                    8
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "30-yard",
                "field",
                "goals",
                "were",
                "made",
                "in",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    4
                ],
                [
                    5
                ],
                [
                    6
                ],
                [
                    7,
                    8
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    4,
                    6
                ],
                [
                    7,
                    8
                ],
                [],
                [
                    9,
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1141_c6864fb7-146e-4c62-b4a0-06d2f43f55da",
        "question_text": "How many yards longer was John Carney's longest field goal than his shortest?",
        "split": "train",
        "decomposition": "return yards of field goals of  John Carney ;return the  longest of #1 ;return the  shortest of #1 ;return the  difference of #2 and  #3",
        "program": [
            "SELECT['yards of field goals of John Carney']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['min', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of field goals of John Carney"
                ]
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of field goals of John Carney"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of John Carney)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of John Carney)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of John Carney)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of John Carney)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    6,
                    7,
                    8
                ],
                [
                    5
                ],
                [],
                [
                    11
                ],
                [
                    9,
                    10,
                    12,
                    13
                ],
                [],
                [
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "John",
                "Carney",
                "'s",
                "longest",
                "field",
                "goal",
                "than",
                "his",
                "shortest",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    8
                ],
                [],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    7,
                    9,
                    10,
                    12,
                    13
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    2,
                    4,
                    6
                ],
                [
                    7,
                    8
                ],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    9,
                    10,
                    12,
                    13
                ],
                [],
                [],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    13
                ],
                [
                    5,
                    13
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2616_4ac20c00-3ffc-4f5d-ac92-0ede38e6ddd2",
        "question_text": "How many yards was Dan Bailey's shortest field goal?",
        "split": "train",
        "decomposition": "return yards of field goals of  Dan Bailey ;return shortest of #1",
        "program": [
            "SELECT['yards of field goals of Dan Bailey']",
            "AGGREGATE['min', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "yards of field goals of Dan Bailey"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals of Dan Bailey)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals of Dan Bailey)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9
                ],
                [],
                [
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "Dan",
                "Bailey",
                "'s",
                "shortest",
                "field",
                "goal",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    6,
                    7,
                    8,
                    9
                ],
                [
                    4
                ],
                [],
                [],
                [
                    5
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    6
                ],
                [
                    5,
                    7,
                    8,
                    9
                ],
                [],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_560_0522ee25-7037-4110-9b9e-d4fbc86a8306",
        "question_text": "Which happened last, the Irish Rebellion or the Battle of Worcester?",
        "split": "train",
        "decomposition": "return the  date of the Irish Rebellion ;return the  date of the Battle of  Worcester ;return which is last of #1 ,  #2",
        "program": [
            "SELECT['the date of the Irish Rebellion']",
            "SELECT['the date of the Battle of Worcester']",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "the date of the Irish Rebellion"
            ],
            [
                "SELECT",
                "the date of the Battle of Worcester"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the date of the Irish Rebellion)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(the date of the Battle of Worcester)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the date of the Irish Rebellion)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(the date of the Battle of Worcester)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    7,
                    9
                ],
                [
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    8,
                    10
                ],
                [
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "Which",
                "happened",
                "last",
                ",",
                "the",
                "Irish",
                "Rebellion",
                "or",
                "the",
                "Battle",
                "of",
                "Worcester",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3
                ],
                [],
                [
                    4
                ],
                [],
                [
                    5,
                    6
                ],
                [],
                [
                    7,
                    8,
                    9
                ],
                [
                    10
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    3,
                    7
                ],
                [
                    1,
                    2,
                    9
                ],
                [],
                [
                    5,
                    6
                ],
                [],
                [],
                [],
                [
                    11,
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    11
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1859_7dd6cc9c-8344-46f0-a63d-a4d73414753b",
        "question_text": "How many households, in percent, were not made up of individuals?",
        "split": "dev",
        "decomposition": "return percent of households that were made up of  individuals ;return difference of 100 and  #1",
        "program": [
            "SELECT['percent of households that were made up of individuals']",
            "PROJECT['difference of 100 and #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "difference of 100 and #REF",
            [
                "SELECT",
                "percent of households that were made up of individuals"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(difference of 100 and #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(percent of households that were made up of individuals)"
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            "SELECT_IMPLICIT_NUM(100)",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent of households that were made up of individuals)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    5,
                    7,
                    8,
                    11,
                    12
                ],
                [],
                [
                    3,
                    4,
                    6,
                    9,
                    10
                ],
                [
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "households",
                ",",
                "in",
                "percent",
                ",",
                "were",
                "not",
                "made",
                "up",
                "of",
                "individuals",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2,
                    5,
                    8
                ],
                [
                    3
                ],
                [
                    7
                ],
                [],
                [
                    6,
                    10
                ],
                [
                    9,
                    11
                ],
                [],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    5,
                    7,
                    8,
                    11,
                    12
                ],
                [],
                [],
                [
                    3,
                    6,
                    10
                ],
                [],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_194_cb558cfc-9787-452a-91f7-2ff9c865f238",
        "question_text": "How many field goals over 40 yards did Adam Vinatieri kick?",
        "split": "dev",
        "decomposition": "return yards of field goals that Adam Vinatieri did kick ;return #1 that was  over 40 ;return number of  #2",
        "program": [
            "SELECT['yards of field goals that Adam Vinatieri did kick']",
            "FILTER['#1', 'that was over 40']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "yards of field goals that Adam Vinatieri did kick"
                ],
                "that was over 40"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals that Adam Vinatieri did kick)"
                ],
                "GET_QUESTION_SPAN(that was over 40)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_GT",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals that Adam Vinatieri did kick)"
                ],
                "GET_QUESTION_NUMBER(40)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    7,
                    8,
                    9
                ],
                [
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [
                    11
                ],
                [
                    6,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "field",
                "goals",
                "over",
                "40",
                "yards",
                "did",
                "Adam",
                "Vinatieri",
                "kick",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [
                    7
                ],
                [],
                [
                    8
                ],
                [
                    6,
                    10
                ],
                [
                    9
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    7,
                    8,
                    9
                ],
                [
                    2,
                    3
                ],
                [
                    4,
                    5
                ],
                [],
                [],
                [
                    11
                ],
                [
                    6,
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_919_81387e19-db52-4b7c-9c29-1f0b52e739d6",
        "question_text": "What happened first: Truce of Jam Zapolski or extension of Russo-Swedish truce?",
        "split": "train",
        "decomposition": "return when  was  the  Truce of Jam Zapolski ;return when  was  the  extension of the Russo-Swedish Truce ;return which was  first of #1 ,  #2",
        "program": [
            "SELECT['when was the Truce of Jam Zapolski']",
            "SELECT['when was the extension of the Russo-Swedish Truce']",
            "COMPARISON['min', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "when was the Truce of Jam Zapolski"
            ],
            [
                "SELECT",
                "when was the extension of the Russo-Swedish Truce"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the Truce of Jam Zapolski)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the extension of the Russo-Swedish Truce)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the Truce of Jam Zapolski)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the extension of the Russo-Swedish Truce)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    8
                ],
                [
                    5
                ],
                [
                    6,
                    7,
                    9
                ],
                [
                    10,
                    11,
                    12,
                    13
                ],
                [
                    14,
                    15
                ]
            ],
            "question_tokens": [
                "What",
                "happened",
                "first",
                ":",
                "Truce",
                "of",
                "Jam",
                "Zapolski",
                "or",
                "extension",
                "of",
                "Russo",
                "-",
                "Swedish",
                "truce",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    4,
                    5
                ],
                [
                    8
                ],
                [
                    6,
                    7,
                    9
                ],
                [],
                [
                    10,
                    11,
                    13
                ],
                [
                    12
                ],
                [
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    3,
                    8
                ],
                [
                    1,
                    2,
                    4
                ],
                [],
                [
                    6,
                    7,
                    9
                ],
                [],
                [
                    11,
                    12,
                    13
                ],
                [
                    14
                ],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    14
                ],
                [
                    4,
                    11
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1918_cf10db6f-f87b-4603-a1f5-9c3293e52d61",
        "question_text": "Which age group contained the largest chunk of the counties population?",
        "split": "train",
        "decomposition": "return age groups ;return chunk of the  counties population of  #1 ;return #1 where #2 is the  largest",
        "program": [
            "SELECT['age groups']",
            "PROJECT['chunk of the counties population of #REF', '#1']",
            "COMPARATIVE['#1', '#2', 'is the largest']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "age groups"
            ],
            [
                "PROJECT",
                "chunk of the counties population of #REF",
                [
                    "SELECT",
                    "age groups"
                ]
            ],
            "is the largest"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(age groups)"
            ],
            [
                "PARTIAL_GROUP_sum",
                [
                    "PARTIAL_SELECT_NUM",
                    "GET_QUESTION_SPAN(chunk of the counties population of #REF)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is the largest)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(age groups)"
            ],
            [
                "PARTIAL_SELECT_SINGLE_NUM",
                "GET_QUESTION_SPAN(chunk of the counties population of #REF)"
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is the largest)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    4
                ],
                [],
                [
                    5,
                    6
                ],
                [],
                [
                    7,
                    9,
                    10
                ],
                [
                    11
                ]
            ],
            "question_tokens": [
                "Which",
                "age",
                "group",
                "contained",
                "the",
                "largest",
                "chunk",
                "of",
                "the",
                "counties",
                "population",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2,
                    3
                ],
                [],
                [],
                [],
                [],
                [
                    5,
                    6
                ],
                [],
                [],
                [],
                [
                    10
                ],
                [
                    9
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0,
                    1
                ],
                [
                    2,
                    3
                ],
                [],
                [],
                [],
                [
                    5,
                    6
                ],
                [
                    7
                ],
                [],
                [
                    9
                ],
                [
                    10,
                    11
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2400_3c3aaf5d-d6ac-4c7d-bfeb-e8c3f7c3053d",
        "question_text": "Which shares rose the least: Qualcomm or 12 other large-cap stocks?",
        "split": "train",
        "decomposition": "return how the  shares of Qualcomm rose ;return how the  shares of 12 other large-cap stocks rose ;return which is the  least of #1 ,  #2",
        "program": [
            "SELECT['how the shares of Qualcomm rose']",
            "SELECT['how the shares of 12 other large-cap stocks rose']",
            "COMPARISON['min', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "how the shares of Qualcomm rose"
            ],
            [
                "SELECT",
                "how the shares of 12 other large-cap stocks rose"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(how the shares of Qualcomm rose)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(how the shares of 12 other large-cap stocks rose)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(how the shares of Qualcomm rose)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(how the shares of 12 other large-cap stocks rose)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4,
                    5,
                    6,
                    7
                ],
                [
                    3
                ],
                [
                    8
                ],
                [
                    9,
                    10,
                    11
                ],
                [
                    12,
                    13,
                    14
                ]
            ],
            "question_tokens": [
                "Which",
                "shares",
                "rose",
                "the",
                "least",
                ":",
                "Qualcomm",
                "or",
                "12",
                "other",
                "large",
                "-",
                "cap",
                "stocks",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    4,
                    5
                ],
                [],
                [],
                [
                    6,
                    7,
                    8
                ],
                [],
                [
                    9
                ],
                [
                    10
                ],
                [
                    11,
                    13
                ],
                [
                    12
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    7
                ],
                [
                    4,
                    5,
                    6
                ],
                [
                    1,
                    2
                ],
                [
                    8,
                    9
                ],
                [],
                [
                    10,
                    11
                ],
                [
                    12,
                    13
                ],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    4
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    13
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    13
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2377_d15c3a26-e408-4886-8690-d523ebb399a1",
        "question_text": "How many more AFV/APC were there than main battle tanks?",
        "split": "train",
        "decomposition": "return AFV/APC ;return main battle tanks ;return number of  #1 ;return number of  #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['AFV/APC']",
            "SELECT['main battle tanks']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "AFV/APC"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "main battle tanks"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(AFV/APC)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(main battle tanks)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(AFV/APC)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(main battle tanks)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4,
                    5
                ],
                [],
                [],
                [
                    6,
                    7,
                    8,
                    9,
                    11
                ],
                [],
                [
                    10,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "AFV",
                "/",
                "APC",
                "were",
                "there",
                "than",
                "main",
                "battle",
                "tanks",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    3,
                    4
                ],
                [],
                [],
                [
                    5
                ],
                [],
                [],
                [
                    6,
                    7,
                    8
                ],
                [
                    9,
                    11
                ],
                [],
                [
                    10
                ],
                [],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    7
                ],
                [
                    3
                ],
                [
                    5
                ],
                [
                    4
                ],
                [],
                [],
                [
                    6,
                    9
                ],
                [
                    8,
                    11
                ],
                [
                    10
                ],
                [],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    11
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_750_45786372-2425-498c-8014-a739ccee7c02",
        "question_text": "How many touchdowns longer than 10 yards were scored?",
        "split": "train",
        "decomposition": "return yards of touchdowns that were scored ;return #1 that were longer than 10 yards ;return number of  #2",
        "program": [
            "SELECT['yards of touchdowns that were scored']",
            "FILTER['#1', 'that were longer than 10 yards']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "yards of touchdowns that were scored"
                ],
                "that were longer than 10 yards"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdowns that were scored)"
                ],
                "GET_QUESTION_SPAN(that were longer than 10 yards)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_GT",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdowns that were scored)"
                ],
                "GET_QUESTION_NUMBER(10)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4
                ],
                [],
                [
                    9
                ],
                [
                    5,
                    6,
                    7,
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "touchdowns",
                "longer",
                "than",
                "10",
                "yards",
                "were",
                "scored",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4
                ],
                [],
                [],
                [],
                [],
                [
                    5,
                    6,
                    7,
                    8
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    5,
                    7
                ],
                [
                    3,
                    4
                ],
                [],
                [],
                [
                    9
                ],
                [
                    6,
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1726_9cf6accb-3e33-442a-82f8-644a0470379b",
        "question_text": "How many yards was Nugent's shortest second quarter field goal?",
        "split": "train",
        "decomposition": "return yards of Nugent 's second quarter field goals ;return shortest of #1",
        "program": [
            "SELECT[\"yards of Nugent 's second quarter field goals\"]",
            "AGGREGATE['min', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "yards of Nugent 's second quarter field goals"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of Nugent 's second quarter field goals)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of Nugent 's second quarter field goals)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    9,
                    10
                ],
                [],
                [
                    8,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "Nugent",
                "'s",
                "shortest",
                "second",
                "quarter",
                "field",
                "goal",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    5,
                    6,
                    9,
                    10
                ],
                [],
                [
                    4
                ],
                [
                    7
                ],
                [
                    8
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    7
                ],
                [
                    6,
                    9,
                    10
                ],
                [],
                [],
                [
                    8,
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1641_37946997-0998-4f27-98e3-45d022f7733f",
        "question_text": "How many field goals longer than 35 yards did Joe Nedney kick?",
        "split": "train",
        "decomposition": "return yards of field goals that Joe Nedney did kick ;return #1 that was  longer than 35 yards ;return number of  #2",
        "program": [
            "SELECT['yards of field goals that Joe Nedney did kick']",
            "FILTER['#1', 'that was longer than 35 yards']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "yards of field goals that Joe Nedney did kick"
                ],
                "that was longer than 35 yards"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals that Joe Nedney did kick)"
                ],
                "GET_QUESTION_SPAN(that was longer than 35 yards)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_GT",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals that Joe Nedney did kick)"
                ],
                "GET_QUESTION_NUMBER(35)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    8,
                    10
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [
                    12
                ],
                [
                    7,
                    9,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "field",
                "goals",
                "longer",
                "than",
                "35",
                "yards",
                "did",
                "Joe",
                "Nedney",
                "kick",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [
                    8
                ],
                [],
                [],
                [
                    6,
                    7,
                    9,
                    11
                ],
                [
                    10
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    8,
                    10
                ],
                [
                    2,
                    3
                ],
                [
                    4,
                    5,
                    6
                ],
                [
                    9
                ],
                [],
                [
                    12
                ],
                [
                    7,
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    7
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1355_50bf3bd0-6ad0-46d7-83cc-90c617f21c58",
        "question_text": "What player scored the first points of the game?",
        "split": "train",
        "decomposition": "return player that scored the  first points of the game",
        "program": [
            "SELECT['player that scored the first points of the game']"
        ],
        "nested_expression": [
            "SELECT",
            "player that scored the first points of the game"
        ],
        "typed_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(player that scored the first points of the game)"
        ],
        "drop_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(player that scored the first points of the game)"
        ],
        "operators": [
            "select"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    6,
                    7
                ],
                [
                    4,
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "What",
                "player",
                "scored",
                "the",
                "first",
                "points",
                "of",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1,
                    2,
                    5
                ],
                [
                    3
                ],
                [
                    4,
                    6,
                    7
                ],
                [
                    8,
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2,
                    5
                ],
                [
                    3,
                    6,
                    7
                ],
                [],
                [
                    4,
                    8,
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_270_00a0eee3-6be7-4f9e-8c1f-cf5135854184",
        "question_text": "How many years did the Second Bulgarian Empire last according to its generally accepted end date?",
        "split": "train",
        "decomposition": "return years the  Second Bulgarian Empire last according to its generally accepted end date ;return the  number of  #1",
        "program": [
            "SELECT['years the Second Bulgarian Empire last according to its generally accepted end date']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "years the Second Bulgarian Empire last according to its generally accepted end date"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years the Second Bulgarian Empire last according to its generally accepted end date)"
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Single_Event",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years the Second Bulgarian Empire last according to its generally accepted end date)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    8
                ],
                [
                    4,
                    5,
                    6,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15
                ],
                [
                    7,
                    16
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "did",
                "the",
                "Second",
                "Bulgarian",
                "Empire",
                "last",
                "according",
                "to",
                "its",
                "generally",
                "accepted",
                "end",
                "date",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    8
                ],
                [
                    6,
                    13,
                    15
                ],
                [
                    5,
                    7,
                    9
                ],
                [
                    10,
                    11,
                    14
                ],
                [
                    12
                ],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3
                ],
                [
                    8,
                    15
                ],
                [
                    4,
                    5,
                    6,
                    9,
                    10,
                    13
                ],
                [
                    7,
                    11,
                    12,
                    14
                ],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    15
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    15
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    15
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    15
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2221_15c47652-6ad9-486d-ba18-db90361d2a1d",
        "question_text": "Which groups in average are under 4 in size?",
        "split": "train",
        "decomposition": "return groups ;return size of #1 ;return #1 where #2 is lower than 4",
        "program": [
            "SELECT['groups']",
            "PROJECT['size of #REF', '#1']",
            "COMPARATIVE['#1', '#2', 'is lower than 4']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "groups"
            ],
            [
                "PROJECT",
                "size of #REF",
                [
                    "SELECT",
                    "groups"
                ]
            ],
            "is lower than 4"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(groups)"
            ],
            [
                "PARTIAL_GROUP_sum",
                [
                    "PARTIAL_SELECT_NUM",
                    "GET_QUESTION_SPAN(size of #REF)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is lower than 4)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(groups)"
            ],
            [
                "PARTIAL_SELECT_SINGLE_NUM",
                "GET_QUESTION_SPAN(size of #REF)"
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is lower than 4)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    5,
                    6
                ],
                [
                    3
                ],
                [
                    4
                ],
                [],
                [
                    2,
                    7,
                    8
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "Which",
                "groups",
                "in",
                "average",
                "are",
                "under",
                "4",
                "in",
                "size",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2
                ],
                [
                    3
                ],
                [],
                [
                    4
                ],
                [
                    5,
                    6
                ],
                [],
                [],
                [],
                [
                    7
                ],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    6
                ],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    2,
                    7
                ],
                [
                    8,
                    9
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1816_a23e070e-303f-459c-bd52-5cf456210be9",
        "question_text": "Did fewer working Las Vegas residents commute by driving alone or via carpool in 2016?",
        "split": "train",
        "decomposition": "return working Las Vegas residents that commute by driving in  2016 ;return working Las Vegas residents that commute via carpool in  2016 ;return number of  #1 ;return number of  #2 ;return which is  lowest of  #3 , #4",
        "program": [
            "SELECT['working Las Vegas residents that commute by driving in 2016']",
            "SELECT['working Las Vegas residents that commute via carpool in 2016']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['min', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "working Las Vegas residents that commute by driving in 2016"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "working Las Vegas residents that commute via carpool in 2016"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(working Las Vegas residents that commute by driving in 2016)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(working Las Vegas residents that commute via carpool in 2016)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(working Las Vegas residents that commute by driving in 2016)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(working Las Vegas residents that commute via carpool in 2016)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    10
                ],
                [],
                [
                    7,
                    8,
                    9,
                    11
                ],
                [
                    13
                ],
                [
                    12,
                    14,
                    15
                ]
            ],
            "question_tokens": [
                "Did",
                "fewer",
                "working",
                "Las",
                "Vegas",
                "residents",
                "commute",
                "by",
                "driving",
                "alone",
                "or",
                "via",
                "carpool",
                "in",
                "2016",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    5
                ],
                [
                    6
                ],
                [
                    4,
                    7
                ],
                [
                    8,
                    9
                ],
                [],
                [
                    10
                ],
                [
                    13
                ],
                [
                    11,
                    12,
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0,
                    10
                ],
                [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [
                    7,
                    8
                ],
                [],
                [
                    9,
                    13
                ],
                [
                    11,
                    12,
                    14
                ],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    14
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    14
                ],
                [
                    8,
                    14
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_353_df590009-5a61-4e3e-bed5-df70b942d0b1",
        "question_text": "Which occurred first, Laws in Wales Acts or the Edwardian Conquest of Wales?",
        "split": "train",
        "decomposition": "return when  was  the  Laws in  Wales Acts ;return when  was  the  Edwardian Conquest of Wales ;return which was  first of #1 ,  #2",
        "program": [
            "SELECT['when was the Laws in Wales Acts']",
            "SELECT['when was the Edwardian Conquest of Wales']",
            "COMPARISON['min', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "when was the Laws in Wales Acts"
            ],
            [
                "SELECT",
                "when was the Edwardian Conquest of Wales"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the Laws in Wales Acts)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the Edwardian Conquest of Wales)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the Laws in Wales Acts)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the Edwardian Conquest of Wales)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    8
                ],
                [
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    9,
                    10,
                    11,
                    12
                ],
                [
                    13,
                    14
                ]
            ],
            "question_tokens": [
                "Which",
                "occurred",
                "first",
                ",",
                "Laws",
                "in",
                "Wales",
                "Acts",
                "or",
                "the",
                "Edwardian",
                "Conquest",
                "of",
                "Wales",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [],
                [
                    5
                ],
                [
                    4,
                    6,
                    7
                ],
                [],
                [
                    8,
                    10
                ],
                [
                    12
                ],
                [
                    11,
                    13
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    3,
                    8
                ],
                [
                    1,
                    2,
                    4
                ],
                [
                    5
                ],
                [
                    6,
                    7
                ],
                [],
                [
                    10,
                    11
                ],
                [
                    13
                ],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    1,
                    13
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    13
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    13
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_656_c397d0d9-f217-4166-bc0a-e48900ed86ca",
        "question_text": "Which event happened first, King Henry IV gave Guadalajara the title of 'City' or El Palacio del Infantado was completed?",
        "split": "train",
        "decomposition": "return when  did King Henry IV give Guadalajara the  title of 'City ;return when  was  El Palacio del Infantado completed ;return which was  first of #1 ,  #2",
        "program": [
            "SELECT[\"when did King Henry IV give Guadalajara the title of 'City\"]",
            "SELECT['when was El Palacio del Infantado completed']",
            "COMPARISON['min', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "when did King Henry IV give Guadalajara the title of 'City"
            ],
            [
                "SELECT",
                "when was El Palacio del Infantado completed"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did King Henry IV give Guadalajara the title of 'City)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was El Palacio del Infantado completed)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did King Henry IV give Guadalajara the title of 'City)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was El Palacio del Infantado completed)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    8,
                    16
                ],
                [
                    6,
                    7,
                    9,
                    10,
                    12,
                    13
                ],
                [
                    11
                ],
                [
                    14,
                    15,
                    17,
                    18,
                    19,
                    21
                ],
                [
                    20,
                    22,
                    23
                ]
            ],
            "question_tokens": [
                "Which",
                "event",
                "happened",
                "first",
                ",",
                "King",
                "Henry",
                "IV",
                "gave",
                "Guadalajara",
                "the",
                "title",
                "of",
                "'",
                "City",
                "'",
                "or",
                "El",
                "Palacio",
                "del",
                "Infantado",
                "was",
                "completed",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    4
                ],
                [],
                [
                    5,
                    6,
                    7,
                    8
                ],
                [
                    10,
                    12,
                    14
                ],
                [
                    9,
                    11
                ],
                [
                    21
                ],
                [
                    13,
                    15,
                    16,
                    17
                ],
                [
                    22
                ],
                [
                    18,
                    19,
                    20
                ],
                [
                    23
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    21
                ],
                [
                    4,
                    16
                ],
                [
                    1,
                    2,
                    3,
                    5,
                    8
                ],
                [
                    6,
                    9,
                    13
                ],
                [
                    7,
                    14
                ],
                [
                    11
                ],
                [
                    15,
                    17,
                    18
                ],
                [
                    19,
                    20
                ],
                [
                    22,
                    23
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    3
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    15
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    15
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    15
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    20
                ],
                [
                    17,
                    22
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    20,
                    20
                ],
                [
                    21,
                    21
                ],
                [
                    21,
                    22
                ],
                [
                    22,
                    22
                ],
                [
                    23,
                    23
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2192_0e575a05-4c56-4cdd-b62c-5a1845374f61",
        "question_text": "Which player passed  the first touchdown play in the game?",
        "split": "train",
        "decomposition": "return the  first touchdown pass of the game ;return the  player that passed #1",
        "program": [
            "SELECT['the first touchdown pass of the game']",
            "PROJECT['the player that passed #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "the player that passed #REF",
            [
                "SELECT",
                "the first touchdown pass of the game"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the player that passed #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the first touchdown pass of the game)"
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the player that passed #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the first touchdown pass of the game)"
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    5,
                    8
                ],
                [
                    4,
                    6
                ],
                [
                    2,
                    7
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "passed",
                "the",
                "first",
                "touchdown",
                "play",
                "in",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    2
                ],
                [
                    0,
                    1,
                    5
                ],
                [
                    3,
                    4
                ],
                [],
                [],
                [
                    6,
                    7,
                    8
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    3,
                    4,
                    5,
                    8
                ],
                [],
                [
                    7
                ],
                [
                    6
                ],
                [
                    9,
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1966_1f3f7cf5-e51c-44a4-b689-c7c5e64a17e6",
        "question_text": "What religion had the highest population?",
        "split": "train",
        "decomposition": "return religions ;return populations of #1 ;return #1 where #2 is the  highest",
        "program": [
            "SELECT['religions']",
            "PROJECT['populations of #REF', '#1']",
            "COMPARATIVE['#1', '#2', 'is the highest']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "religions"
            ],
            [
                "PROJECT",
                "populations of #REF",
                [
                    "SELECT",
                    "religions"
                ]
            ],
            "is the highest"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(religions)"
            ],
            [
                "PARTIAL_GROUP_sum",
                [
                    "PARTIAL_SELECT_NUM",
                    "GET_QUESTION_SPAN(populations of #REF)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is the highest)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(religions)"
            ],
            [
                "PARTIAL_SELECT_SINGLE_NUM",
                "GET_QUESTION_SPAN(populations of #REF)"
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is the highest)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2
                ],
                [
                    1,
                    3
                ],
                [],
                [
                    4
                ],
                [],
                [
                    5
                ],
                [
                    6
                ]
            ],
            "question_tokens": [
                "What",
                "religion",
                "had",
                "the",
                "highest",
                "population",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [],
                [
                    1
                ],
                [],
                [],
                [],
                [
                    2
                ],
                [
                    4
                ],
                [],
                [],
                [
                    5
                ],
                [],
                [],
                [
                    6
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    5,
                    6
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1424_7d4fab5f-e599-47d3-93d5-09c4a47fd632",
        "question_text": "How long was the shortest field goal?",
        "split": "train",
        "decomposition": "return field goals ;return shortest of  #1 ;return how long was #2",
        "program": [
            "SELECT['field goals']",
            "AGGREGATE['min', '#1']",
            "PROJECT['how long was #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "how long was #REF",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "field goals"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(how long was #REF)",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(how long was #REF)",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [],
                [
                    2,
                    4,
                    5,
                    6
                ],
                [],
                [
                    7
                ]
            ],
            "question_tokens": [
                "How",
                "long",
                "was",
                "the",
                "shortest",
                "field",
                "goal",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [],
                [
                    2,
                    4,
                    5,
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    3
                ],
                [],
                [
                    2
                ],
                [
                    4,
                    5,
                    6
                ],
                [],
                [],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2239_a90bc8b9-6e62-4298-b3b7-ca70b70264d9",
        "question_text": "Which part of the world had the lowest number of d-screens?",
        "split": "train",
        "decomposition": "return parts of the  world ;return d-screens in  #1 ;return number of  #2 for each #1 ;return #1 where #3 is lowest",
        "program": [
            "SELECT['parts of the world']",
            "PROJECT['d-screens in #REF', '#1']",
            "GROUP['count', '#2', '#1']",
            "SUPERLATIVE['min', '#1', '#3']"
        ],
        "nested_expression": [
            "SUPERLATIVE_min",
            [
                "SELECT",
                "parts of the world"
            ],
            [
                "GROUP_count",
                [
                    "PROJECT",
                    "d-screens in #REF",
                    [
                        "SELECT",
                        "parts of the world"
                    ]
                ],
                [
                    "SELECT",
                    "parts of the world"
                ]
            ]
        ],
        "typed_nested_expression": [
            "SUPERLATIVE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(parts of the world)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(d-screens in #REF)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "SUPERLATIVE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(parts of the world)"
            ],
            [
                "PARTIAL_SELECT_SINGLE_NUM",
                "GET_QUESTION_SPAN(d-screens in #REF)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "superlative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    4
                ],
                [
                    2,
                    3,
                    6,
                    9,
                    11
                ],
                [],
                [
                    5,
                    7,
                    8,
                    10,
                    12
                ],
                [
                    13
                ]
            ],
            "question_tokens": [
                "Which",
                "part",
                "of",
                "the",
                "world",
                "had",
                "the",
                "lowest",
                "number",
                "of",
                "d",
                "-",
                "screens",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    4
                ],
                [],
                [],
                [],
                [
                    5,
                    7,
                    8,
                    10,
                    12
                ],
                [
                    9,
                    11
                ],
                [],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0,
                    1
                ],
                [
                    3,
                    4,
                    6
                ],
                [
                    11
                ],
                [],
                [],
                [
                    5,
                    7,
                    10
                ],
                [
                    2,
                    8,
                    9,
                    12
                ],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    4
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    12
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    12
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3432_b98c7dec-9d4e-40de-ae17-dc593976e5d8",
        "question_text": "How many field goals did Prater get over 35 yards?",
        "split": "train",
        "decomposition": "return field goals that Prater get ;return #1 over 35 yards ;return number of  #2",
        "program": [
            "SELECT['field goals that Prater get']",
            "FILTER['#1', 'over 35 yards']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "field goals that Prater get"
                ],
                "over 35 yards"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that Prater get)"
                ],
                "GET_QUESTION_SPAN(over 35 yards)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_GT",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that Prater get)"
                ],
                "GET_QUESTION_NUMBER(35)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    4
                ],
                [
                    2,
                    3,
                    7,
                    8
                ],
                [
                    6
                ],
                [
                    10
                ],
                [
                    5,
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "field",
                "goals",
                "did",
                "Prater",
                "get",
                "over",
                "35",
                "yards",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    7
                ],
                [
                    4
                ],
                [],
                [
                    6
                ],
                [],
                [
                    5,
                    8,
                    9
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    4
                ],
                [
                    2,
                    3
                ],
                [
                    5,
                    7,
                    8
                ],
                [],
                [
                    6
                ],
                [
                    10
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1999_cb5b7114-110d-430a-ad47-8cdd1f6a5d58",
        "question_text": "How many touchdown passes longer than 1 yard did Tom Brady throw?",
        "split": "train",
        "decomposition": "return touchdown passes of Tom Brady ;return yards of #1 ;return #1 where #2 is higher than 1 ;return number of  #3",
        "program": [
            "SELECT['touchdown passes of Tom Brady']",
            "PROJECT['yards of #REF', '#1']",
            "COMPARATIVE['#1', '#2', 'is higher than 1']",
            "AGGREGATE['count', '#3']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "touchdown passes of Tom Brady"
                ],
                [
                    "PROJECT",
                    "yards of #REF",
                    [
                        "SELECT",
                        "touchdown passes of Tom Brady"
                    ]
                ],
                "is higher than 1"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes of Tom Brady)"
                ],
                [
                    "PARTIAL_GROUP_sum",
                    [
                        "PARTIAL_SELECT_NUM",
                        "GET_QUESTION_SPAN(yards of #REF)"
                    ]
                ],
                [
                    "CONDITION",
                    "GET_QUESTION_SPAN(is higher than 1)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_GT",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes of Tom Brady)"
                ],
                "GET_QUESTION_NUMBER(1)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "comparative",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    8,
                    10
                ],
                [
                    2,
                    4,
                    5,
                    7
                ],
                [
                    6,
                    9
                ],
                [
                    12
                ],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "touchdown",
                "passes",
                "longer",
                "than",
                "1",
                "yard",
                "did",
                "Tom",
                "Brady",
                "throw",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [],
                [
                    4,
                    5,
                    7
                ],
                [
                    9
                ],
                [
                    6,
                    8,
                    10
                ],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    9,
                    10
                ],
                [
                    6,
                    8,
                    11
                ],
                [
                    2,
                    3,
                    7
                ],
                [
                    4,
                    5
                ],
                [],
                [],
                [
                    12
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    7
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_2064_e3ee593d-095d-4373-83fe-6399c45feea9",
        "question_text": "How many more points did the 49ers score during the playoffs compared to their opponents?",
        "split": "dev",
        "decomposition": "return points that the  49ers did score during the playoffs ;return points that the  opponents did score during the playoffs ;return sum of #1 ;return sum of #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['points that the 49ers did score during the playoffs']",
            "SELECT['points that the opponents did score during the playoffs']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "points that the 49ers did score during the playoffs"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "points that the opponents did score during the playoffs"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points that the 49ers did score during the playoffs)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points that the opponents did score during the playoffs)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points that the 49ers did score during the playoffs)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points that the opponents did score during the playoffs)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    11
                ],
                [
                    4
                ],
                [
                    3,
                    5,
                    6,
                    7,
                    8,
                    9
                ],
                [
                    10
                ],
                [],
                [
                    12,
                    13
                ],
                [
                    14,
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "points",
                "did",
                "the",
                "49ers",
                "score",
                "during",
                "the",
                "playoffs",
                "compared",
                "to",
                "their",
                "opponents",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    4
                ],
                [
                    3
                ],
                [
                    6
                ],
                [
                    7,
                    8
                ],
                [],
                [
                    10
                ],
                [],
                [],
                [],
                [],
                [
                    12,
                    13
                ],
                [],
                [
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    3
                ],
                [
                    4
                ],
                [
                    6
                ],
                [],
                [
                    10
                ],
                [
                    11
                ],
                [],
                [],
                [
                    13,
                    14
                ],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    14
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    14
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2562_1e421af4-4a45-4748-a960-77f8b159ed24",
        "question_text": "How many years apart were the British Saloon Car Championship season wins after 1970?",
        "split": "train",
        "decomposition": "return years of the  British Saloon Car Championship season wins after 1970 ;return the  highest of #1 ;return the  lowest of #1 ;return the  difference of #2 and  #3",
        "program": [
            "SELECT['years of the British Saloon Car Championship season wins after 1970']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['min', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "years of the British Saloon Car Championship season wins after 1970"
                ]
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "years of the British Saloon Car Championship season wins after 1970"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(years of the British Saloon Car Championship season wins after 1970)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(years of the British Saloon Car Championship season wins after 1970)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(years of the British Saloon Car Championship season wins after 1970)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(years of the British Saloon Car Championship season wins after 1970)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    12
                ],
                [
                    4
                ],
                [
                    3
                ],
                [
                    6
                ],
                [
                    9,
                    10
                ],
                [
                    7,
                    8,
                    11,
                    13
                ],
                [],
                [],
                [
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "apart",
                "were",
                "the",
                "British",
                "Saloon",
                "Car",
                "Championship",
                "season",
                "wins",
                "after",
                "1970",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [
                    8
                ],
                [
                    11,
                    12
                ],
                [
                    9
                ],
                [],
                [],
                [],
                [],
                [
                    10
                ],
                [
                    13
                ],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    12
                ],
                [
                    4
                ],
                [
                    3
                ],
                [
                    7
                ],
                [],
                [],
                [
                    6
                ],
                [
                    9
                ],
                [
                    11
                ],
                [
                    13
                ],
                [
                    8
                ],
                [],
                [],
                [],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    13
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1962_355ca7c5-b3f9-4aca-8ed6-e0b8dc745835",
        "question_text": "How many yards were scored on touchdown passes by Drew Brees?",
        "split": "dev",
        "decomposition": "return yards of touchdown passes of  Drew Brees ;return sum of #1",
        "program": [
            "SELECT['yards of touchdown passes of Drew Brees']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "yards of touchdown passes of Drew Brees"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdown passes of Drew Brees)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdown passes of Drew Brees)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    7
                ],
                [],
                [
                    6,
                    8,
                    9,
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "were",
                "scored",
                "on",
                "touchdown",
                "passes",
                "by",
                "Drew",
                "Brees",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    4
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    8,
                    9,
                    10
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3,
                    6
                ],
                [
                    2,
                    4,
                    5,
                    7
                ],
                [],
                [
                    8,
                    10
                ],
                [
                    9,
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    10
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    10
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1119_c06065ef-407a-41d3-930c-dd67990d53ac",
        "question_text": "The 1904 revolution was how many years before Gondra came out victorious in the presidential election?",
        "split": "train",
        "decomposition": "return year of the 1904 revolution ;return year that  Gondra came out victorious in  the presidential election ;return difference of #1 and  #2",
        "program": [
            "SELECT['year of the 1904 revolution']",
            "SELECT['year that Gondra came out victorious in the presidential election']",
            "ARITHMETIC['difference', '#1', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "year of the 1904 revolution"
            ],
            [
                "SELECT",
                "year that Gondra came out victorious in the presidential election"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year of the 1904 revolution)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year that Gondra came out victorious in the presidential election)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Two_Events",
            [
                "SELECT",
                "GET_QUESTION_SPAN(year of the 1904 revolution)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(year that Gondra came out victorious in the presidential election)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    2,
                    5,
                    6,
                    7
                ],
                [
                    0,
                    1,
                    3,
                    4,
                    8,
                    9
                ],
                [],
                [
                    10,
                    11,
                    12,
                    13,
                    14
                ],
                [
                    15,
                    16
                ]
            ],
            "question_tokens": [
                "The",
                "1904",
                "revolution",
                "was",
                "how",
                "many",
                "years",
                "before",
                "Gondra",
                "came",
                "out",
                "victorious",
                "in",
                "the",
                "presidential",
                "election",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    2,
                    5,
                    6,
                    7
                ],
                [
                    3,
                    4
                ],
                [
                    8
                ],
                [],
                [
                    1
                ],
                [],
                [
                    9,
                    10,
                    11
                ],
                [
                    12,
                    13
                ],
                [
                    14,
                    15
                ],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    4,
                    5,
                    6
                ],
                [
                    7
                ],
                [
                    2,
                    3
                ],
                [
                    8,
                    9
                ],
                [
                    10
                ],
                [],
                [
                    11,
                    12
                ],
                [
                    14,
                    15
                ],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    15
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    15
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    15
                ],
                [
                    8,
                    15
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    15
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    15
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    15
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1586_3f8d819f-7ca9-43c7-abf7-43163be96802",
        "question_text": "How many yards longer was Donovan McNabb's longest touchdown pass than his shortest?",
        "split": "dev",
        "decomposition": "return yards of touchdown passes of  Donovan McNabb ;return longest of #1 ;return shortest of #1 ;return the  difference of #2 and  #3",
        "program": [
            "SELECT['yards of touchdown passes of Donovan McNabb']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['min', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of touchdown passes of Donovan McNabb"
                ]
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of touchdown passes of Donovan McNabb"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes of Donovan McNabb)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes of Donovan McNabb)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes of Donovan McNabb)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes of Donovan McNabb)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    5
                ],
                [
                    2,
                    3,
                    4,
                    7,
                    8,
                    10
                ],
                [],
                [],
                [
                    11
                ],
                [
                    6,
                    9,
                    12,
                    13
                ],
                [],
                [
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "Donovan",
                "McNabb",
                "'s",
                "longest",
                "touchdown",
                "pass",
                "than",
                "his",
                "shortest",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    8
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    7,
                    9,
                    10,
                    12,
                    13
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [
                    5
                ],
                [],
                [
                    2,
                    4,
                    6
                ],
                [
                    7,
                    8,
                    10
                ],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [
                    9
                ],
                [
                    12,
                    13
                ],
                [],
                [],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    13
                ],
                [
                    5,
                    13
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3112_b4766942-1c93-4b05-b0f2-0bb496c0c348",
        "question_text": "Which team scored the most points in in the first half?",
        "split": "train",
        "decomposition": "return teams ;return points that #1 scored in  the  first half ;return the  sum of #2 for each #1 ;return #1 where #3 is the  most",
        "program": [
            "SELECT['teams']",
            "PROJECT['points that #REF scored in the first half', '#1']",
            "GROUP['sum', '#2', '#1']",
            "COMPARATIVE['#1', '#3', 'is the most']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "teams"
            ],
            [
                "GROUP_sum",
                [
                    "PROJECT",
                    "points that #REF scored in the first half",
                    [
                        "SELECT",
                        "teams"
                    ]
                ],
                [
                    "SELECT",
                    "teams"
                ]
            ],
            "is the most"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(teams)"
            ],
            [
                "PARTIAL_GROUP_sum",
                [
                    "PARTIAL_SELECT_NUM",
                    "GET_QUESTION_SPAN(points that #REF scored in the first half)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is the most)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(teams)"
            ],
            [
                "PARTIAL_GROUP_sum",
                [
                    "PARTIAL_SELECT_NUM",
                    "GET_QUESTION_SPAN(points that #REF scored in the first half)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is the most)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    4
                ],
                [
                    5
                ],
                [
                    9
                ],
                [
                    6,
                    7,
                    10
                ],
                [
                    11
                ]
            ],
            "question_tokens": [
                "Which",
                "team",
                "scored",
                "the",
                "most",
                "points",
                "in",
                "in",
                "the",
                "first",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    2,
                    4
                ],
                [],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [],
                [
                    2,
                    4
                ],
                [],
                [
                    5
                ],
                [
                    9
                ],
                [],
                [
                    6,
                    7
                ],
                [
                    10,
                    11
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    10
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2377_78fd886b-87c9-4c35-b182-f23c52ce57b9",
        "question_text": "Were there more SAM brigades or SSM brigades?",
        "split": "train",
        "decomposition": "return SAM brigades ;return SSM brigades ;return number of  #1 ;return number of  #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['SAM brigades']",
            "SELECT['SSM brigades']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "SAM brigades"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "SSM brigades"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(SAM brigades)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(SSM brigades)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(SAM brigades)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(SSM brigades)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3
                ],
                [],
                [
                    5
                ],
                [
                    4,
                    6,
                    7
                ],
                [],
                [
                    8
                ]
            ],
            "question_tokens": [
                "Were",
                "there",
                "more",
                "SAM",
                "brigades",
                "or",
                "SSM",
                "brigades",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    2
                ],
                [
                    1
                ],
                [],
                [],
                [],
                [],
                [
                    3
                ],
                [
                    4
                ],
                [],
                [],
                [],
                [
                    5
                ],
                [],
                [
                    6,
                    7
                ],
                [],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [],
                [
                    3,
                    4
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [
                    6,
                    7
                ],
                [],
                [],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1360_7286595d-d3bb-4d80-82bd-d10ccfee57d8",
        "question_text": "How many thousand men did Alexis lead?",
        "split": "train",
        "decomposition": "return men that Alexis did lead ;return number of  #1",
        "program": [
            "SELECT['men that Alexis did lead']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "men that Alexis did lead"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(men that Alexis did lead)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "SELECT",
                "GET_QUESTION_SPAN(men that Alexis did lead)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    4,
                    5,
                    6
                ],
                [
                    7
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "thousand",
                "men",
                "did",
                "Alexis",
                "lead",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    3
                ],
                [
                    2
                ],
                [
                    4,
                    6
                ],
                [],
                [
                    5
                ],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    4
                ],
                [
                    3
                ],
                [],
                [
                    2,
                    5,
                    6
                ],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1328_15a35c49-4892-42f2-821d-5c785c99c727",
        "question_text": "How many yards was the shortest touchdown run",
        "split": "train",
        "decomposition": "return yards of touchdown runs ;return the  shortest of #1",
        "program": [
            "SELECT['yards of touchdown runs']",
            "AGGREGATE['min', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "yards of touchdown runs"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdown runs)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdown runs)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    5,
                    6,
                    7
                ],
                [
                    4
                ],
                []
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "the",
                "shortest",
                "touchdown",
                "run"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    5,
                    6,
                    7
                ],
                [],
                [
                    4
                ],
                [],
                [],
                [],
                []
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    6
                ],
                [
                    5,
                    7
                ],
                [],
                [],
                []
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    7
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2530_52efa3d4-1ee5-4233-9dc9-abf3f0dd8109",
        "question_text": "Who caught the final touchdown reception?",
        "split": "train",
        "decomposition": "return the  final touchdown reception ;return who  caught #1",
        "program": [
            "SELECT['the final touchdown reception']",
            "PROJECT['who caught #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "who caught #REF",
            [
                "SELECT",
                "the final touchdown reception"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who caught #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the final touchdown reception)"
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who caught #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the final touchdown reception)"
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [],
                [
                    6
                ]
            ],
            "question_tokens": [
                "Who",
                "caught",
                "the",
                "final",
                "touchdown",
                "reception",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [
                    2
                ],
                [],
                [],
                [
                    4
                ],
                [
                    5
                ],
                [
                    6
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [],
                [],
                [
                    6
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3019_96f191e2-9fd5-4f10-a8c3-57d2d810a268",
        "question_text": "How many total yards of all kinds did Darren Sproles have?",
        "split": "train",
        "decomposition": "return yards of all kinds of  Darren Sproles ;return sum of #1",
        "program": [
            "SELECT['yards of all kinds of Darren Sproles']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "yards of all kinds of Darren Sproles"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of all kinds of Darren Sproles)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of all kinds of Darren Sproles)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    7,
                    8,
                    10
                ],
                [
                    4,
                    6
                ],
                [
                    9,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "total",
                "yards",
                "of",
                "all",
                "kinds",
                "did",
                "Darren",
                "Sproles",
                "have",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    5,
                    8
                ],
                [],
                [
                    4,
                    6,
                    7
                ],
                [],
                [
                    9,
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    10
                ],
                [
                    2,
                    3,
                    5,
                    6,
                    7,
                    8
                ],
                [
                    4
                ],
                [
                    9
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1316_9f89e1e3-6515-4a38-a85a-61924fc3f2c2",
        "question_text": "Which player kicked the most second half field goals?",
        "split": "train",
        "decomposition": "return players ;return second half field goals of #1 ;return number of  #2 for each #1 ;return #1 where #3 is highest",
        "program": [
            "SELECT['players']",
            "PROJECT['second half field goals of #REF', '#1']",
            "GROUP['count', '#2', '#1']",
            "SUPERLATIVE['max', '#1', '#3']"
        ],
        "nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "players"
            ],
            [
                "GROUP_count",
                [
                    "PROJECT",
                    "second half field goals of #REF",
                    [
                        "SELECT",
                        "players"
                    ]
                ],
                [
                    "SELECT",
                    "players"
                ]
            ]
        ],
        "typed_nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(players)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(second half field goals of #REF)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(players)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(second half field goals of #REF)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "superlative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0
                ],
                [
                    3
                ],
                [
                    5,
                    6
                ],
                [
                    1,
                    2,
                    4
                ],
                [
                    7,
                    8
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "kicked",
                "the",
                "most",
                "second",
                "half",
                "field",
                "goals",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    2,
                    4
                ],
                [],
                [
                    7,
                    8
                ],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0,
                    1
                ],
                [
                    4
                ],
                [],
                [],
                [
                    5,
                    6
                ],
                [
                    2
                ],
                [
                    7
                ],
                [],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1158_f78238a9-e640-42a7-9603-8b5b2733bb77",
        "question_text": "How many yards were the  interceptions that were returned for a touchdown?",
        "split": "train",
        "decomposition": "return yards of interceptions that were returned for a touchdown",
        "program": [
            "SELECT['yards of interceptions that were returned for a touchdown']"
        ],
        "nested_expression": [
            "SELECT",
            "yards of interceptions that were returned for a touchdown"
        ],
        "typed_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(yards of interceptions that were returned for a touchdown)"
        ],
        "drop_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(yards of interceptions that were returned for a touchdown)"
        ],
        "operators": [
            "select"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    7,
                    8,
                    9,
                    10
                ],
                [
                    5,
                    6,
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "were",
                "the",
                "interceptions",
                "that",
                "were",
                "returned",
                "for",
                "a",
                "touchdown",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    4,
                    5,
                    6,
                    7,
                    8
                ],
                [
                    9,
                    10,
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2,
                    8
                ],
                [
                    3,
                    4,
                    5,
                    6,
                    7,
                    10
                ],
                [
                    9
                ],
                [
                    11,
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    11
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    11
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    11
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_208_21ffbddd-8490-41d8-b490-3863a46115cf",
        "question_text": "How many years passed since Hunt was stricken with cancer to when he had his prostate removed?",
        "split": "train",
        "decomposition": "return year that Hunt was  stricken with cancer ;return year that he had his prostate removed ;return difference of #2 and  #1",
        "program": [
            "SELECT['year that Hunt was stricken with cancer']",
            "SELECT['year that he had his prostate removed']",
            "ARITHMETIC['difference', '#2', '#1']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "year that he had his prostate removed"
            ],
            [
                "SELECT",
                "year that Hunt was stricken with cancer"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year that he had his prostate removed)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year that Hunt was stricken with cancer)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Two_Events",
            [
                "SELECT",
                "GET_QUESTION_SPAN(year that he had his prostate removed)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(year that Hunt was stricken with cancer)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    11,
                    12
                ],
                [
                    6,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    10,
                    13,
                    14
                ],
                [
                    15,
                    16,
                    17
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "passed",
                "since",
                "Hunt",
                "was",
                "stricken",
                "with",
                "cancer",
                "to",
                "when",
                "he",
                "had",
                "his",
                "prostate",
                "removed",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    4,
                    11
                ],
                [
                    5,
                    6
                ],
                [],
                [
                    7,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    13
                ],
                [
                    12
                ],
                [],
                [
                    14,
                    15,
                    16
                ],
                [
                    17
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4
                ],
                [
                    5,
                    6,
                    7,
                    11,
                    12
                ],
                [],
                [
                    8,
                    10
                ],
                [
                    9
                ],
                [
                    14
                ],
                [
                    15
                ],
                [
                    16,
                    17
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    16
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    16
                ],
                [
                    11,
                    16
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    16
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    16
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    15
                ],
                [
                    14,
                    16
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2600_7294b6b0-99ba-440b-b7bf-39aa0ebd44ef",
        "question_text": "How many points was Green Bay losing by to start the fourth quarter?",
        "split": "train",
        "decomposition": "return points that Green Bay was  losing by to start the  fourth quarter",
        "program": [
            "SELECT['points that Green Bay was losing by to start the fourth quarter']"
        ],
        "nested_expression": [
            "SELECT",
            "points that Green Bay was losing by to start the fourth quarter"
        ],
        "typed_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(points that Green Bay was losing by to start the fourth quarter)"
        ],
        "drop_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(points that Green Bay was losing by to start the fourth quarter)"
        ],
        "operators": [
            "select"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    6,
                    8,
                    9,
                    10
                ],
                [
                    5,
                    7,
                    11,
                    12,
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "points",
                "was",
                "Green",
                "Bay",
                "losing",
                "by",
                "to",
                "start",
                "the",
                "fourth",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    4,
                    5,
                    6
                ],
                [
                    7,
                    8,
                    9,
                    10,
                    11
                ],
                [
                    12,
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2,
                    3,
                    6
                ],
                [
                    4,
                    10
                ],
                [
                    5,
                    7,
                    8,
                    9
                ],
                [
                    11,
                    12,
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    12
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    12
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_838_75861e0a-8142-4f47-a7a3-eed1633dabb5",
        "question_text": "How many yards longer was Delhomme's TD pass than Bulger's in the first quarter?",
        "split": "train",
        "decomposition": "return yards of the  TD pass of  Delhomme in  the first quarter ;return yards of the  TD pass of  Bulger in  the first quarter ;return the  difference of #1 and  #2",
        "program": [
            "SELECT['yards of the TD pass of Delhomme in the first quarter']",
            "SELECT['yards of the TD pass of Bulger in the first quarter']",
            "ARITHMETIC['difference', '#1', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "yards of the TD pass of Delhomme in the first quarter"
            ],
            [
                "SELECT",
                "yards of the TD pass of Bulger in the first quarter"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of the TD pass of Delhomme in the first quarter)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of the TD pass of Bulger in the first quarter)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of the TD pass of Delhomme)"
                    ],
                    "GET_QUESTION_SPAN(in the first quarter)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of the TD pass of Bulger)"
                    ],
                    "GET_QUESTION_SPAN(in the first quarter)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    5
                ],
                [
                    7
                ],
                [
                    4
                ],
                [],
                [
                    10
                ],
                [
                    6,
                    8,
                    9,
                    11
                ],
                [
                    12,
                    14,
                    15
                ],
                [],
                [],
                [
                    16
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "Delhomme",
                "'s",
                "TD",
                "pass",
                "than",
                "Bulger",
                "'s",
                "in",
                "the",
                "first",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [
                    4,
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    10
                ],
                [],
                [
                    9
                ],
                [],
                [
                    15
                ],
                [],
                [],
                [],
                [],
                [
                    14
                ],
                [],
                [],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    10
                ],
                [
                    7
                ],
                [
                    8,
                    9
                ],
                [],
                [
                    12,
                    14,
                    15
                ],
                [],
                [],
                [],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    15
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    15
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    15
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_437_d4c2546a-72b0-4e63-80e6-933c932be2f8",
        "question_text": "How many years did Fakhr-al-Din II and his nephew rule?",
        "split": "train",
        "decomposition": "return years when  Fakhr-al-Din II rules ;return years when  the  nephew of Fakhr-al-Din II rules ;return the  number of  #1 ;return the  number of  #2 ;return the  sum of #3 and  #4",
        "program": [
            "SELECT['years when Fakhr-al-Din II rules']",
            "SELECT['years when the nephew of Fakhr-al-Din II rules']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['sum', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "years when Fakhr-al-Din II rules"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "years when the nephew of Fakhr-al-Din II rules"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(years when Fakhr-al-Din II rules)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(years when the nephew of Fakhr-al-Din II rules)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(years when Fakhr-al-Din II rules)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(years when the nephew of Fakhr-al-Din II rules)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    10
                ],
                [
                    1,
                    4
                ],
                [
                    3,
                    5,
                    6,
                    7,
                    8
                ],
                [
                    9
                ],
                [
                    11
                ],
                [
                    13
                ],
                [
                    12,
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "did",
                "Fakhr",
                "-",
                "al",
                "-",
                "Din",
                "II",
                "and",
                "his",
                "nephew",
                "rule",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    10
                ],
                [
                    2
                ],
                [],
                [
                    3,
                    4
                ],
                [
                    6
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    8
                ],
                [
                    9,
                    13
                ],
                [
                    11,
                    12
                ],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    4,
                    10
                ],
                [
                    3
                ],
                [],
                [
                    5,
                    6,
                    7,
                    8
                ],
                [
                    9
                ],
                [],
                [],
                [
                    11
                ],
                [
                    12
                ],
                [
                    13
                ],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    13
                ],
                [
                    4,
                    12
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_495_254fa806-7ef6-4356-8329-a351abec6d21",
        "question_text": "How many yards difference exists between John Kasay's longest and shortest field goal?",
        "split": "train",
        "decomposition": "return yards of field goals of  John Kasay ;return the  longest of #1 ;return the  shortest of #1 ;return the  difference of #2 and  #3",
        "program": [
            "SELECT['yards of field goals of John Kasay']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['min', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of field goals of John Kasay"
                ]
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of field goals of John Kasay"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of John Kasay)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of John Kasay)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of John Kasay)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of John Kasay)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [
                    5
                ],
                [
                    2,
                    4,
                    8,
                    9
                ],
                [
                    6
                ],
                [],
                [
                    10
                ],
                [
                    7,
                    11,
                    12,
                    13
                ],
                [],
                [
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "difference",
                "exists",
                "between",
                "John",
                "Kasay",
                "'s",
                "longest",
                "and",
                "shortest",
                "field",
                "goal",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    9
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    5
                ],
                [],
                [
                    8,
                    11,
                    12,
                    13
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3,
                    5
                ],
                [],
                [],
                [
                    2,
                    4,
                    7
                ],
                [
                    8,
                    9
                ],
                [],
                [],
                [],
                [],
                [
                    10
                ],
                [],
                [
                    11,
                    12,
                    13
                ],
                [],
                [],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    13
                ],
                [
                    5,
                    13
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    13
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1359_52a3ffe8-f663-4886-83be-82c891a2915d",
        "question_text": "What happened second: Charles X Gustav occupied Warsaw or Radziwi\u0142\u0142 recognizing Charles X Gustav?",
        "split": "train",
        "decomposition": "return when  Charles  X  Gustav occupied Warsaw ;return when  Radziwi\u0142\u0142 recognize Charles  X  Gustav ;return which is  the highest of  #1 , #2",
        "program": [
            "SELECT['when Charles X Gustav occupied Warsaw']",
            "SELECT['when Radziwi\\u0142\\u0142 recognize Charles X Gustav']",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "when Charles X Gustav occupied Warsaw"
            ],
            [
                "SELECT",
                "when Radziwi\u0142\u0142 recognize Charles X Gustav"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when Charles X Gustav occupied Warsaw)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when Radziwi\u0142\u0142 recognize Charles X Gustav)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when Charles X Gustav occupied Warsaw)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when Radziwi\u0142\u0142 recognize Charles X Gustav)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    9,
                    12,
                    13
                ],
                [],
                [
                    6,
                    7,
                    8,
                    10
                ],
                [
                    11
                ],
                [
                    14,
                    15
                ]
            ],
            "question_tokens": [
                "What",
                "happened",
                "second",
                ":",
                "Charles",
                "X",
                "Gustav",
                "occupied",
                "Warsaw",
                "or",
                "Radziwi\u0142\u0142",
                "recognizing",
                "Charles",
                "X",
                "Gustav",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    4,
                    5
                ],
                [
                    6
                ],
                [
                    7,
                    8
                ],
                [],
                [
                    9,
                    10,
                    13
                ],
                [
                    12,
                    14
                ],
                [
                    11
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    9
                ],
                [
                    1,
                    2,
                    3,
                    4,
                    5,
                    12,
                    13
                ],
                [
                    6
                ],
                [
                    7,
                    8
                ],
                [
                    10
                ],
                [
                    11,
                    14
                ],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    14
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    14
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    14
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2566_0db19b90-1210-4dc5-a5e4-5524a5881ae6",
        "question_text": "Which Manning threw more touchdowns?",
        "split": "train",
        "decomposition": "return Manning ;return touchdowns that #1 threw ;return the  number of  #2 for each #1 ;return #1 where #3 is the  highest",
        "program": [
            "SELECT['Manning']",
            "PROJECT['touchdowns that #REF threw', '#1']",
            "GROUP['count', '#2', '#1']",
            "COMPARATIVE['#1', '#3', 'is the highest']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "Manning"
            ],
            [
                "GROUP_count",
                [
                    "PROJECT",
                    "touchdowns that #REF threw",
                    [
                        "SELECT",
                        "Manning"
                    ]
                ],
                [
                    "SELECT",
                    "Manning"
                ]
            ],
            "is the highest"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(Manning)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(touchdowns that #REF threw)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is the highest)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(Manning)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(touchdowns that #REF threw)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is the highest)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3
                ],
                [
                    4
                ],
                [],
                [],
                [
                    5
                ]
            ],
            "question_tokens": [
                "Which",
                "Manning",
                "threw",
                "more",
                "touchdowns",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [],
                [],
                [],
                [
                    1
                ],
                [],
                [
                    2,
                    3
                ],
                [],
                [
                    4
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    5
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0
                ],
                [],
                [],
                [],
                [],
                [
                    2,
                    3
                ],
                [],
                [
                    4
                ],
                [],
                [],
                [],
                [
                    5
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    4
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1486_cd1e0092-028a-45a3-88b8-a68c40bb2cc7",
        "question_text": "Who kicked the longer field goal, Succop or Janikowski?",
        "split": "dev",
        "decomposition": "return how long was  the  field goal of Succop ;return how long was  the  field goal of Janikowski ;return which is longer of #1 ,  #2",
        "program": [
            "SELECT['how long was the field goal of Succop']",
            "SELECT['how long was the field goal of Janikowski']",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "how long was the field goal of Succop"
            ],
            [
                "SELECT",
                "how long was the field goal of Janikowski"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(how long was the field goal of Succop)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(how long was the field goal of Janikowski)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(how long was the field goal of Succop)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(how long was the field goal of Janikowski)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    3,
                    6,
                    8
                ],
                [
                    1,
                    2
                ],
                [
                    4,
                    5
                ],
                [
                    7
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "Who",
                "kicked",
                "the",
                "longer",
                "field",
                "goal",
                ",",
                "Succop",
                "or",
                "Janikowski",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [],
                [
                    1,
                    3
                ],
                [],
                [],
                [
                    5
                ],
                [],
                [
                    6,
                    7
                ],
                [
                    8
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    6,
                    8
                ],
                [
                    3
                ],
                [],
                [],
                [
                    5
                ],
                [
                    7
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    9
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1848_dacc5687-de71-42c3-819a-92b2f9132087",
        "question_text": "How many more percent were in the largest group compared to the smallest ancestry group?",
        "split": "train",
        "decomposition": "return the percents of the  ancestry groups ;return the highest of #1 ;return the lowest of #1 ;return the difference of #2 and  #3",
        "program": [
            "SELECT['the percents of the ancestry groups']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['min', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "the percents of the ancestry groups"
                ]
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "the percents of the ancestry groups"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the percents of the ancestry groups)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the percents of the ancestry groups)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the percents of the ancestry groups)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the percents of the ancestry groups)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    4
                ],
                [
                    7
                ],
                [],
                [],
                [
                    9,
                    10
                ],
                [
                    8,
                    12,
                    14
                ],
                [],
                [
                    13,
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "percent",
                "were",
                "in",
                "the",
                "largest",
                "group",
                "compared",
                "to",
                "the",
                "smallest",
                "ancestry",
                "group",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [],
                [],
                [
                    7
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    8
                ],
                [
                    9
                ],
                [],
                [
                    12
                ],
                [
                    14
                ],
                [],
                [],
                [
                    13
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3
                ],
                [
                    2
                ],
                [
                    4
                ],
                [],
                [],
                [
                    7
                ],
                [],
                [],
                [],
                [],
                [
                    9,
                    10
                ],
                [],
                [
                    12
                ],
                [],
                [
                    13
                ],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    14
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    14
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    14
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    14
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2141_a63b8253-1f0b-43d6-bca2-7dc9819ed85b",
        "question_text": "How many people, in terms of percentage, were either White, African American, or American Indian?",
        "split": "train",
        "decomposition": "return percentage of people that were White ;return percentage of people that were African American  ;return percentage of people that were American  Indian ;return sum of #1 and  #2 ;return sum of #3 and  #4",
        "program": [
            "SELECT['percentage of people that were White']",
            "SELECT['percentage of people that were African American']",
            "SELECT['percentage of people that were American Indian']",
            "ARITHMETIC['sum', '#1', '#2']",
            "ARITHMETIC['sum', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT",
                "percentage of people that were American Indian"
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT",
                    "percentage of people that were White"
                ],
                [
                    "SELECT",
                    "percentage of people that were African American"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percentage of people that were American Indian)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percentage of people that were White)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percentage of people that were African American)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percentage of people that were American Indian)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percentage of people that were White)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percentage of people that were African American)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    3
                ],
                [
                    1
                ],
                [],
                [],
                [
                    5,
                    8,
                    9,
                    10,
                    12,
                    13,
                    14,
                    15,
                    17
                ],
                [
                    7
                ],
                [
                    11
                ],
                [
                    16
                ],
                [
                    18
                ],
                [],
                [
                    19
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "people",
                ",",
                "in",
                "terms",
                "of",
                "percentage",
                ",",
                "were",
                "either",
                "White",
                ",",
                "African",
                "American",
                ",",
                "or",
                "American",
                "Indian",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    5,
                    8,
                    9,
                    10,
                    12,
                    14,
                    17
                ],
                [],
                [
                    7
                ],
                [],
                [
                    11
                ],
                [],
                [],
                [
                    13
                ],
                [],
                [],
                [],
                [],
                [
                    16,
                    18
                ],
                [],
                [],
                [],
                [
                    19
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [
                    8,
                    9,
                    10,
                    12,
                    13,
                    14,
                    15,
                    17
                ],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [],
                [],
                [],
                [
                    16,
                    18
                ],
                [
                    19
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    18
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    18
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    17,
                    18
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1709_396d10b4-fc4f-4a9a-8b8b-705d02c17e15",
        "question_text": "How many yards longer was the second longest field goal over the second shortest field goal?",
        "split": "train",
        "decomposition": "return yards of field goals ;return the  second  longest of #1 ;return the  second  shortest of #1 ;return the  difference of #2 and  #3",
        "program": [
            "SELECT['yards of field goals']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['min', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of field goals"
                ]
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of field goals"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    6,
                    7,
                    10,
                    12
                ],
                [],
                [],
                [],
                [
                    8,
                    9,
                    13,
                    14,
                    15
                ],
                [],
                [
                    16
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "the",
                "second",
                "longest",
                "field",
                "goal",
                "over",
                "the",
                "second",
                "shortest",
                "field",
                "goal",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    6,
                    7
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    8,
                    9,
                    12,
                    13,
                    14,
                    15
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    2,
                    4,
                    6
                ],
                [
                    7
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    10,
                    12
                ],
                [
                    8,
                    9,
                    13,
                    14,
                    15
                ],
                [],
                [],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    15
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    15
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    15
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    15
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_458_20d775ed-3cdd-445d-86d9-fcf2be217ff5",
        "question_text": "How many other churches did the Dutch Reformed Church merge with in 2004?",
        "split": "train",
        "decomposition": "return churches that the  Dutch Reformed Church merges with in  2004 ;return the  number of  #1",
        "program": [
            "SELECT['churches that the Dutch Reformed Church merges with in 2004']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "churches that the Dutch Reformed Church merges with in 2004"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(churches that the Dutch Reformed Church merges with in 2004)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(churches that the Dutch Reformed Church merges with in 2004)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    4
                ],
                [
                    2,
                    5,
                    6,
                    7,
                    9,
                    11
                ],
                [
                    8,
                    10,
                    12,
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "other",
                "churches",
                "did",
                "the",
                "Dutch",
                "Reformed",
                "Church",
                "merge",
                "with",
                "in",
                "2004",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    2
                ],
                [
                    0,
                    1,
                    3,
                    4
                ],
                [],
                [
                    5,
                    6
                ],
                [
                    7,
                    9,
                    10,
                    11
                ],
                [
                    8
                ],
                [
                    12,
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    4
                ],
                [
                    5,
                    6,
                    7,
                    9,
                    11
                ],
                [
                    10,
                    12
                ],
                [
                    8,
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    12
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_876_1c6fe9dd-ebfb-4bfd-977e-9c9a02fe96e9",
        "question_text": "How many field goals of at least 20 yards did Elam make in the second quarter?",
        "split": "train",
        "decomposition": "return field goals of Elam in  second quarter ;return yards of #1 ;return #1 where #2 at least 20 ;return number of  #3",
        "program": [
            "SELECT['field goals of Elam in second quarter']",
            "PROJECT['yards of #REF', '#1']",
            "COMPARATIVE['#1', '#2', 'at least 20']",
            "AGGREGATE['count', '#3']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "field goals of Elam in second quarter"
                ],
                [
                    "PROJECT",
                    "yards of #REF",
                    [
                        "SELECT",
                        "field goals of Elam in second quarter"
                    ]
                ],
                "at least 20"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Elam in second quarter)"
                ],
                [
                    "PARTIAL_GROUP_sum",
                    [
                        "PARTIAL_SELECT_NUM",
                        "GET_QUESTION_SPAN(yards of #REF)"
                    ]
                ],
                [
                    "CONDITION",
                    "GET_QUESTION_SPAN(at least 20)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_GT_EQ",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Elam in second quarter)"
                ],
                "GET_QUESTION_NUMBER(20)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "comparative",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    9
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [
                    10,
                    12,
                    13
                ],
                [
                    14,
                    15,
                    16
                ],
                [
                    7,
                    8,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "field",
                "goals",
                "of",
                "at",
                "least",
                "20",
                "yards",
                "did",
                "Elam",
                "make",
                "in",
                "the",
                "second",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [
                    9
                ],
                [
                    12
                ],
                [
                    10
                ],
                [
                    7,
                    8,
                    11
                ],
                [
                    14,
                    15
                ],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    10
                ],
                [
                    9
                ],
                [
                    2,
                    3,
                    7
                ],
                [
                    4,
                    5,
                    6,
                    8
                ],
                [
                    12
                ],
                [],
                [
                    14,
                    15,
                    16
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    8
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    15
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    15
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    15
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    15
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1266_4a3e7352-1dcb-41dd-a83b-72c6098fb5d9",
        "question_text": "Which happened later, the death of Richard's father or the Prayer Book Rebellion?",
        "split": "train",
        "decomposition": "return when  was  the  death of Richard 's father ;return when  was  the  Prayer Book Rebellion ;return which is the  highest of #1 ,  #2",
        "program": [
            "SELECT[\"when was the death of Richard 's father\"]",
            "SELECT['when was the Prayer Book Rebellion']",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "when was the death of Richard 's father"
            ],
            [
                "SELECT",
                "when was the Prayer Book Rebellion"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the death of Richard 's father)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the Prayer Book Rebellion)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the death of Richard 's father)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the Prayer Book Rebellion)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    10
                ],
                [
                    4,
                    6,
                    7,
                    8
                ],
                [
                    9
                ],
                [
                    11,
                    12
                ],
                [
                    13,
                    14,
                    15
                ]
            ],
            "question_tokens": [
                "Which",
                "happened",
                "later",
                ",",
                "the",
                "death",
                "of",
                "Richard",
                "'s",
                "father",
                "or",
                "the",
                "Prayer",
                "Book",
                "Rebellion",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    5
                ],
                [],
                [
                    4,
                    7
                ],
                [
                    6,
                    8,
                    9
                ],
                [],
                [],
                [
                    10,
                    11
                ],
                [],
                [
                    12,
                    13,
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    7
                ],
                [
                    3,
                    10
                ],
                [
                    1,
                    2,
                    5
                ],
                [
                    8
                ],
                [
                    9
                ],
                [],
                [],
                [
                    12,
                    13,
                    14
                ],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    14
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1612_5cc8d910-3295-4fa5-8ac5-a76557ae6cf9",
        "question_text": "How many of the men under Viceroy Dom Lu\u00eds de Ata\u00edde were not supplied by Adil Shah of Bijapur?",
        "split": "train",
        "decomposition": "return men under Viceroy Dom Lu\u00eds de Ata\u00edde ;return #1 that were supplied by Adil Shah of Bijapur ;return #1 besides  #2 ;return number of  #3",
        "program": [
            "SELECT['men under Viceroy Dom Lu\\xeds de Ata\\xedde']",
            "FILTER['#1', 'that were supplied by Adil Shah of Bijapur']",
            "DISCARD['#1', '#2']",
            "AGGREGATE['count', '#3']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "DISCARD",
                [
                    "SELECT",
                    "men under Viceroy Dom Lu\u00eds de Ata\u00edde"
                ],
                [
                    "FILTER",
                    [
                        "SELECT",
                        "men under Viceroy Dom Lu\u00eds de Ata\u00edde"
                    ],
                    "that were supplied by Adil Shah of Bijapur"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "DISCARD",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(men under Viceroy Dom Lu\u00eds de Ata\u00edde)"
                ],
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(men under Viceroy Dom Lu\u00eds de Ata\u00edde)"
                    ],
                    "GET_QUESTION_SPAN(that were supplied by Adil Shah of Bijapur)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "DISCARD",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(men under Viceroy Dom Lu\u00eds de Ata\u00edde)"
                ],
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(men under Viceroy Dom Lu\u00eds de Ata\u00edde)"
                    ],
                    "GET_QUESTION_SPAN(that were supplied by Adil Shah of Bijapur)"
                ]
            ]
        ],
        "operators": [
            "select",
            "filter",
            "discard",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    11
                ],
                [
                    6,
                    7,
                    8,
                    12
                ],
                [
                    2,
                    4,
                    5,
                    9
                ],
                [],
                [
                    10
                ],
                [
                    13,
                    15,
                    16,
                    17
                ],
                [
                    14
                ],
                [
                    18,
                    19
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "of",
                "the",
                "men",
                "under",
                "Viceroy",
                "Dom",
                "Lu\u00eds",
                "de",
                "Ata\u00edde",
                "were",
                "not",
                "supplied",
                "by",
                "Adil",
                "Shah",
                "of",
                "Bijapur",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    12
                ],
                [
                    4,
                    6
                ],
                [
                    5
                ],
                [],
                [],
                [
                    7,
                    8,
                    10
                ],
                [],
                [
                    15
                ],
                [
                    9,
                    13,
                    16
                ],
                [
                    14
                ],
                [],
                [],
                [],
                [
                    18
                ],
                [
                    19
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    4,
                    11,
                    15
                ],
                [
                    13
                ],
                [],
                [
                    6,
                    7,
                    8,
                    12
                ],
                [
                    9
                ],
                [],
                [
                    10
                ],
                [],
                [],
                [
                    16
                ],
                [
                    14
                ],
                [
                    18
                ],
                [
                    19
                ]
            ],
            "question_spans": [
                [
                    0,
                    10
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    10
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    10
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    18
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    18
                ],
                [
                    14,
                    18
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    16
                ],
                [
                    15,
                    18
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    18
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_651_6d44c2ad-01fe-400c-b72a-9fc10356d864",
        "question_text": "Which player scored more field goals, Adam Vinatieri or Dave Rayner?",
        "split": "train",
        "decomposition": "return field goals of Adam Vinatieri ;return field goals of Dave Rayner ;return number of  #1 ;return number of  #2 ;return which is highest of #3 ,  #4",
        "program": [
            "SELECT['field goals of Adam Vinatieri']",
            "SELECT['field goals of Dave Rayner']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals of Adam Vinatieri"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals of Dave Rayner"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals of Adam Vinatieri)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals of Dave Rayner)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals of Adam Vinatieri)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals of Dave Rayner)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    9
                ],
                [],
                [],
                [
                    7,
                    8
                ],
                [
                    10,
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "scored",
                "more",
                "field",
                "goals",
                ",",
                "Adam",
                "Vinatieri",
                "or",
                "Dave",
                "Rayner",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [
                    7,
                    8
                ],
                [],
                [
                    9
                ],
                [
                    11
                ],
                [
                    10
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    6,
                    9
                ],
                [
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [
                    8
                ],
                [],
                [
                    7
                ],
                [
                    10,
                    11
                ],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2508_e68ccd0b-cb48-4106-9189-8b2be7dcf3d6",
        "question_text": "How many more points did Notre Dame score over Syracuse in 1961?",
        "split": "train",
        "decomposition": "return points that Notre Dame score over Syracuse in  1961",
        "program": [
            "SELECT['points that Notre Dame score over Syracuse in 1961']"
        ],
        "nested_expression": [
            "SELECT",
            "points that Notre Dame score over Syracuse in 1961"
        ],
        "typed_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(points that Notre Dame score over Syracuse in 1961)"
        ],
        "drop_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(points that Notre Dame score over Syracuse in 1961)"
        ],
        "operators": [
            "select"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    10
                ],
                [
                    8,
                    9,
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "points",
                "did",
                "Notre",
                "Dame",
                "score",
                "over",
                "Syracuse",
                "in",
                "1961",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    4,
                    5,
                    6
                ],
                [
                    7,
                    8,
                    9,
                    10
                ],
                [
                    11,
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    3,
                    4
                ],
                [
                    5,
                    6,
                    7,
                    8,
                    10
                ],
                [
                    9
                ],
                [
                    11,
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    11
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2379_b483b305-b443-4543-a983-9242990936bb",
        "question_text": "Which team scored more times during the first quarter?",
        "split": "train",
        "decomposition": "return teams ;return times #1 scored in  the  first quarter ;return number of  #2 for each #1 ;return #1 where #3 is highest",
        "program": [
            "SELECT['teams']",
            "PROJECT['times #REF scored in the first quarter', '#1']",
            "GROUP['count', '#2', '#1']",
            "SUPERLATIVE['max', '#1', '#3']"
        ],
        "nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "teams"
            ],
            [
                "GROUP_count",
                [
                    "PROJECT",
                    "times #REF scored in the first quarter",
                    [
                        "SELECT",
                        "teams"
                    ]
                ],
                [
                    "SELECT",
                    "teams"
                ]
            ]
        ],
        "typed_nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(teams)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(times #REF scored in the first quarter)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(teams)"
            ],
            [
                "PARTIAL_SELECT_SINGLE_NUM",
                "GET_QUESTION_SPAN(times #REF scored in the first quarter)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "superlative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    8
                ],
                [
                    4,
                    6
                ],
                [
                    7
                ],
                [
                    5
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "Which",
                "team",
                "scored",
                "more",
                "times",
                "during",
                "the",
                "first",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [
                    3
                ],
                [],
                [
                    5
                ],
                [],
                [
                    4
                ],
                [],
                [
                    7
                ],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    8
                ],
                [
                    5
                ],
                [],
                [
                    7
                ],
                [],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1066_af8aca61-3151-4279-a0cc-0dfd5ec42535",
        "question_text": "How many cities did Catinat take?",
        "split": "train",
        "decomposition": "return cities that Catinat take ;return number of  #1",
        "program": [
            "SELECT['cities that Catinat take']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "cities that Catinat take"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(cities that Catinat take)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(cities that Catinat take)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5
                ],
                [
                    4
                ],
                [
                    6
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "cities",
                "did",
                "Catinat",
                "take",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    5
                ],
                [
                    4
                ],
                [],
                [
                    6
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    5
                ],
                [
                    4
                ],
                [],
                [
                    6
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2373_396c1828-c662-471f-928a-d85e6e460080",
        "question_text": "How many touchdowns did the Broncos have in the third quarter?",
        "split": "train",
        "decomposition": "return touchdowns of the  Broncos in  the third quarter ;return the  number of  #1",
        "program": [
            "SELECT['touchdowns of the Broncos in the third quarter']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "touchdowns of the Broncos in the third quarter"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdowns of the Broncos in the third quarter)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns of the Broncos)"
                ],
                "GET_QUESTION_SPAN(in the third quarter)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    6
                ],
                [
                    7,
                    9,
                    10
                ],
                [
                    4,
                    8
                ],
                [],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "touchdowns",
                "did",
                "the",
                "Broncos",
                "have",
                "in",
                "the",
                "third",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    10
                ],
                [],
                [
                    5,
                    6
                ],
                [
                    7
                ],
                [],
                [
                    9
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    5,
                    6
                ],
                [],
                [
                    7,
                    9,
                    10
                ],
                [],
                [],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1471_003b0822-3079-4352-92cd-d7c8582472d5",
        "question_text": "How many yards longer was Kris Brown's second field goal compared to his first?",
        "split": "dev",
        "decomposition": "return yards of field goals of  Kris Brown ;return second of #1 ;return first of #1 ;return difference of #2 and  #3",
        "program": [
            "SELECT['yards of field goals of Kris Brown']",
            "PROJECT['second of #REF', '#1']",
            "AGGREGATE['min', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "PROJECT",
                "second of #REF",
                [
                    "SELECT",
                    "yards of field goals of Kris Brown"
                ]
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of field goals of Kris Brown"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(second of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Kris Brown)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Kris Brown)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(second of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Kris Brown)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Kris Brown)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [],
                [],
                [],
                [
                    6
                ],
                [],
                [
                    11,
                    12
                ],
                [
                    2,
                    4,
                    5,
                    7,
                    8,
                    9,
                    10,
                    13,
                    14
                ],
                [],
                [
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "Kris",
                "Brown",
                "'s",
                "second",
                "field",
                "goal",
                "compared",
                "to",
                "his",
                "first",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    4,
                    7,
                    9,
                    10,
                    13
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    11,
                    12
                ],
                [
                    2,
                    4,
                    7,
                    8
                ],
                [
                    9,
                    10,
                    13,
                    14
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    14
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2_01f22f95-16b4-45a1-868d-7dfa46d5560a",
        "question_text": "Did Yi Jong-mu rescue more people or kill more people on the island?",
        "split": "train",
        "decomposition": "return people that Yi Jong-mu did rescue on the  island ;return people that Yi Jong-mu did kill on the  island ;return number of  #1 ;return number of  #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['people that Yi Jong-mu did rescue on the island']",
            "SELECT['people that Yi Jong-mu did kill on the island']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "people that Yi Jong-mu did rescue on the island"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "people that Yi Jong-mu did kill on the island"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(people that Yi Jong-mu did rescue on the island)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(people that Yi Jong-mu did kill on the island)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(people that Yi Jong-mu did rescue on the island)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(people that Yi Jong-mu did kill on the island)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    2,
                    6,
                    7,
                    10,
                    11
                ],
                [
                    4,
                    5
                ],
                [
                    3,
                    9
                ],
                [
                    8
                ],
                [],
                [
                    12,
                    13
                ],
                [
                    14,
                    15
                ]
            ],
            "question_tokens": [
                "Did",
                "Yi",
                "Jong",
                "-",
                "mu",
                "rescue",
                "more",
                "people",
                "or",
                "kill",
                "more",
                "people",
                "on",
                "the",
                "island",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    6,
                    10
                ],
                [
                    1,
                    2
                ],
                [],
                [
                    4,
                    5
                ],
                [
                    3
                ],
                [
                    8
                ],
                [],
                [],
                [
                    9
                ],
                [],
                [
                    11
                ],
                [],
                [
                    12
                ],
                [],
                [
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    1,
                    2
                ],
                [
                    6,
                    7,
                    10,
                    11
                ],
                [
                    4
                ],
                [
                    5
                ],
                [
                    3
                ],
                [
                    8
                ],
                [],
                [
                    9
                ],
                [],
                [
                    12
                ],
                [],
                [
                    14,
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    5,
                    14
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    14
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_162_4de085d5-267f-49c1-9f91-d45fde5fd1f0",
        "question_text": "Which massacre did the least people flee from?",
        "split": "train",
        "decomposition": "return massacres ;return people that did flee from  #1 ;return number of  #2 for each #1 ;return #1 where #3 is lowest",
        "program": [
            "SELECT['massacres']",
            "PROJECT['people that did flee from #REF', '#1']",
            "GROUP['count', '#2', '#1']",
            "SUPERLATIVE['min', '#1', '#3']"
        ],
        "nested_expression": [
            "SUPERLATIVE_min",
            [
                "SELECT",
                "massacres"
            ],
            [
                "GROUP_count",
                [
                    "PROJECT",
                    "people that did flee from #REF",
                    [
                        "SELECT",
                        "massacres"
                    ]
                ],
                [
                    "SELECT",
                    "massacres"
                ]
            ]
        ],
        "typed_nested_expression": [
            "SUPERLATIVE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(massacres)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(people that did flee from #REF)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "SUPERLATIVE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(massacres)"
            ],
            [
                "PARTIAL_SELECT_SINGLE_NUM",
                "GET_QUESTION_SPAN(people that did flee from #REF)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "superlative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    7
                ],
                [],
                [
                    4,
                    5,
                    6
                ],
                [
                    8
                ]
            ],
            "question_tokens": [
                "Which",
                "massacre",
                "did",
                "the",
                "least",
                "people",
                "flee",
                "from",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [
                    5
                ],
                [
                    4,
                    6
                ],
                [
                    7
                ],
                [],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    2
                ],
                [
                    0,
                    1
                ],
                [
                    3
                ],
                [],
                [],
                [],
                [
                    4,
                    5,
                    6
                ],
                [],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_235_729c0d1c-7814-4d7f-b777-32a328af3786",
        "question_text": "How many days did the HV clash with units in a pink zone near Zadar?",
        "split": "train",
        "decomposition": "return days that the  HV clash with units in  a pink zone near Zadar ;return number of  #1",
        "program": [
            "SELECT['days that the HV clash with units in a pink zone near Zadar']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "days that the HV clash with units in a pink zone near Zadar"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(days that the HV clash with units in a pink zone near Zadar)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(days that the HV clash with units in a pink zone near Zadar)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    6
                ],
                [
                    4,
                    9,
                    10,
                    11,
                    12
                ],
                [
                    7,
                    8,
                    13,
                    14,
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "days",
                "did",
                "the",
                "HV",
                "clash",
                "with",
                "units",
                "in",
                "a",
                "pink",
                "zone",
                "near",
                "Zadar",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    2
                ],
                [
                    0,
                    1,
                    3
                ],
                [
                    5,
                    6,
                    8
                ],
                [
                    4
                ],
                [
                    7,
                    9,
                    10
                ],
                [
                    11,
                    12,
                    13
                ],
                [
                    14,
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    5,
                    8
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    9,
                    10
                ],
                [
                    7,
                    11,
                    12,
                    13
                ],
                [
                    14,
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    14
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    14
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    14
                ],
                [
                    8,
                    14
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    14
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    14
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_726_8dcfe763-fb3b-4bcd-af70-6bdfbcc423fb",
        "question_text": "How many more years longer did elements of the revolt drag till 1922 after it ended in 1920?",
        "split": "train",
        "decomposition": "return year when  the  revolt ended ;return year when  elements of the  revolt drag till ;return the  difference of #2 and  #1",
        "program": [
            "SELECT['year when the revolt ended']",
            "SELECT['year when elements of the revolt drag till']",
            "ARITHMETIC['difference', '#2', '#1']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "year when elements of the revolt drag till"
            ],
            [
                "SELECT",
                "year when the revolt ended"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year when elements of the revolt drag till)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year when the revolt ended)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Two_Events",
            [
                "SELECT",
                "GET_QUESTION_SPAN(year when elements of the revolt drag till)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(year when the revolt ended)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    6,
                    13,
                    14,
                    15
                ],
                [
                    5,
                    7,
                    8
                ],
                [
                    9,
                    10,
                    11,
                    12
                ],
                [
                    16
                ],
                [
                    17,
                    18
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "years",
                "longer",
                "did",
                "elements",
                "of",
                "the",
                "revolt",
                "drag",
                "till",
                "1922",
                "after",
                "it",
                "ended",
                "in",
                "1920",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    2
                ],
                [
                    1,
                    3,
                    13,
                    14
                ],
                [
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    7
                ],
                [
                    9,
                    10,
                    12
                ],
                [],
                [
                    11
                ],
                [
                    15,
                    16
                ],
                [
                    17
                ],
                [
                    18
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    3
                ],
                [
                    13,
                    14
                ],
                [
                    6,
                    7,
                    15
                ],
                [],
                [
                    9,
                    10
                ],
                [
                    11,
                    12
                ],
                [
                    16
                ],
                [
                    17
                ],
                [
                    18
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    4
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    17
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    17
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    17
                ],
                [
                    14,
                    17
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    17
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    17
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1219_8471c7b3-83b2-497e-99ca-e720128032b9",
        "question_text": "How many more field goals did Janikowski make than Kaeding?",
        "split": "train",
        "decomposition": "return field goals of Janikowski ;return field goals of Kaeding ;return the  number of  #1 ;return the  number of  #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['field goals of Janikowski']",
            "SELECT['field goals of Kaeding']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals of Janikowski"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals of Kaeding"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Janikowski)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Kaeding)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Janikowski)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Kaeding)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    8
                ],
                [
                    3,
                    4
                ],
                [],
                [],
                [
                    5,
                    6,
                    7,
                    9
                ],
                [],
                [
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "field",
                "goals",
                "did",
                "Janikowski",
                "make",
                "than",
                "Kaeding",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [
                    6
                ],
                [],
                [
                    4,
                    5
                ],
                [],
                [],
                [],
                [
                    7,
                    9
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [
                    3,
                    4,
                    5
                ],
                [],
                [],
                [],
                [
                    8
                ],
                [
                    6,
                    7,
                    9
                ],
                [],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1258_e80bf2a6-7fe9-4f30-9d97-5560cb70aad2",
        "question_text": "How many more total touchdown passing yards did Eli Manning make than Marc Bulger?",
        "split": "train",
        "decomposition": "return yards of touchdown pass of  Eli Manning ;return yards of touchdown pass of  Marc Bulger ;return the  sum of #1 ;return the  sum of #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['yards of touchdown pass of Eli Manning']",
            "SELECT['yards of touchdown pass of Marc Bulger']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of touchdown pass of Eli Manning"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of touchdown pass of Marc Bulger"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdown pass of Eli Manning)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdown pass of Marc Bulger)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdown pass of Eli Manning)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdown pass of Marc Bulger)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    11
                ],
                [
                    3,
                    5,
                    6
                ],
                [],
                [
                    4
                ],
                [
                    7,
                    8,
                    9,
                    10
                ],
                [
                    12
                ],
                [
                    13,
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "total",
                "touchdown",
                "passing",
                "yards",
                "did",
                "Eli",
                "Manning",
                "make",
                "than",
                "Marc",
                "Bulger",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    6,
                    7,
                    8,
                    9
                ],
                [],
                [],
                [],
                [
                    10,
                    12
                ],
                [
                    13
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    4
                ],
                [
                    3,
                    5,
                    6,
                    7
                ],
                [],
                [],
                [],
                [
                    11
                ],
                [
                    8,
                    9,
                    10
                ],
                [
                    12
                ],
                [],
                [
                    13,
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    13
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2123_d06c2c0d-e277-4ee5-95b3-68eb5a2455d4",
        "question_text": "How many field goals were longer than 50-yards in length?",
        "split": "train",
        "decomposition": "return field goals ;return length of #1 ;return #1 where #2 is longer than 50-yards ;return the  number of  #3",
        "program": [
            "SELECT['field goals']",
            "PROJECT['length of #REF', '#1']",
            "COMPARATIVE['#1', '#2', 'is longer than 50-yards']",
            "AGGREGATE['count', '#3']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "field goals"
                ],
                [
                    "PROJECT",
                    "length of #REF",
                    [
                        "SELECT",
                        "field goals"
                    ]
                ],
                "is longer than 50-yards"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals)"
                ],
                [
                    "PARTIAL_GROUP_sum",
                    [
                        "PARTIAL_SELECT_NUM",
                        "GET_QUESTION_SPAN(length of #REF)"
                    ]
                ],
                [
                    "CONDITION",
                    "GET_QUESTION_SPAN(is longer than 50-yards)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_GT",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(length of field goals)"
                ],
                "GET_QUESTION_NUMBER(50)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "comparative",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    7
                ],
                [
                    2,
                    3,
                    5,
                    6
                ],
                [
                    8
                ],
                [
                    10
                ],
                [
                    4,
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "field",
                "goals",
                "were",
                "longer",
                "than",
                "50-yards",
                "in",
                "length",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    5,
                    6
                ],
                [],
                [],
                [
                    8
                ],
                [
                    7
                ],
                [
                    4,
                    9
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    7
                ],
                [
                    2,
                    3,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    8
                ],
                [],
                [
                    10
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2252_61f50b4e-c116-4f62-a6c2-93a18bc96ea0",
        "question_text": "How many yards shorter was Mark Sanchez's first touchdown run compared to Tom Brady's first touchdown pass?",
        "split": "train",
        "decomposition": "return touchdown runs from  Mark Sanchez ;return touchdown passes from  Tom Brady ;return the  first of #1 ;return the  first of #2 ;return the  yards of #3 ;return the  yards of #4 ;return the  difference of #6 and  #5",
        "program": [
            "SELECT['touchdown runs from Mark Sanchez']",
            "SELECT['touchdown passes from Tom Brady']",
            "AGGREGATE['min', '#1']",
            "AGGREGATE['min', '#2']",
            "PROJECT['the yards of #REF', '#3']",
            "PROJECT['the yards of #REF', '#4']",
            "ARITHMETIC['difference', '#6', '#5']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "PROJECT",
                "the yards of #REF",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "touchdown passes from Tom Brady"
                    ]
                ]
            ],
            [
                "PROJECT",
                "the yards of #REF",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "touchdown runs from Mark Sanchez"
                    ]
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(the yards of #REF)",
                    [
                        "AGGREGATE_min",
                        [
                            "SELECT",
                            "GET_QUESTION_SPAN(touchdown passes from Tom Brady)"
                        ]
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(the yards of #REF)",
                    [
                        "AGGREGATE_min",
                        [
                            "SELECT",
                            "GET_QUESTION_SPAN(touchdown runs from Mark Sanchez)"
                        ]
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(the yards of #REF)",
                    [
                        "AGGREGATE_min",
                        [
                            "SELECT",
                            "GET_QUESTION_SPAN(touchdown passes from Tom Brady)"
                        ]
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(the yards of #REF)",
                    [
                        "AGGREGATE_min",
                        [
                            "SELECT",
                            "GET_QUESTION_SPAN(touchdown runs from Mark Sanchez)"
                        ]
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "project",
            "project",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [
                    5
                ],
                [],
                [],
                [
                    2,
                    4,
                    7,
                    8,
                    9,
                    10
                ],
                [
                    6
                ],
                [],
                [
                    11,
                    12
                ],
                [],
                [],
                [
                    13,
                    14,
                    15,
                    16,
                    17,
                    18
                ],
                [],
                [
                    19
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "shorter",
                "was",
                "Mark",
                "Sanchez",
                "'s",
                "first",
                "touchdown",
                "run",
                "compared",
                "to",
                "Tom",
                "Brady",
                "'s",
                "first",
                "touchdown",
                "pass",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    5
                ],
                [],
                [
                    2,
                    4,
                    7,
                    9
                ],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [],
                [],
                [
                    13
                ],
                [
                    10,
                    15,
                    17,
                    18
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    19
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [
                    5
                ],
                [],
                [
                    9
                ],
                [],
                [
                    2,
                    4,
                    7
                ],
                [
                    10
                ],
                [
                    6
                ],
                [],
                [],
                [
                    13,
                    14
                ],
                [
                    11
                ],
                [],
                [
                    17
                ],
                [],
                [
                    15
                ],
                [
                    18
                ],
                [],
                [],
                [
                    19
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    18
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    18
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    18
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    18
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    15
                ],
                [
                    13,
                    18
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_3696_785401df-55e5-4389-b56f-7135fcf23b1e",
        "question_text": "Which four horror series grossed under 400 million?",
        "split": "train",
        "decomposition": "return horror series ;return #1 that grossed under 400 million",
        "program": [
            "SELECT['horror series']",
            "FILTER['#1', 'that grossed under 400 million']"
        ],
        "nested_expression": [
            "FILTER",
            [
                "SELECT",
                "horror series"
            ],
            "that grossed under 400 million"
        ],
        "typed_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(horror series)"
            ],
            "GET_QUESTION_SPAN(that grossed under 400 million)"
        ],
        "drop_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(horror series)"
            ],
            "GET_QUESTION_SPAN(that grossed under 400 million)"
        ],
        "operators": [
            "select",
            "filter"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2
                ],
                [
                    1,
                    4,
                    5
                ],
                [
                    3,
                    6
                ],
                [
                    7,
                    8
                ]
            ],
            "question_tokens": [
                "Which",
                "four",
                "horror",
                "series",
                "grossed",
                "under",
                "400",
                "million",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    2
                ],
                [],
                [
                    1,
                    3
                ],
                [
                    4,
                    5
                ],
                [],
                [
                    6,
                    7
                ],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    2
                ],
                [
                    4
                ],
                [
                    5
                ],
                [
                    1,
                    3
                ],
                [
                    6,
                    7
                ],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1490_8c340031-1b03-43e3-a10c-236fe9118a84",
        "question_text": "How many field goals of 30 yards or more did Succop make?",
        "split": "train",
        "decomposition": "return yards of field goals of  Succop ;return #1 that are at least 30 yards ;return the  number of  #2",
        "program": [
            "SELECT['yards of field goals of Succop']",
            "FILTER['#1', 'that are at least 30 yards']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "yards of field goals of Succop"
                ],
                "that are at least 30 yards"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals of Succop)"
                ],
                "GET_QUESTION_SPAN(that are at least 30 yards)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_GT_EQ",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals of Succop)"
                ],
                "GET_QUESTION_NUMBER(30)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    9
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    8
                ],
                [],
                [
                    7,
                    12
                ],
                [
                    6,
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "field",
                "goals",
                "of",
                "30",
                "yards",
                "or",
                "more",
                "did",
                "Succop",
                "make",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5
                ],
                [
                    8
                ],
                [
                    9
                ],
                [
                    7
                ],
                [],
                [
                    6,
                    11
                ],
                [
                    10
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    9
                ],
                [
                    2,
                    3
                ],
                [
                    4,
                    5,
                    6,
                    7,
                    8
                ],
                [
                    10
                ],
                [],
                [
                    12
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    8
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2853_e9fc9201-a4af-49be-a31e-b55ed4d7d1ba",
        "question_text": "How many percent of people were not renting from a housing association?",
        "split": "train",
        "decomposition": "return percent of people that were renting from  a housing association ;return difference of 100 and  #1",
        "program": [
            "SELECT['percent of people that were renting from a housing association']",
            "PROJECT['difference of 100 and #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "difference of 100 and #REF",
            [
                "SELECT",
                "percent of people that were renting from a housing association"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(difference of 100 and #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(percent of people that were renting from a housing association)"
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            "SELECT_IMPLICIT_NUM(100)",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent of people that were renting from a housing association)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8
                ],
                [
                    10
                ],
                [
                    9
                ],
                [
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "percent",
                "of",
                "people",
                "were",
                "not",
                "renting",
                "from",
                "a",
                "housing",
                "association",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    6
                ],
                [],
                [
                    5,
                    10
                ],
                [
                    7
                ],
                [],
                [
                    8,
                    9
                ],
                [],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8
                ],
                [],
                [
                    10
                ],
                [
                    9
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1877_1ed3dd00-6dd3-417a-8c3b-4cb090ce4233",
        "question_text": "How many percent were not 18 years of age or older?",
        "split": "train",
        "decomposition": "return percent that were 18 years of age or  older ;return difference of 100 and  #1",
        "program": [
            "SELECT['percent that were 18 years of age or older']",
            "PROJECT['difference of 100 and #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "difference of 100 and #REF",
            [
                "SELECT",
                "percent that were 18 years of age or older"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(difference of 100 and #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(percent that were 18 years of age or older)"
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            "SELECT_IMPLICIT_NUM(100)",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent that were 18 years of age or older)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    7,
                    8
                ],
                [],
                [],
                [
                    9,
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "percent",
                "were",
                "not",
                "18",
                "years",
                "of",
                "age",
                "or",
                "older",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    7
                ],
                [],
                [],
                [
                    6,
                    8
                ],
                [],
                [
                    5,
                    9
                ],
                [],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    7,
                    8
                ],
                [],
                [],
                [],
                [
                    9
                ],
                [
                    10,
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2622_18b89578-f6d5-49ca-86a9-57709843c8c6",
        "question_text": "What was the Falcons longest pass?",
        "split": "train",
        "decomposition": "return Falcons passes ;return longest of #1",
        "program": [
            "SELECT['Falcons passes']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "Falcons passes"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(Falcons passes)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(Falcons passes)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    4,
                    5
                ],
                [
                    0,
                    2,
                    3
                ],
                [
                    6
                ]
            ],
            "question_tokens": [
                "What",
                "was",
                "the",
                "Falcons",
                "longest",
                "pass",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    4,
                    5
                ],
                [],
                [
                    2,
                    3
                ],
                [],
                [],
                [
                    6
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    4,
                    5
                ],
                [
                    2,
                    3
                ],
                [],
                [
                    6
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1203_8bc80aed-0412-4240-b09a-dd3427bf14fd",
        "question_text": "What event happened later, Enrico dying, or Amedeo and Claude officially separating?",
        "split": "train",
        "decomposition": "return when  did  Enrico dying happened ;return when  did  Amedeo and Claude officially separating happened ;return which is  highest of  #1 , #2",
        "program": [
            "SELECT['when did Enrico dying happened']",
            "SELECT['when did Amedeo and Claude officially separating happened']",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "when did Enrico dying happened"
            ],
            [
                "SELECT",
                "when did Amedeo and Claude officially separating happened"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did Enrico dying happened)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did Amedeo and Claude officially separating happened)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did Enrico dying happened)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did Amedeo and Claude officially separating happened)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    7,
                    8
                ],
                [
                    5
                ],
                [
                    6,
                    10
                ],
                [
                    9,
                    11
                ],
                [
                    12,
                    13,
                    14
                ]
            ],
            "question_tokens": [
                "What",
                "event",
                "happened",
                "later",
                ",",
                "Enrico",
                "dying",
                ",",
                "or",
                "Amedeo",
                "and",
                "Claude",
                "officially",
                "separating",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    7
                ],
                [],
                [],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [
                    8,
                    9,
                    10
                ],
                [
                    11
                ],
                [
                    12,
                    13
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    4,
                    7,
                    8
                ],
                [
                    2,
                    3,
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [
                    9
                ],
                [
                    10,
                    11,
                    12
                ],
                [
                    13,
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    3
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    13
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_235_12553317-2bd3-4b29-93af-8e546c9dc56d",
        "question_text": "How long were each of Chester Taylor's touchdown runs?",
        "split": "train",
        "decomposition": "return touchdown runs of  Chester Taylor ;return how long were each of  #1",
        "program": [
            "SELECT['touchdown runs of Chester Taylor']",
            "PROJECT['how long were each of #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "how long were each of #REF",
            [
                "SELECT",
                "touchdown runs of Chester Taylor"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(how long were each of #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown runs of Chester Taylor)"
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(how long were each of #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown runs of Chester Taylor)"
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    8
                ],
                [],
                [
                    4,
                    5,
                    6,
                    7
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "long",
                "were",
                "each",
                "of",
                "Chester",
                "Taylor",
                "'s",
                "touchdown",
                "runs",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    2
                ],
                [
                    1,
                    3
                ],
                [
                    4
                ],
                [],
                [
                    5,
                    6
                ],
                [
                    7,
                    8
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    4,
                    7,
                    8
                ],
                [],
                [
                    5,
                    6
                ],
                [],
                [
                    9,
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3110_738a1e7e-8777-4387-bc2b-1f12954a369c",
        "question_text": "How many points did the Steeles score in the game?",
        "split": "train",
        "decomposition": "return points that the  Steeles score in  the game ;return the  number of  #1",
        "program": [
            "SELECT['points that the Steeles score in the game']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "points that the Steeles score in the game"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(points that the Steeles score in the game)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "SELECT",
                "GET_QUESTION_SPAN(points that the Steeles score in the game)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    5
                ],
                [
                    3,
                    4,
                    6,
                    7,
                    8
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "points",
                "did",
                "the",
                "Steeles",
                "score",
                "in",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    6,
                    7,
                    8
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    5
                ],
                [
                    4,
                    6,
                    7,
                    8
                ],
                [],
                [
                    9,
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2174_99b42a1b-1558-40d3-92b2-8c1b57f90735",
        "question_text": "How many people was the race populating the largest portion of the city made up of, in percentage?",
        "split": "train",
        "decomposition": "return percentages of the  races that populate the   city ;return the  largest of #1",
        "program": [
            "SELECT['percentages of the races that populate the city']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "percentages of the races that populate the city"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(percentages of the races that populate the city)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percentages of the races that populate the city)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    5,
                    6,
                    18
                ],
                [
                    3,
                    8,
                    9
                ],
                [
                    4,
                    7,
                    10,
                    11,
                    13,
                    14,
                    15,
                    16,
                    17
                ],
                [
                    12,
                    19
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "people",
                "was",
                "the",
                "race",
                "populating",
                "the",
                "largest",
                "portion",
                "of",
                "the",
                "city",
                "made",
                "up",
                "of",
                ",",
                "in",
                "percentage",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    2,
                    6,
                    18
                ],
                [
                    5
                ],
                [
                    3,
                    8
                ],
                [
                    9
                ],
                [
                    10,
                    11,
                    14,
                    16
                ],
                [
                    12,
                    13,
                    15,
                    17
                ],
                [],
                [],
                [
                    19
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    5,
                    6,
                    18
                ],
                [
                    3,
                    9
                ],
                [
                    8
                ],
                [
                    10,
                    14,
                    15,
                    16,
                    17
                ],
                [
                    12
                ],
                [
                    19
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    18
                ],
                [
                    4,
                    12
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    18
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    17,
                    18
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1400_8bd8e667-713d-41a3-9719-707426c59b5d",
        "question_text": "What happened first arriving in the Mergui or leaving Marseille?",
        "split": "train",
        "decomposition": "return when  arriving in the Mergui happened ;return when  leaving Marseille happened ;return which  happened first of #1 , #2",
        "program": [
            "SELECT['when arriving in the Mergui happened']",
            "SELECT['when leaving Marseille happened']",
            "COMPARISON['min', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "when arriving in the Mergui happened"
            ],
            [
                "SELECT",
                "when leaving Marseille happened"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when arriving in the Mergui happened)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when leaving Marseille happened)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when arriving in the Mergui happened)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when leaving Marseille happened)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    7
                ],
                [
                    4,
                    5
                ],
                [
                    6
                ],
                [
                    8
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "What",
                "happened",
                "first",
                "arriving",
                "in",
                "the",
                "Mergui",
                "or",
                "leaving",
                "Marseille",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [
                    4
                ],
                [],
                [
                    6
                ],
                [
                    7
                ],
                [
                    8
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    7
                ],
                [
                    1,
                    2,
                    3
                ],
                [
                    4
                ],
                [],
                [
                    6
                ],
                [],
                [
                    8
                ],
                [
                    9,
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    9
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_3809_5e7aa725-985a-4ab7-8d60-a60489186cce",
        "question_text": "How many months passed between the Fifers victory over Dunfermline and the defeat over Aberdeen?",
        "split": "train",
        "decomposition": "return month of the  Fifers victory over Dunfermline ;return month of the  defeat over Aberdeen ;return the  difference of #2 and  #1",
        "program": [
            "SELECT['month of the Fifers victory over Dunfermline']",
            "SELECT['month of the defeat over Aberdeen']",
            "ARITHMETIC['difference', '#2', '#1']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "month of the defeat over Aberdeen"
            ],
            [
                "SELECT",
                "month of the Fifers victory over Dunfermline"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(month of the defeat over Aberdeen)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(month of the Fifers victory over Dunfermline)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(month of the defeat over Aberdeen)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(month of the Fifers victory over Dunfermline)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    4,
                    6
                ],
                [
                    5
                ],
                [
                    7
                ],
                [
                    8,
                    9,
                    10,
                    13
                ],
                [
                    11,
                    12
                ],
                [
                    14,
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "months",
                "passed",
                "between",
                "the",
                "Fifers",
                "victory",
                "over",
                "Dunfermline",
                "and",
                "the",
                "defeat",
                "over",
                "Aberdeen",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4
                ],
                [
                    6
                ],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    9
                ],
                [
                    8,
                    10
                ],
                [],
                [
                    12
                ],
                [],
                [],
                [
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4
                ],
                [],
                [
                    6,
                    8
                ],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    9,
                    10,
                    13
                ],
                [
                    12
                ],
                [
                    14
                ],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    14
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    14
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    5,
                    14
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1911_9cf1b37a-be66-4d09-b1f2-83b9ee40adff",
        "question_text": "How many total languages are the official language of Bolivia?",
        "split": "train",
        "decomposition": "return official languages of  Bolivia ;return number of  #1",
        "program": [
            "SELECT['official languages of Bolivia']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "official languages of Bolivia"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(official languages of Bolivia)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "SELECT",
                "GET_QUESTION_SPAN(official languages of Bolivia)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    6,
                    7
                ],
                [
                    4,
                    5,
                    8
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "total",
                "languages",
                "are",
                "the",
                "official",
                "language",
                "of",
                "Bolivia",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    4,
                    6
                ],
                [
                    5
                ],
                [
                    8
                ],
                [
                    7,
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    3
                ],
                [
                    2,
                    4
                ],
                [
                    6,
                    7
                ],
                [
                    5,
                    8
                ],
                [],
                [
                    9,
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_639_be9f831e-c949-4f19-beeb-132a3021b7b7",
        "question_text": "How many more men were with Poland and Saxony than with Denmark?",
        "split": "train",
        "decomposition": "return men that were with Poland ;return men that were with Saxony ;return men that were with Denmark ;return the  number of  #1 ;return the  number of  #2 ;return the  number of  #3 ;return the  sum of #4 and  #5 ;return the  difference of #7 and  #6",
        "program": [
            "SELECT['men that were with Poland']",
            "SELECT['men that were with Saxony']",
            "SELECT['men that were with Denmark']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "AGGREGATE['count', '#3']",
            "ARITHMETIC['sum', '#4', '#5']",
            "ARITHMETIC['difference', '#7', '#6']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "men that were with Poland"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "men that were with Saxony"
                    ]
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "men that were with Denmark"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(men that were with Poland)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(men that were with Saxony)"
                    ]
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(men that were with Denmark)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(men that were with Poland)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(men that were with Saxony)"
                    ]
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(men that were with Denmark)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "aggregate",
            "aggregate",
            "aggregate",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    9
                ],
                [
                    3,
                    4,
                    7
                ],
                [],
                [],
                [
                    5
                ],
                [],
                [
                    6
                ],
                [
                    8,
                    10
                ],
                [],
                [],
                [
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "men",
                "were",
                "with",
                "Poland",
                "and",
                "Saxony",
                "than",
                "with",
                "Denmark",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    7
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [
                    8
                ],
                [],
                [],
                [],
                [],
                [
                    10
                ],
                [
                    11
                ],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    3
                ],
                [
                    4,
                    7
                ],
                [],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    8
                ],
                [
                    9
                ],
                [],
                [],
                [],
                [
                    11,
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    11
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1082_8495dc04-40c3-413f-86ee-f2f90a8150fa",
        "question_text": "What happened last, the king's departure from the army, or Charley de Mornays stepping in as the commanding officer?",
        "split": "dev",
        "decomposition": "return when  was  the  king 's departure from  the   army ;return when  was  Charley de Mornays stepping in  as the  commanding officer ;return which was  last of #1 ,  #2",
        "program": [
            "SELECT[\"when was the king 's departure from the army\"]",
            "SELECT['when was Charley de Mornays stepping in as the commanding officer']",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "when was the king 's departure from the army"
            ],
            [
                "SELECT",
                "when was Charley de Mornays stepping in as the commanding officer"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the king 's departure from the army)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was Charley de Mornays stepping in as the commanding officer)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the king 's departure from the army)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was Charley de Mornays stepping in as the commanding officer)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    7,
                    11,
                    12
                ],
                [
                    4,
                    6,
                    8,
                    9,
                    10
                ],
                [
                    13,
                    15
                ],
                [
                    14,
                    16,
                    17,
                    18,
                    19
                ],
                [
                    20,
                    21,
                    22
                ]
            ],
            "question_tokens": [
                "What",
                "happened",
                "last",
                ",",
                "the",
                "king",
                "'s",
                "departure",
                "from",
                "the",
                "army",
                ",",
                "or",
                "Charley",
                "de",
                "Mornays",
                "stepping",
                "in",
                "as",
                "the",
                "commanding",
                "officer",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    11
                ],
                [],
                [
                    5,
                    6,
                    7,
                    8,
                    10
                ],
                [
                    12
                ],
                [
                    13
                ],
                [],
                [
                    14,
                    15,
                    16
                ],
                [
                    17,
                    18,
                    19
                ],
                [
                    20
                ],
                [
                    21,
                    22
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    3,
                    10,
                    11,
                    12
                ],
                [
                    1,
                    2,
                    5,
                    7
                ],
                [
                    6
                ],
                [
                    13
                ],
                [
                    15
                ],
                [
                    14,
                    16,
                    17,
                    18
                ],
                [
                    20
                ],
                [
                    21,
                    22
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    21
                ],
                [
                    13,
                    15
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    21
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    21
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    19,
                    21
                ],
                [
                    20,
                    20
                ],
                [
                    21,
                    21
                ],
                [
                    22,
                    22
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2082_91f6e8dc-3c68-4e37-b36f-4310363c8f8c",
        "question_text": "How many more rushing yards did Wendell Tyler have compared to Roger Craig?",
        "split": "train",
        "decomposition": "return rushing yards of Wendell Tyler ;return rushing yards of Roger Craig ;return sum of #1 ;return sum of #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['rushing yards of Wendell Tyler']",
            "SELECT['rushing yards of Roger Craig']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "rushing yards of Wendell Tyler"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "rushing yards of Roger Craig"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(rushing yards of Wendell Tyler)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(rushing yards of Roger Craig)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(rushing yards of Wendell Tyler)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(rushing yards of Roger Craig)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    9
                ],
                [
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [],
                [
                    7,
                    8
                ],
                [
                    10,
                    11
                ],
                [
                    12,
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "rushing",
                "yards",
                "did",
                "Wendell",
                "Tyler",
                "have",
                "compared",
                "to",
                "Roger",
                "Craig",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4,
                    5
                ],
                [],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    11
                ],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    6
                ],
                [
                    3,
                    4,
                    5,
                    7
                ],
                [],
                [],
                [],
                [
                    8,
                    9
                ],
                [],
                [],
                [
                    11,
                    12
                ],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    4
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    12
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    12
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1385_663f76bf-aff6-4d76-9e2d-4b4287927842",
        "question_text": "Which player threw more touchdown passes, Carson Palmer or Aaron Rodgers?",
        "split": "train",
        "decomposition": "return touchdown passes that Carson Palmer threw ;return touchdown passes that Aaron Rodgers threw ;return the  number of  #1 ;return the  number of  #2 ;return which is more of #3 ,  #4",
        "program": [
            "SELECT['touchdown passes that Carson Palmer threw']",
            "SELECT['touchdown passes that Aaron Rodgers threw']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdown passes that Carson Palmer threw"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdown passes that Aaron Rodgers threw"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown passes that Carson Palmer threw)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown passes that Aaron Rodgers threw)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown passes that Carson Palmer threw)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown passes that Aaron Rodgers threw)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    9
                ],
                [],
                [],
                [
                    7,
                    8,
                    10,
                    11
                ],
                [
                    12
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "threw",
                "more",
                "touchdown",
                "passes",
                ",",
                "Carson",
                "Palmer",
                "or",
                "Aaron",
                "Rodgers",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    5
                ],
                [],
                [
                    6
                ],
                [
                    4
                ],
                [],
                [],
                [
                    7,
                    8,
                    9
                ],
                [
                    10,
                    11
                ],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    6,
                    9
                ],
                [
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [],
                [],
                [
                    7,
                    8,
                    10
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_999_2ecec1b2-9532-413e-9c83-c948209c6e80",
        "question_text": "What happened first: Bayinnaung invaded Lan Xang or Setthathirath fled Vientiane?",
        "split": "train",
        "decomposition": "return when  did Bayinnaung invade Lan Xang ;return when  did Setthathirath flee Vientiane ;return which was  first of #1 ,  #2",
        "program": [
            "SELECT['when did Bayinnaung invade Lan Xang']",
            "SELECT['when did Setthathirath flee Vientiane']",
            "COMPARISON['min', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "when did Bayinnaung invade Lan Xang"
            ],
            [
                "SELECT",
                "when did Setthathirath flee Vientiane"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did Bayinnaung invade Lan Xang)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did Setthathirath flee Vientiane)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did Bayinnaung invade Lan Xang)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did Setthathirath flee Vientiane)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    8
                ],
                [
                    6
                ],
                [
                    4,
                    7
                ],
                [
                    9,
                    10
                ],
                [
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "What",
                "happened",
                "first",
                ":",
                "Bayinnaung",
                "invaded",
                "Lan",
                "Xang",
                "or",
                "Setthathirath",
                "fled",
                "Vientiane",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    6
                ],
                [
                    4,
                    5
                ],
                [
                    7
                ],
                [],
                [
                    8
                ],
                [],
                [
                    9,
                    10,
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    3,
                    8
                ],
                [
                    1,
                    2,
                    5
                ],
                [
                    6
                ],
                [
                    7
                ],
                [
                    4
                ],
                [
                    9,
                    10
                ],
                [],
                [
                    11,
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    11
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    11
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1431_1fc23c28-c2e6-49d5-bfc5-23b220c6da98",
        "question_text": "How many yards was the difference between the longest and shortest field goals made?",
        "split": "train",
        "decomposition": "return yards of field goals ;return longest of #1 ;return shortest of #1 ;return difference of #2 and  #3",
        "program": [
            "SELECT['yards of field goals']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['min', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of field goals"
                ]
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of field goals"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    5
                ],
                [],
                [
                    2,
                    3,
                    8
                ],
                [],
                [],
                [
                    6,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    13
                ],
                [
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "the",
                "difference",
                "between",
                "the",
                "longest",
                "and",
                "shortest",
                "field",
                "goals",
                "made",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3,
                    5,
                    8
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    6,
                    9
                ],
                [],
                [
                    10,
                    11
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    5,
                    6
                ],
                [],
                [],
                [
                    2,
                    3
                ],
                [
                    8
                ],
                [],
                [],
                [],
                [
                    12
                ],
                [
                    9
                ],
                [],
                [
                    10,
                    11
                ],
                [],
                [],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    13
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    13
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    13
                ],
                [
                    7,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    13
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2597_9c2b3153-122e-489d-b7d4-a5254fc6901d",
        "question_text": "How many less was the 26 yards goal compared to the 44 yards goal?",
        "split": "train",
        "decomposition": "return yards  of the  26 yards goal  ;return yards  of the  44 yards goal  ;return the  difference of #1 and  #2",
        "program": [
            "SELECT['yards of the 26 yards goal']",
            "SELECT['yards of the 44 yards goal']",
            "ARITHMETIC['difference', '#1', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "yards of the 26 yards goal"
            ],
            [
                "SELECT",
                "yards of the 44 yards goal"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of the 26 yards goal)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of the 44 yards goal)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of the 26 yards goal)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of the 44 yards goal)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    6,
                    12
                ],
                [],
                [
                    3,
                    4,
                    5
                ],
                [],
                [
                    7,
                    8,
                    9,
                    13
                ],
                [
                    10
                ],
                [
                    11,
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "less",
                "was",
                "the",
                "26",
                "yards",
                "goal",
                "compared",
                "to",
                "the",
                "44",
                "yards",
                "goal",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    6,
                    7,
                    8,
                    9,
                    12
                ],
                [],
                [
                    11
                ],
                [],
                [],
                [
                    13
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    6,
                    12
                ],
                [],
                [
                    7
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    8,
                    9,
                    13
                ],
                [],
                [
                    11
                ],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    13
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    13
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    13
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    13
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1123_091cb51e-d6d4-4d2a-9b01-21a9336cb3a3",
        "question_text": "How many yards was Jason Hanson's longest field goal?",
        "split": "train",
        "decomposition": "return yards of field goals of  Jason Hanson ;return the  longest of #1",
        "program": [
            "SELECT['yards of field goals of Jason Hanson']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "yards of field goals of Jason Hanson"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals of Jason Hanson)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals of Jason Hanson)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9
                ],
                [],
                [
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "Jason",
                "Hanson",
                "'s",
                "longest",
                "field",
                "goal",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    6,
                    7,
                    8,
                    9
                ],
                [
                    4
                ],
                [],
                [],
                [
                    5
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    4
                ],
                [],
                [
                    2,
                    3,
                    9
                ],
                [
                    5,
                    6,
                    7,
                    8
                ],
                [],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2948_dbb6940a-289b-47a9-958c-bf2fd3ddc318",
        "question_text": "How many touchdown passes of at least 10 yards did Carr throw?",
        "split": "train",
        "decomposition": "return touchdown passes of Carr ;return yards of #1 ;return #1 where #2 is at least 10 ;return number of  #3",
        "program": [
            "SELECT['touchdown passes of Carr']",
            "PROJECT['yards of #REF', '#1']",
            "COMPARATIVE['#1', '#2', 'is at least 10']",
            "AGGREGATE['count', '#3']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "touchdown passes of Carr"
                ],
                [
                    "PROJECT",
                    "yards of #REF",
                    [
                        "SELECT",
                        "touchdown passes of Carr"
                    ]
                ],
                "is at least 10"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes of Carr)"
                ],
                [
                    "PARTIAL_GROUP_sum",
                    [
                        "PARTIAL_SELECT_NUM",
                        "GET_QUESTION_SPAN(yards of #REF)"
                    ]
                ],
                [
                    "CONDITION",
                    "GET_QUESTION_SPAN(is at least 10)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_GT_EQ",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes of Carr)"
                ],
                "GET_QUESTION_NUMBER(10)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "comparative",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    9
                ],
                [
                    4,
                    5,
                    6
                ],
                [
                    10
                ],
                [
                    2,
                    12
                ],
                [
                    7,
                    8,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "touchdown",
                "passes",
                "of",
                "at",
                "least",
                "10",
                "yards",
                "did",
                "Carr",
                "throw",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [],
                [
                    4,
                    5,
                    6
                ],
                [],
                [
                    9
                ],
                [],
                [],
                [
                    7,
                    8,
                    11
                ],
                [
                    10
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    9,
                    11
                ],
                [
                    2,
                    3,
                    7
                ],
                [
                    4,
                    5,
                    6
                ],
                [],
                [
                    10
                ],
                [
                    12
                ],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    0,
                    8
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2063_21e2d59d-9898-4879-a62b-22e81413c113",
        "question_text": "How many more touchdowns than field goals were there in the game?",
        "split": "train",
        "decomposition": "return touchdowns in  the  game ;return field goals in  the  game ;return number of  #1 ;return number of  #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['touchdowns in the game']",
            "SELECT['field goals in the game']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdowns in the game"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals in the game"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns in the game)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals in the game)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns in the game)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals in the game)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4,
                    8
                ],
                [
                    3,
                    5
                ],
                [],
                [],
                [
                    6,
                    7
                ],
                [
                    9,
                    10
                ],
                [
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "touchdowns",
                "than",
                "field",
                "goals",
                "were",
                "there",
                "in",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [
                    5,
                    6
                ],
                [
                    8
                ],
                [],
                [
                    9
                ],
                [],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    8
                ],
                [
                    4
                ],
                [
                    3,
                    5,
                    6
                ],
                [],
                [],
                [],
                [
                    7
                ],
                [],
                [],
                [],
                [
                    11,
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    11
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1770_5fc15577-ef95-424d-9c2a-50d35463f40d",
        "question_text": "Who kicked the fourth longest field goal?",
        "split": "train",
        "decomposition": "return fourth longest field goal ;return who  kicked #1",
        "program": [
            "SELECT['fourth longest field goal']",
            "PROJECT['who kicked #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "who kicked #REF",
            [
                "SELECT",
                "fourth longest field goal"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who kicked #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(fourth longest field goal)"
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who kicked #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(fourth longest field goal)"
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4,
                    5,
                    6
                ],
                [
                    3
                ],
                [],
                [
                    7
                ]
            ],
            "question_tokens": [
                "Who",
                "kicked",
                "the",
                "fourth",
                "longest",
                "field",
                "goal",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    4
                ],
                [
                    2,
                    3
                ],
                [],
                [],
                [
                    5
                ],
                [
                    6
                ],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    2,
                    4,
                    5,
                    6
                ],
                [
                    3
                ],
                [],
                [],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_929_83cb12aa-6cf0-4abf-a198-fc67e9894ffc",
        "question_text": "Who fled to Mong Yang after a defeat against Ming?",
        "split": "train",
        "decomposition": "return who  fled to Mong Yang ;return #1 after a defeat against Ming",
        "program": [
            "SELECT['who fled to Mong Yang']",
            "FILTER['#1', 'after a defeat against Ming']"
        ],
        "nested_expression": [
            "FILTER",
            [
                "SELECT",
                "who fled to Mong Yang"
            ],
            "after a defeat against Ming"
        ],
        "typed_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(who fled to Mong Yang)"
            ],
            "GET_QUESTION_SPAN(after a defeat against Ming)"
        ],
        "drop_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(who fled to Mong Yang)"
            ],
            "GET_QUESTION_SPAN(after a defeat against Ming)"
        ],
        "operators": [
            "select",
            "filter"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    3,
                    4
                ],
                [
                    0,
                    2,
                    5,
                    6,
                    7
                ],
                [
                    8
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "Who",
                "fled",
                "to",
                "Mong",
                "Yang",
                "after",
                "a",
                "defeat",
                "against",
                "Ming",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    2,
                    7
                ],
                [
                    6
                ],
                [],
                [
                    8,
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    3,
                    4
                ],
                [
                    2,
                    6,
                    7
                ],
                [
                    8
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    1,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_3337_5ffac36e-8412-40fb-a9bb-e06a0b65f53a",
        "question_text": "What are the two smallest identified religions among Croatians?",
        "split": "train",
        "decomposition": "return identified religions among Croatians ;return two smallest of  #1",
        "program": [
            "SELECT['identified religions among Croatians']",
            "AGGREGATE['min', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "identified religions among Croatians"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(identified religions among Croatians)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(identified religions among Croatians)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    3,
                    4
                ],
                [
                    0,
                    2,
                    5,
                    6
                ],
                [
                    7,
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "What",
                "are",
                "the",
                "two",
                "smallest",
                "identified",
                "religions",
                "among",
                "Croatians",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    3,
                    4
                ],
                [
                    6
                ],
                [
                    5
                ],
                [],
                [
                    7,
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    6
                ],
                [
                    1,
                    3
                ],
                [
                    4
                ],
                [
                    2,
                    5
                ],
                [
                    8
                ],
                [
                    7,
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    8
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2058_a4052536-8456-4d90-8a66-7b3e615717ca",
        "question_text": "How many years between 1961 and 1989 did Real fail to win the Liga title?",
        "split": "train",
        "decomposition": "return years when  Real fails to win the  Liga title ;return #1 that are between 1961 and  1989 ;return number of  #2",
        "program": [
            "SELECT['years when Real fails to win the Liga title']",
            "FILTER['#1', 'that are between 1961 and 1989']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "years when Real fails to win the Liga title"
                ],
                "that are between 1961 and 1989"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(years when Real fails to win the Liga title)"
                ],
                "GET_QUESTION_SPAN(that are between 1961 and 1989)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(years when Real fails to win the Liga title)"
                ],
                "GET_QUESTION_SPAN(that are between 1961 and 1989)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    7,
                    8
                ],
                [],
                [
                    3,
                    9,
                    10,
                    12
                ],
                [
                    4,
                    5,
                    6,
                    11,
                    13
                ],
                [
                    14,
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "between",
                "1961",
                "and",
                "1989",
                "did",
                "Real",
                "fail",
                "to",
                "win",
                "the",
                "Liga",
                "title",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2,
                    3
                ],
                [],
                [],
                [
                    7,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    4,
                    6
                ],
                [
                    11,
                    12
                ],
                [
                    13,
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3,
                    6
                ],
                [
                    7,
                    8
                ],
                [],
                [],
                [],
                [
                    5,
                    9,
                    10,
                    11
                ],
                [
                    4,
                    13,
                    14
                ],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    14
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    14
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_372_60c14dde-e903-403d-8adc-90bcd1361279",
        "question_text": "How many neighborhoods were looted and burned by Cossack-Tatar troops?",
        "split": "train",
        "decomposition": "return neighborhoods that were looted by Cossack-Tatar troops ;return neighborhoods that were burned by Cossack-Tatar troops ;return number of  #1 ;return number of  #2 ;return sum of #3 and  #4",
        "program": [
            "SELECT['neighborhoods that were looted by Cossack-Tatar troops']",
            "SELECT['neighborhoods that were burned by Cossack-Tatar troops']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['sum', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "neighborhoods that were looted by Cossack-Tatar troops"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "neighborhoods that were burned by Cossack-Tatar troops"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(neighborhoods that were looted by Cossack-Tatar troops)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(neighborhoods that were burned by Cossack-Tatar troops)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(neighborhoods that were looted by Cossack-Tatar troops)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(neighborhoods that were burned by Cossack-Tatar troops)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    3,
                    5,
                    11
                ],
                [
                    1
                ],
                [
                    4,
                    6
                ],
                [
                    7,
                    8
                ],
                [],
                [
                    9
                ],
                [
                    10,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "neighborhoods",
                "were",
                "looted",
                "and",
                "burned",
                "by",
                "Cossack",
                "-",
                "Tatar",
                "troops",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3,
                    5,
                    11
                ],
                [
                    2
                ],
                [],
                [],
                [],
                [
                    4,
                    7
                ],
                [],
                [],
                [
                    6
                ],
                [],
                [
                    8
                ],
                [
                    9
                ],
                [],
                [
                    10
                ],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    5,
                    11
                ],
                [],
                [],
                [],
                [
                    4,
                    7
                ],
                [
                    8
                ],
                [
                    6
                ],
                [],
                [
                    9
                ],
                [
                    10
                ],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    11
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    11
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_373_ef4e23c7-e33e-4787-901b-6ae203480b54",
        "question_text": "How many field goals shorter than 46 yards did Nate Kaeding kick?",
        "split": "train",
        "decomposition": "return field goals that Nate Kaeding kicks ;return #1 that are shorter than 46 yards ;return number of  #2",
        "program": [
            "SELECT['field goals that Nate Kaeding kicks']",
            "FILTER['#1', 'that are shorter than 46 yards']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "field goals that Nate Kaeding kicks"
                ],
                "that are shorter than 46 yards"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that Nate Kaeding kicks)"
                ],
                "GET_QUESTION_SPAN(that are shorter than 46 yards)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_LT",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that Nate Kaeding kicks)"
                ],
                "GET_QUESTION_NUMBER(46)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    8,
                    9,
                    10
                ],
                [
                    4,
                    5,
                    6
                ],
                [],
                [
                    12
                ],
                [
                    7,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "field",
                "goals",
                "shorter",
                "than",
                "46",
                "yards",
                "did",
                "Nate",
                "Kaeding",
                "kick",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    4,
                    5
                ],
                [],
                [
                    6,
                    8,
                    9
                ],
                [],
                [],
                [
                    7,
                    11
                ],
                [
                    10
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    8,
                    9,
                    10
                ],
                [
                    2,
                    3
                ],
                [
                    4,
                    5,
                    6
                ],
                [],
                [],
                [
                    12
                ],
                [
                    7,
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    7
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1618_19a74946-cf5a-429f-9a7e-f409c012379b",
        "question_text": "Who scored more field goals, Nate Kaeding or Dan Carpenter?",
        "split": "dev",
        "decomposition": "return field goals that Nate Kaeding scored ;return field goals that Dan Carpenter scored ;return number of  #1 ;return number of  #2 ;return which is more of #3 ,  #4",
        "program": [
            "SELECT['field goals that Nate Kaeding scored']",
            "SELECT['field goals that Dan Carpenter scored']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals that Nate Kaeding scored"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals that Dan Carpenter scored"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals that Nate Kaeding scored)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals that Dan Carpenter scored)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals that Nate Kaeding scored)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals that Dan Carpenter scored)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    8
                ],
                [
                    6
                ],
                [],
                [
                    7
                ],
                [
                    9,
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "Who",
                "scored",
                "more",
                "field",
                "goals",
                ",",
                "Nate",
                "Kaeding",
                "or",
                "Dan",
                "Carpenter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    4
                ],
                [],
                [
                    5
                ],
                [],
                [
                    7
                ],
                [
                    6
                ],
                [
                    8
                ],
                [
                    9
                ],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    5,
                    8
                ],
                [
                    1,
                    2,
                    3,
                    4,
                    6
                ],
                [],
                [
                    7
                ],
                [],
                [],
                [
                    9
                ],
                [
                    10,
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    1,
                    10
                ],
                [
                    2,
                    10
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2475_85f71f32-0a08-4b8d-9787-741a0e4df7fb",
        "question_text": "Who scored more touchdowns, Ickey Woods or James Brooks?",
        "split": "train",
        "decomposition": "return number of  touchdowns Ickey Woods scored ;return number of  touchdowns James Brooks scored ;return which  is  highest of #1 ,  #2",
        "program": [
            "SELECT['number of touchdowns Ickey Woods scored']",
            "SELECT['number of touchdowns James Brooks scored']",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "number of touchdowns Ickey Woods scored"
            ],
            [
                "SELECT",
                "number of touchdowns James Brooks scored"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(number of touchdowns Ickey Woods scored)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(number of touchdowns James Brooks scored)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(number of touchdowns Ickey Woods scored)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(number of touchdowns James Brooks scored)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4,
                    7
                ],
                [],
                [
                    3,
                    5,
                    6
                ],
                [
                    8
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "Who",
                "scored",
                "more",
                "touchdowns",
                ",",
                "Ickey",
                "Woods",
                "or",
                "James",
                "Brooks",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [],
                [
                    4
                ],
                [],
                [
                    5
                ],
                [
                    6
                ],
                [
                    7,
                    8
                ],
                [],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    4,
                    7
                ],
                [
                    2
                ],
                [],
                [
                    5
                ],
                [
                    6
                ],
                [
                    8
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2221_6d1ac781-7c18-47fb-8d8a-ab7bf1a0fecf",
        "question_text": "How many more touchdowns did Rodgers throw than Bradford?",
        "split": "train",
        "decomposition": "return touchdowns that Rodgers throw ;return touchdowns that Bradford throw ;return the  number of  #1 ;return the  number of  #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['touchdowns that Rodgers throw']",
            "SELECT['touchdowns that Bradford throw']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdowns that Rodgers throw"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdowns that Bradford throw"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns that Rodgers throw)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns that Bradford throw)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns that Rodgers throw)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns that Bradford throw)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    7
                ],
                [
                    3,
                    4
                ],
                [
                    5
                ],
                [],
                [
                    6
                ],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "touchdowns",
                "did",
                "Rodgers",
                "throw",
                "than",
                "Bradford",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    2
                ],
                [],
                [
                    1,
                    3
                ],
                [],
                [],
                [
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [
                    4
                ],
                [],
                [
                    8
                ],
                [],
                [],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [
                    3,
                    4
                ],
                [],
                [],
                [],
                [
                    7
                ],
                [
                    5,
                    6,
                    8
                ],
                [],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2650_53f77c0f-abd9-40ee-8ae6-bb52b9306d3d",
        "question_text": "How many points did the Steelers lead at the start of the second quarter?",
        "split": "train",
        "decomposition": "return points at the  start of the   second quarter ;return points of the  Steelers at the   start of  the second quarter ;return difference of #1 and  #2 ;return difference of #2 and  #3",
        "program": [
            "SELECT['points at the start of the second quarter']",
            "SELECT['points of the Steelers at the start of the second quarter']",
            "ARITHMETIC['difference', '#1', '#2']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "points of the Steelers at the start of the second quarter"
            ],
            [
                "ARITHMETIC_difference",
                [
                    "SELECT",
                    "points at the start of the second quarter"
                ],
                [
                    "SELECT",
                    "points of the Steelers at the start of the second quarter"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points of the Steelers at the start of the second quarter)"
                ]
            ],
            [
                "ARITHMETIC_difference",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(points at the start of the second quarter)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(points of the Steelers at the start of the second quarter)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points of the Steelers at the start of the second quarter)"
                ]
            ],
            [
                "ARITHMETIC_difference",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(points at the start of the second quarter)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(points of the Steelers at the start of the second quarter)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    6,
                    7,
                    9
                ],
                [],
                [],
                [],
                [
                    12,
                    13,
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "points",
                "did",
                "the",
                "Steelers",
                "lead",
                "at",
                "the",
                "start",
                "of",
                "the",
                "second",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    5,
                    6
                ],
                [
                    7,
                    9
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    13
                ],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    13,
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    13
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    13
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    13
                ],
                [
                    8,
                    13
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1885_01e1a92a-47b9-42c0-97bb-418f9f85abd3",
        "question_text": "How many minutes of a half-life does the unconfirmed 286Rg and 283Rg appear to have combined?",
        "split": "train",
        "decomposition": "return minutes of half-life of  286Rg ;return minutes of half-life of  283Rg ;return sum of #1 and  #2",
        "program": [
            "SELECT['minutes of half-life of 286Rg']",
            "SELECT['minutes of half-life of 283Rg']",
            "ARITHMETIC['sum', '#1', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT",
                "minutes of half-life of 286Rg"
            ],
            [
                "SELECT",
                "minutes of half-life of 283Rg"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(minutes of half-life of 286Rg)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(minutes of half-life of 283Rg)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(minutes of half-life of 286Rg)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(minutes of half-life of 283Rg)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    12,
                    17
                ],
                [
                    1
                ],
                [
                    3,
                    4,
                    6,
                    7,
                    8,
                    9
                ],
                [
                    5
                ],
                [
                    10,
                    11,
                    13,
                    15
                ],
                [
                    14,
                    16
                ],
                [
                    18
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "minutes",
                "of",
                "a",
                "half",
                "-",
                "life",
                "does",
                "the",
                "unconfirmed",
                "286Rg",
                "and",
                "283Rg",
                "appear",
                "to",
                "have",
                "combined",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    12,
                    17
                ],
                [],
                [
                    2
                ],
                [
                    7
                ],
                [
                    4,
                    6,
                    8
                ],
                [],
                [
                    5
                ],
                [],
                [
                    10,
                    11
                ],
                [],
                [],
                [
                    14
                ],
                [
                    15
                ],
                [
                    13,
                    16
                ],
                [],
                [
                    18
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    12,
                    17
                ],
                [
                    2,
                    8
                ],
                [],
                [
                    6,
                    7
                ],
                [],
                [
                    5
                ],
                [
                    16
                ],
                [
                    10,
                    11,
                    13,
                    15
                ],
                [
                    14
                ],
                [],
                [
                    18
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    17
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    13
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    17
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    17
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    17
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_620_16e8eb1c-4362-4505-bff0-8fbdbe053b67",
        "question_text": "How many yards longer was Brown's first field goal kick of the fourth quarter than his second?",
        "split": "train",
        "decomposition": "return yards of the  first field goal of  Brown in  the fourth quarter ;return yards of the  second field goal of  Brown in  the fourth quarter ;return the  difference of #1 and  #2",
        "program": [
            "SELECT['yards of the first field goal of Brown in the fourth quarter']",
            "SELECT['yards of the second field goal of Brown in the fourth quarter']",
            "ARITHMETIC['difference', '#1', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "yards of the first field goal of Brown in the fourth quarter"
            ],
            [
                "SELECT",
                "yards of the second field goal of Brown in the fourth quarter"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of the first field goal of Brown in the fourth quarter)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of the second field goal of Brown in the fourth quarter)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of the first field goal of Brown)"
                    ],
                    "GET_QUESTION_SPAN(in the fourth quarter)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of the second field goal of Brown)"
                    ],
                    "GET_QUESTION_SPAN(in the fourth quarter)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    6
                ],
                [
                    7,
                    8
                ],
                [
                    4,
                    5
                ],
                [],
                [],
                [
                    9,
                    15,
                    16
                ],
                [
                    10,
                    13,
                    14,
                    17
                ],
                [],
                [],
                [
                    18
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "Brown",
                "'s",
                "first",
                "field",
                "goal",
                "kick",
                "of",
                "the",
                "fourth",
                "quarter",
                "than",
                "his",
                "second",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    9,
                    15
                ],
                [],
                [
                    8,
                    10,
                    13,
                    14
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    16
                ],
                [
                    17
                ],
                [
                    18
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3
                ],
                [
                    5
                ],
                [],
                [
                    8
                ],
                [
                    7,
                    10
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    9,
                    15,
                    16
                ],
                [],
                [
                    13,
                    14,
                    17
                ],
                [],
                [],
                [],
                [
                    18
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    17
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    14
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    17
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    17
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1359_a571bdf0-b91c-4526-8ef5-29f6f38c8c89",
        "question_text": "Which player had the most interceptions this game?",
        "split": "train",
        "decomposition": "return players in this game ;return interceptions of #1 ;return the  number of  #2 for each #1 ;return #1 where #3 is the  highest",
        "program": [
            "SELECT['players in this game']",
            "PROJECT['interceptions of #REF', '#1']",
            "GROUP['count', '#2', '#1']",
            "COMPARATIVE['#1', '#3', 'is the highest']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "players in this game"
            ],
            [
                "GROUP_count",
                [
                    "PROJECT",
                    "interceptions of #REF",
                    [
                        "SELECT",
                        "players in this game"
                    ]
                ],
                [
                    "SELECT",
                    "players in this game"
                ]
            ],
            "is the highest"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(players in this game)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(interceptions of #REF)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is the highest)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(players in this game)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(interceptions of #REF)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is the highest)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2
                ],
                [],
                [],
                [
                    1,
                    4
                ],
                [
                    5
                ],
                [
                    6
                ],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "had",
                "the",
                "most",
                "interceptions",
                "this",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    1,
                    2
                ],
                [],
                [
                    4
                ],
                [
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    4
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    7,
                    8
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1832_856bb70a-fc5e-40a8-ab11-7c8d053329b5",
        "question_text": "How many more yards in touchdowns did Willis McGahee have compared to Ray Rice?",
        "split": "train",
        "decomposition": "return yards of touchdowns of  Willis McGahee ;return yards of touchdowns of  Ray Rice ;return sum of #1 ;return sum of #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['yards of touchdowns of Willis McGahee']",
            "SELECT['yards of touchdowns of Ray Rice']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of touchdowns of Willis McGahee"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of touchdowns of Ray Rice"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdowns of Willis McGahee)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdowns of Ray Rice)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdowns of Willis McGahee)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdowns of Ray Rice)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    10
                ],
                [
                    3,
                    5,
                    6
                ],
                [
                    4,
                    7
                ],
                [],
                [
                    8,
                    9,
                    13
                ],
                [
                    11,
                    12
                ],
                [
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "yards",
                "in",
                "touchdowns",
                "did",
                "Willis",
                "McGahee",
                "have",
                "compared",
                "to",
                "Ray",
                "Rice",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    5
                ],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    7,
                    8
                ],
                [
                    6,
                    13
                ],
                [],
                [],
                [],
                [
                    12
                ],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [
                    3,
                    5,
                    6
                ],
                [],
                [
                    7
                ],
                [],
                [
                    8,
                    9,
                    10
                ],
                [
                    13
                ],
                [],
                [
                    12
                ],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    13
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    13
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2077_6ae86691-f180-4f14-96fe-bec609eacef7",
        "question_text": "How many in percent in 1901 Singapore wasn't Malays?",
        "split": "train",
        "decomposition": "return percent of Singapore that are Malays in  1901 ;return difference of 100 and  #1",
        "program": [
            "SELECT['percent of Singapore that are Malays in 1901']",
            "PROJECT['difference of 100 and #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "difference of 100 and #REF",
            [
                "SELECT",
                "percent of Singapore that are Malays in 1901"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(difference of 100 and #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(percent of Singapore that are Malays in 1901)"
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            "SELECT_IMPLICIT_NUM(100)",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent of Singapore that are Malays in 1901)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    3,
                    8
                ],
                [
                    9
                ],
                [
                    2,
                    4,
                    7
                ],
                [
                    5,
                    6,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "in",
                "percent",
                "in",
                "1901",
                "Singapore",
                "was",
                "n't",
                "Malays",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    8
                ],
                [],
                [],
                [
                    7
                ],
                [],
                [],
                [
                    5,
                    6
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    7
                ],
                [
                    3,
                    8
                ],
                [],
                [
                    9
                ],
                [
                    6
                ],
                [
                    5
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1434_b19dae73-8e1a-4edb-a428-41a9f0f9cd7a",
        "question_text": "Which player had more total yards in field goal kicks, Gostkowsaki or Prater?",
        "split": "train",
        "decomposition": "return yards of field goals of  Gostkowsaki ;return yards of field goals of  Prater ;return the  sum of #1 ;return the  sum of #2 ;return which is more of #3 ,  #4",
        "program": [
            "SELECT['yards of field goals of Gostkowsaki']",
            "SELECT['yards of field goals of Prater']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of field goals of Gostkowsaki"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of field goals of Prater"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_sum_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals of Gostkowsaki)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals of Prater)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_sum_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals of Gostkowsaki)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals of Prater)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    10
                ],
                [
                    6
                ],
                [
                    7,
                    8
                ],
                [
                    9,
                    11,
                    13
                ],
                [
                    12,
                    14
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "had",
                "more",
                "total",
                "yards",
                "in",
                "field",
                "goal",
                "kicks",
                ",",
                "Gostkowsaki",
                "or",
                "Prater",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    5
                ],
                [
                    4
                ],
                [],
                [
                    6
                ],
                [
                    8
                ],
                [
                    9
                ],
                [
                    10
                ],
                [
                    12
                ],
                [
                    11,
                    13
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    10,
                    12
                ],
                [
                    2,
                    3,
                    4,
                    5
                ],
                [
                    6
                ],
                [],
                [
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    13
                ],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    13
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    13
                ],
                [
                    3,
                    9
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1191_125eb774-cbc1-447c-ab56-b0a3d6c0559b",
        "question_text": "How many troops were available combined between the Portuguese and the Timoji?",
        "split": "train",
        "decomposition": "return troops of the  Portuguese that were available ;return troops of the  Timoji that were available ;return the  number of  #1 ;return the  number of  #2 ;return the  sum of #3 and  #4",
        "program": [
            "SELECT['troops of the Portuguese that were available']",
            "SELECT['troops of the Timoji that were available']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['sum', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "troops of the Portuguese that were available"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "troops of the Timoji that were available"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(troops of the Portuguese that were available)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(troops of the Timoji that were available)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(troops of the Portuguese that were available)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(troops of the Timoji that were available)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    3,
                    5,
                    9
                ],
                [
                    1
                ],
                [
                    4,
                    7
                ],
                [],
                [
                    6,
                    11
                ],
                [
                    8,
                    10
                ],
                [
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "troops",
                "were",
                "available",
                "combined",
                "between",
                "the",
                "Portuguese",
                "and",
                "the",
                "Timoji",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    9
                ],
                [],
                [],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [],
                [
                    6
                ],
                [],
                [
                    8
                ],
                [],
                [],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    5,
                    9
                ],
                [],
                [
                    6
                ],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    11
                ],
                [
                    8
                ],
                [],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    11
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    11
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    11
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_274_3dbc8ff8-8aac-4f1a-9f07-736467924e56",
        "question_text": "Who put them in the lead?",
        "split": "train",
        "decomposition": "return who  put them in  the  lead",
        "program": [
            "SELECT['who put them in the lead']"
        ],
        "nested_expression": [
            "SELECT",
            "who put them in the lead"
        ],
        "typed_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(who put them in the lead)"
        ],
        "drop_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(who put them in the lead)"
        ],
        "operators": [
            "select"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    3,
                    4,
                    5
                ],
                [
                    1,
                    2,
                    6
                ]
            ],
            "question_tokens": [
                "Who",
                "put",
                "them",
                "in",
                "the",
                "lead",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [],
                [
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [
                    6
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    5
                ],
                [
                    3,
                    4
                ],
                [
                    1
                ],
                [
                    2,
                    6
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1962_b98a6455-138e-46df-8706-0d76779331d4",
        "question_text": "How many yards longer was the longest touchdown pass over the shortest one?",
        "split": "dev",
        "decomposition": "return yards of touchdown passes ;return longest of #1 ;return shortest of #1 ;return the  difference of #2 and  #3",
        "program": [
            "SELECT['yards of touchdown passes']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['min', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of touchdown passes"
                ]
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of touchdown passes"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    6,
                    8,
                    9,
                    12
                ],
                [],
                [],
                [],
                [
                    7,
                    11
                ],
                [],
                [
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "the",
                "longest",
                "touchdown",
                "pass",
                "over",
                "the",
                "shortest",
                "one",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    7,
                    8,
                    11
                ],
                [],
                [],
                [],
                [],
                [
                    12
                ],
                [],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [],
                [
                    2,
                    3,
                    4
                ],
                [
                    6,
                    7,
                    8,
                    12
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [
                    11
                ],
                [],
                [],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    12
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    12
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2972_344e36f9-d167-4fd2-b724-c159b419d890",
        "question_text": "How long was the first touchdown reception?",
        "split": "train",
        "decomposition": "return the  first touchdown reception ;return How long was  #1",
        "program": [
            "SELECT['the first touchdown reception']",
            "PROJECT['How long was #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "How long was #REF",
            [
                "SELECT",
                "the first touchdown reception"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(How long was #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the first touchdown reception)"
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(How long was #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the first touchdown reception)"
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    6
                ],
                [
                    4
                ],
                [],
                [
                    7
                ]
            ],
            "question_tokens": [
                "How",
                "long",
                "was",
                "the",
                "first",
                "touchdown",
                "reception",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2
                ],
                [
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    6
                ],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    2
                ],
                [
                    1
                ],
                [
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [],
                [],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_338_c1be37ac-ef0f-4532-b3bd-a0f7c09f0c6c",
        "question_text": "How many yards was Jason Elam's longest field goal?",
        "split": "train",
        "decomposition": "return yards of field goals of  Jason Elam ;return the  longest of #1",
        "program": [
            "SELECT['yards of field goals of Jason Elam']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "yards of field goals of Jason Elam"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals of Jason Elam)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals of Jason Elam)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9
                ],
                [],
                [
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "Jason",
                "Elam",
                "'s",
                "longest",
                "field",
                "goal",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    6,
                    7,
                    8,
                    9
                ],
                [
                    4,
                    5
                ],
                [],
                [],
                [],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    4,
                    5
                ],
                [],
                [
                    2,
                    3,
                    9
                ],
                [
                    6,
                    7,
                    8
                ],
                [],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2553_35a9bbc4-0a80-41dc-b6dc-3255e80f85b3",
        "question_text": "How many daughters did he have that became actresses?",
        "split": "train",
        "decomposition": "return daughters that he did have ;return #1 that became actresses ;return the  number of  #2",
        "program": [
            "SELECT['daughters that he did have']",
            "FILTER['#1', 'that became actresses']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "daughters that he did have"
                ],
                "that became actresses"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(daughters that he did have)"
                ],
                "GET_QUESTION_SPAN(that became actresses)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(daughters that he did have)"
                ],
                "GET_QUESTION_SPAN(that became actresses)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    5
                ],
                [
                    2,
                    6
                ],
                [
                    4,
                    7
                ],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "daughters",
                "did",
                "he",
                "have",
                "that",
                "became",
                "actresses",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    2
                ],
                [
                    7
                ],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3,
                    5
                ],
                [],
                [
                    6
                ],
                [
                    4,
                    7
                ],
                [],
                [
                    2,
                    8
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1666_68782234-fb53-4a39-b50a-829abb6f37bf",
        "question_text": "Did the Battle of Bakhmach happen before or after the defeat of the Austro-Hungarian army in Zborov?",
        "split": "train",
        "decomposition": "return when  did the  Battle of Bakhmach happen ;return when  did the  defeat of Austro-Hungarian army in  Zborov happen ;return is #1 before #2 ;return is #1 after #2 ;return which is true of #3 , #4",
        "program": [
            "SELECT['when did the Battle of Bakhmach happen']",
            "SELECT['when did the defeat of Austro-Hungarian army in Zborov happen']",
            "BOOLEAN['#1', 'before #2']",
            "BOOLEAN['#1', 'after #2']",
            "COMPARISON['true', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_true",
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "when did the Battle of Bakhmach happen"
                ],
                "before #2"
            ],
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "when did the Battle of Bakhmach happen"
                ],
                "after #2"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_true",
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(when did the Battle of Bakhmach happen)"
                ],
                "GET_QUESTION_SPAN(before #2)"
            ],
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(when did the Battle of Bakhmach happen)"
                ],
                "GET_QUESTION_SPAN(after #2)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_true",
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(when did the Battle of Bakhmach happen)"
                ],
                "GET_QUESTION_SPAN(before #2)"
            ],
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(when did the Battle of Bakhmach happen)"
                ],
                "GET_QUESTION_SPAN(after #2)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "boolean",
            "boolean",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0
                ],
                [
                    4,
                    5,
                    6,
                    7
                ],
                [
                    2,
                    10
                ],
                [],
                [],
                [
                    8,
                    13,
                    15,
                    16
                ],
                [
                    14
                ],
                [],
                [
                    18,
                    19
                ]
            ],
            "question_tokens": [
                "Did",
                "the",
                "Battle",
                "of",
                "Bakhmach",
                "happen",
                "before",
                "or",
                "after",
                "the",
                "defeat",
                "of",
                "the",
                "Austro",
                "-",
                "Hungarian",
                "army",
                "in",
                "Zborov",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [],
                [
                    4,
                    5,
                    6,
                    7
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    8,
                    15,
                    16
                ],
                [],
                [
                    10,
                    14
                ],
                [
                    13
                ],
                [],
                [
                    17
                ],
                [
                    18
                ],
                [
                    19
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [],
                [
                    6
                ],
                [
                    4,
                    5,
                    8
                ],
                [
                    7
                ],
                [
                    2,
                    10
                ],
                [],
                [],
                [],
                [],
                [
                    13,
                    15,
                    16
                ],
                [],
                [],
                [
                    18
                ],
                [
                    19
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    1,
                    4
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    18
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    18
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    18
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    16
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    16
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    16
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    18
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_796_5ee4d2d6-2317-45e4-aca1-7c32fbc72e65",
        "question_text": "How many touchdown passes did Huard throw in the second half?",
        "split": "train",
        "decomposition": "return touchdown passes of Huard in  the  second half ;return number of  #1",
        "program": [
            "SELECT['touchdown passes of Huard in the second half']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "touchdown passes of Huard in the second half"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown passes of Huard in the second half)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes of Huard)"
                ],
                "GET_QUESTION_SPAN(in the second half)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    4,
                    6
                ],
                [
                    5,
                    7,
                    9,
                    10
                ],
                [
                    8
                ],
                [
                    2
                ],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "touchdown",
                "passes",
                "did",
                "Huard",
                "throw",
                "in",
                "the",
                "second",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [],
                [
                    4,
                    5,
                    10
                ],
                [],
                [],
                [
                    7
                ],
                [
                    6
                ],
                [
                    9
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    3,
                    4,
                    6
                ],
                [
                    5
                ],
                [
                    7,
                    9,
                    10
                ],
                [],
                [],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_2088_20d30236-f998-427a-8392-2ab000a25267",
        "question_text": "Which ethnic group of the ones listed was the smallest?",
        "split": "dev",
        "decomposition": "return ethnic groups listed ;return smallest of #1",
        "program": [
            "SELECT['ethnic groups listed']",
            "AGGREGATE['min', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "ethnic groups listed"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(ethnic groups listed)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(ethnic groups listed)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    2,
                    5,
                    7,
                    9
                ],
                [
                    0,
                    3,
                    4,
                    6,
                    8
                ],
                [
                    10
                ]
            ],
            "question_tokens": [
                "Which",
                "ethnic",
                "group",
                "of",
                "the",
                "ones",
                "listed",
                "was",
                "the",
                "smallest",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    2
                ],
                [
                    1,
                    7,
                    9
                ],
                [],
                [
                    3,
                    4,
                    5
                ],
                [
                    6,
                    8
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    2
                ],
                [
                    1,
                    7
                ],
                [
                    5,
                    9
                ],
                [
                    3,
                    4,
                    8
                ],
                [
                    6
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2550_6ccf89e6-a791-4130-8a86-804f63d8e14e",
        "question_text": "Which TV shows was Steiger  in for more than one year?",
        "split": "train",
        "decomposition": "return TV shows that Steiger was  in  ;return #1 that was  more than one year",
        "program": [
            "SELECT['TV shows that Steiger was in']",
            "FILTER['#1', 'that was more than one year']"
        ],
        "nested_expression": [
            "FILTER",
            [
                "SELECT",
                "TV shows that Steiger was in"
            ],
            "that was more than one year"
        ],
        "typed_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(TV shows that Steiger was in)"
            ],
            "GET_QUESTION_SPAN(that was more than one year)"
        ],
        "drop_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(TV shows that Steiger was in)"
            ],
            "GET_QUESTION_SPAN(that was more than one year)"
        ],
        "operators": [
            "select",
            "filter"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4,
                    5
                ],
                [
                    3,
                    6,
                    7,
                    10
                ],
                [
                    8,
                    9
                ],
                [
                    11
                ]
            ],
            "question_tokens": [
                "Which",
                "TV",
                "shows",
                "was",
                "Steiger",
                "in",
                "for",
                "more",
                "than",
                "one",
                "year",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4,
                    7,
                    10
                ],
                [],
                [
                    5,
                    6
                ],
                [
                    8,
                    9
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    3,
                    10
                ],
                [
                    1,
                    2
                ],
                [
                    4,
                    5,
                    8
                ],
                [],
                [
                    6
                ],
                [
                    9
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2373_a2fec9e6-9755-449b-835b-515138b21b5e",
        "question_text": "How many yards was the Broncos third quarter TD?",
        "split": "train",
        "decomposition": "return yards of Broncos TD ;return #1 that was  in  third quarter",
        "program": [
            "SELECT['yards of Broncos TD']",
            "FILTER['#1', 'that was in third quarter']"
        ],
        "nested_expression": [
            "FILTER",
            [
                "SELECT",
                "yards of Broncos TD"
            ],
            "that was in third quarter"
        ],
        "typed_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of Broncos TD)"
            ],
            "GET_QUESTION_SPAN(that was in third quarter)"
        ],
        "drop_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of Broncos TD)"
            ],
            "GET_QUESTION_SPAN(that was in third quarter)"
        ],
        "operators": [
            "select",
            "filter"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    2,
                    5,
                    6,
                    7,
                    8
                ],
                [
                    3,
                    4
                ],
                [],
                [
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "the",
                "Broncos",
                "third",
                "quarter",
                "TD",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    7
                ],
                [
                    2,
                    3
                ],
                [
                    4
                ],
                [
                    5,
                    6
                ],
                [],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    8
                ],
                [
                    4,
                    5,
                    6,
                    7
                ],
                [],
                [],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3279_f65fa9df-cd2a-44a6-9df8-fba07b98e919",
        "question_text": "Which player was the last player to score in the game?",
        "split": "train",
        "decomposition": "return last player to score in  the  game",
        "program": [
            "SELECT['last player to score in the game']"
        ],
        "nested_expression": [
            "SELECT",
            "last player to score in the game"
        ],
        "typed_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(last player to score in the game)"
        ],
        "drop_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(last player to score in the game)"
        ],
        "operators": [
            "select"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    6,
                    7,
                    8,
                    9
                ],
                [
                    4,
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "was",
                "the",
                "last",
                "player",
                "to",
                "score",
                "in",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1,
                    2,
                    5
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    7,
                    8,
                    9
                ],
                [
                    10,
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2,
                    5
                ],
                [
                    3,
                    6,
                    7,
                    8,
                    9
                ],
                [
                    4
                ],
                [
                    10,
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    10
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_279_59148dc8-13f3-4c8f-a8d8-5cd91c672f26",
        "question_text": "How many more other boats did Chakri capture than foreign sloops?",
        "split": "train",
        "decomposition": "return boats that Chakri capture ;return #1 that are foreign sloops ;return #1 besides  #2 ;return the  number of  of #3",
        "program": [
            "SELECT['boats that Chakri capture']",
            "FILTER['#1', 'that are foreign sloops']",
            "DISCARD['#1', '#2']",
            "AGGREGATE['count', '#3']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "DISCARD",
                [
                    "SELECT",
                    "boats that Chakri capture"
                ],
                [
                    "FILTER",
                    [
                        "SELECT",
                        "boats that Chakri capture"
                    ],
                    "that are foreign sloops"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "DISCARD",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(boats that Chakri capture)"
                ],
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(boats that Chakri capture)"
                    ],
                    "GET_QUESTION_SPAN(that are foreign sloops)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "DISCARD",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(boats that Chakri capture)"
                ],
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(boats that Chakri capture)"
                    ],
                    "GET_QUESTION_SPAN(that are foreign sloops)"
                ]
            ]
        ],
        "operators": [
            "select",
            "filter",
            "discard",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    5
                ],
                [
                    3
                ],
                [],
                [
                    4
                ],
                [
                    6
                ],
                [
                    7
                ],
                [
                    9,
                    10
                ],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "other",
                "boats",
                "did",
                "Chakri",
                "capture",
                "than",
                "foreign",
                "sloops",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2
                ],
                [
                    3
                ],
                [],
                [
                    4
                ],
                [
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [
                    7
                ],
                [],
                [],
                [
                    9,
                    10
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3,
                    8
                ],
                [
                    5
                ],
                [
                    2,
                    6
                ],
                [],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    9,
                    10
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2096_6731a3c8-ad14-4ecc-9680-1da96851a137",
        "question_text": "Which team failed to score any points in the first quarter?",
        "split": "train",
        "decomposition": "return team ;return points that #1 score in  the  first quarter ;return the  sum of #2 for each #1 ;return #1 where #3 is zero",
        "program": [
            "SELECT['team']",
            "PROJECT['points that #REF score in the first quarter', '#1']",
            "GROUP['sum', '#2', '#1']",
            "COMPARATIVE['#1', '#3', 'is zero']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "team"
            ],
            [
                "GROUP_sum",
                [
                    "PROJECT",
                    "points that #REF score in the first quarter",
                    [
                        "SELECT",
                        "team"
                    ]
                ],
                [
                    "SELECT",
                    "team"
                ]
            ],
            "is zero"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(team)"
            ],
            [
                "PARTIAL_GROUP_sum",
                [
                    "PARTIAL_SELECT_NUM",
                    "GET_QUESTION_SPAN(points that #REF score in the first quarter)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is zero)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(team)"
            ],
            [
                "PARTIAL_SELECT_SINGLE_NUM",
                "GET_QUESTION_SPAN(points that #REF score in the first quarter)"
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is zero)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3
                ],
                [],
                [
                    5,
                    6
                ],
                [
                    9
                ],
                [
                    4,
                    7
                ],
                [
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "Which",
                "team",
                "failed",
                "to",
                "score",
                "any",
                "points",
                "in",
                "the",
                "first",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    3,
                    4
                ],
                [],
                [],
                [
                    6
                ],
                [
                    5,
                    7
                ],
                [],
                [],
                [],
                [
                    9
                ],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [],
                [],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [],
                [
                    4,
                    7
                ],
                [
                    11
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    10
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1373_5deee666-a5df-4b63-b1cf-e01662c3cf78",
        "question_text": "How many more field goals were made by Kasay than by Carpenter?",
        "split": "train",
        "decomposition": "return field goals of Kasay ;return field goals of Carpenter ;return number of  #1 ;return number of  #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['field goals of Kasay']",
            "SELECT['field goals of Carpenter']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals of Kasay"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals of Carpenter"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Kasay)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Carpenter)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Kasay)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Carpenter)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    9
                ],
                [
                    3,
                    4,
                    5
                ],
                [
                    6
                ],
                [
                    7
                ],
                [],
                [
                    8
                ],
                [
                    10,
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "field",
                "goals",
                "were",
                "made",
                "by",
                "Kasay",
                "than",
                "by",
                "Carpenter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4
                ],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    8
                ],
                [],
                [],
                [],
                [],
                [
                    10
                ],
                [],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    5
                ],
                [
                    3,
                    4,
                    6
                ],
                [],
                [
                    7
                ],
                [],
                [
                    8,
                    9
                ],
                [],
                [],
                [
                    10
                ],
                [
                    11,
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    4
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    11
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_897_0d40306e-0a17-4b5d-ad66-fc355925f8d5",
        "question_text": "How many years was the Filipino Veterans' Equity Act of 2006 pending for?",
        "split": "train",
        "decomposition": "return years in  which the  Filipino Veterans Equity Act of 2006 was  pending ;return number of  #1",
        "program": [
            "SELECT['years in which the Filipino Veterans Equity Act of 2006 was pending']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "years in which the Filipino Veterans Equity Act of 2006 was pending"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years in which the Filipino Veterans Equity Act of 2006 was pending)"
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Single_Event",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years in which the Filipino Veterans Equity Act of 2006 was pending)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    6,
                    8,
                    13
                ],
                [
                    4,
                    7,
                    10
                ],
                [
                    9,
                    11,
                    12,
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "was",
                "the",
                "Filipino",
                "Veterans",
                "'",
                "Equity",
                "Act",
                "of",
                "2006",
                "pending",
                "for",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    5,
                    6
                ],
                [],
                [
                    4,
                    7,
                    8
                ],
                [
                    9,
                    10,
                    13
                ],
                [
                    11,
                    12
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    5
                ],
                [
                    6,
                    8,
                    13
                ],
                [
                    4,
                    7,
                    10
                ],
                [
                    9,
                    12
                ],
                [
                    11,
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    13
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    11
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3099_994047d9-1056-4d18-b5a8-deffca7704bc",
        "question_text": "How many more yards of field goals did Connor Barth score than",
        "split": "train",
        "decomposition": "return yards of field goals of  Connor Barth ;return the  sum of #1",
        "program": [
            "SELECT['yards of field goals of Connor Barth']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "yards of field goals of Connor Barth"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals of Connor Barth)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals of Connor Barth)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    5,
                    6,
                    7
                ],
                [
                    2,
                    4,
                    10
                ],
                [
                    8,
                    9,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "yards",
                "of",
                "field",
                "goals",
                "did",
                "Connor",
                "Barth",
                "score",
                "than"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    2
                ],
                [
                    1,
                    3,
                    5,
                    6
                ],
                [],
                [
                    4,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    9
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    5,
                    9,
                    11
                ],
                [
                    3,
                    6,
                    7
                ],
                [
                    4,
                    8,
                    10
                ],
                [],
                []
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_768_f9d0b1eb-9ac7-4ff5-aa75-324a6ec884b7",
        "question_text": "How many years did over 1000 Somalis from Mogadishu serve as combat units in the Italo-Turkish War?",
        "split": "train",
        "decomposition": "return years when  over 1000 Somalis from  Mogadishu serve as combat units in  the  Italo-Turkish War ;return the  number of  #1",
        "program": [
            "SELECT['years when over 1000 Somalis from Mogadishu serve as combat units in the Italo-Turkish War']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "years when over 1000 Somalis from Mogadishu serve as combat units in the Italo-Turkish War"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years when over 1000 Somalis from Mogadishu serve as combat units in the Italo-Turkish War)"
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Single_Event",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years when over 1000 Somalis from Mogadishu serve as combat units in the Italo-Turkish War)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    6,
                    8,
                    9,
                    10,
                    18
                ],
                [
                    5,
                    7,
                    11,
                    13,
                    14,
                    15,
                    16,
                    17
                ],
                [
                    4,
                    12,
                    19
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "did",
                "over",
                "1000",
                "Somalis",
                "from",
                "Mogadishu",
                "serve",
                "as",
                "combat",
                "units",
                "in",
                "the",
                "Italo",
                "-",
                "Turkish",
                "War",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    4
                ],
                [
                    1,
                    2,
                    3,
                    6,
                    8,
                    9
                ],
                [
                    5,
                    7
                ],
                [
                    10,
                    11,
                    12,
                    15
                ],
                [
                    13,
                    14,
                    16,
                    17
                ],
                [],
                [
                    18,
                    19
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    5,
                    6
                ],
                [
                    4,
                    8,
                    9,
                    10,
                    16,
                    18
                ],
                [
                    7,
                    11,
                    12,
                    13,
                    14,
                    15
                ],
                [
                    17
                ],
                [
                    19
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    18
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    18
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    18
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    18
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    18
                ],
                [
                    14,
                    18
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1322_b4ffff21-d53b-47c5-b203-b15fd8e5d96a",
        "question_text": "How many points did the Cardinals have at the half?",
        "split": "train",
        "decomposition": "return points of the  Cardinals at the half ;return sum of #1",
        "program": [
            "SELECT['points of the Cardinals at the half']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "points of the Cardinals at the half"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(points of the Cardinals at the half)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "SELECT",
                "GET_QUESTION_SPAN(points of the Cardinals at the half)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4,
                    6,
                    7,
                    8
                ],
                [
                    5,
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "points",
                "did",
                "the",
                "Cardinals",
                "have",
                "at",
                "the",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3
                ],
                [
                    4,
                    5,
                    6
                ],
                [
                    7,
                    8
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    6
                ],
                [],
                [
                    4,
                    8
                ],
                [
                    5,
                    7
                ],
                [
                    9,
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1106_b94b92c2-1da0-433b-8bce-d709edcf3117",
        "question_text": "Was thre Treaty of Nasuh Pasha signed before or after Murad Pasha's death?",
        "split": "train",
        "decomposition": "return date that Treaty of Nasuh Pasha was  signed ;return date of Murad Pasha 's death ;return is #1 before or  after #2",
        "program": [
            "SELECT['date that Treaty of Nasuh Pasha was signed']",
            "SELECT[\"date of Murad Pasha 's death\"]",
            "BOOLEAN['#1', 'before or after #2']"
        ],
        "nested_expression": [
            "BOOLEAN",
            [
                "SELECT",
                "date that Treaty of Nasuh Pasha was signed"
            ],
            "before or after #2"
        ],
        "typed_nested_expression": [
            "BOOLEAN",
            [
                "SELECT",
                "GET_QUESTION_SPAN(date that Treaty of Nasuh Pasha was signed)"
            ],
            "GET_QUESTION_SPAN(before or after #2)"
        ],
        "drop_nested_expression": [
            "BOOLEAN",
            [
                "SELECT",
                "GET_QUESTION_SPAN(date that Treaty of Nasuh Pasha was signed)"
            ],
            "GET_QUESTION_SPAN(before or after #2)"
        ],
        "operators": [
            "select",
            "select",
            "boolean"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4,
                    5,
                    7,
                    8,
                    9,
                    11
                ],
                [
                    3,
                    12
                ],
                [
                    6,
                    10
                ],
                [
                    13,
                    14
                ]
            ],
            "question_tokens": [
                "Was",
                "thre",
                "Treaty",
                "of",
                "Nasuh",
                "Pasha",
                "signed",
                "before",
                "or",
                "after",
                "Murad",
                "Pasha",
                "'s",
                "death",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    4,
                    5,
                    7,
                    9,
                    11
                ],
                [],
                [
                    2,
                    3,
                    6
                ],
                [
                    8,
                    10
                ],
                [],
                [
                    12,
                    13
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4,
                    7,
                    9
                ],
                [
                    5,
                    6,
                    8,
                    11
                ],
                [
                    12
                ],
                [],
                [
                    10
                ],
                [
                    13,
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    13
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    13
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1777_84b4adce-3a69-4294-bcbb-01e2ad30944f",
        "question_text": "Who scored the only field goal under 34 yards?",
        "split": "train",
        "decomposition": "return the  only field goal under 34 yards ;return who  scored #1",
        "program": [
            "SELECT['the only field goal under 34 yards']",
            "PROJECT['who scored #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "who scored #REF",
            [
                "SELECT",
                "the only field goal under 34 yards"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who scored #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the only field goal under 34 yards)"
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who scored #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the only field goal under 34 yards)"
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [
                    6,
                    7,
                    8
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "Who",
                "scored",
                "the",
                "only",
                "field",
                "goal",
                "under",
                "34",
                "yards",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [
                    2
                ],
                [
                    4,
                    8
                ],
                [
                    7
                ],
                [
                    6
                ],
                [
                    5
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    8
                ],
                [
                    1
                ],
                [
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [
                    6,
                    7
                ],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    8
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1944_5cf474e2-7c03-4b2c-94dc-ae8ab32a8229",
        "question_text": "Which age group is smaller: 45 to 64 or 18 to 24?",
        "split": "train",
        "decomposition": "return size of the  45 to 64 age group ;return size of the  18 to 24 age group ;return which is smaller of #1 ,  #2",
        "program": [
            "SELECT['size of the 45 to 64 age group']",
            "SELECT['size of the 18 to 24 age group']",
            "COMPARISON['min', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "size of the 45 to 64 age group"
            ],
            [
                "SELECT",
                "size of the 18 to 24 age group"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(size of the 45 to 64 age group)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(size of the 18 to 24 age group)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(size of the 45 to 64 age group)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(size of the 18 to 24 age group)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    9
                ],
                [
                    6,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    11
                ],
                [
                    12,
                    13
                ]
            ],
            "question_tokens": [
                "Which",
                "age",
                "group",
                "is",
                "smaller",
                ":",
                "45",
                "to",
                "64",
                "or",
                "18",
                "to",
                "24",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [],
                [
                    6
                ],
                [
                    7,
                    8
                ],
                [],
                [
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    9
                ],
                [
                    1,
                    2,
                    3,
                    4,
                    5,
                    10
                ],
                [
                    6
                ],
                [
                    7
                ],
                [
                    8
                ],
                [],
                [
                    11
                ],
                [
                    12,
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    12
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    12
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2916_0c31dadb-3def-4886-b5ef-d05a3f666876",
        "question_text": "Which team scored fewer touchdowns in the first and second quarters?",
        "split": "train",
        "decomposition": "return teams ;return #1 that scored fewer touchdowns in  the  first and  second quarters",
        "program": [
            "SELECT['teams']",
            "FILTER['#1', 'that scored fewer touchdowns in the first and second quarters']"
        ],
        "nested_expression": [
            "FILTER",
            [
                "SELECT",
                "teams"
            ],
            "that scored fewer touchdowns in the first and second quarters"
        ],
        "typed_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(teams)"
            ],
            "GET_QUESTION_SPAN(that scored fewer touchdowns in the first and second quarters)"
        ],
        "drop_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(teams)"
            ],
            "GET_QUESTION_SPAN(that scored fewer touchdowns in the first and second quarters)"
        ],
        "operators": [
            "select",
            "filter"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    7,
                    9,
                    10
                ],
                [
                    6
                ],
                [
                    8
                ],
                [
                    11
                ]
            ],
            "question_tokens": [
                "Which",
                "team",
                "scored",
                "fewer",
                "touchdowns",
                "in",
                "the",
                "first",
                "and",
                "second",
                "quarters",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    4,
                    10
                ],
                [
                    3
                ],
                [],
                [
                    5,
                    6,
                    7
                ],
                [
                    8
                ],
                [
                    9
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    10
                ],
                [
                    5,
                    6,
                    7,
                    9
                ],
                [],
                [
                    8
                ],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    10
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1831_36214227-9dc6-4a68-898e-c530bfcda769",
        "question_text": "How many points were scored at the half?",
        "split": "train",
        "decomposition": "return points that were scored at the  half ;return the  sum of #1",
        "program": [
            "SELECT['points that were scored at the half']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "points that were scored at the half"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(points that were scored at the half)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "SELECT",
                "GET_QUESTION_SPAN(points that were scored at the half)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    4,
                    5,
                    6
                ],
                [
                    7,
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "points",
                "were",
                "scored",
                "at",
                "the",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    4
                ],
                [],
                [
                    5,
                    6
                ],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3
                ],
                [],
                [
                    4,
                    6
                ],
                [
                    5
                ],
                [
                    7,
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    7
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_6_19301e01-666a-4f4d-a4da-d2ebb7f7d86f",
        "question_text": "How many months was it since the cardinals and the Raiders last played each other?",
        "split": "train",
        "decomposition": "return months that it was  since the  cardinals and  the Raiders last played each other ;return the  number of  #1",
        "program": [
            "SELECT['months that it was since the cardinals and the Raiders last played each other']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "months that it was since the cardinals and the Raiders last played each other"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(months that it was since the cardinals and the Raiders last played each other)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "SELECT",
                "GET_QUESTION_SPAN(months that it was since the cardinals and the Raiders last played each other)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4,
                    8
                ],
                [
                    3,
                    5,
                    6,
                    7,
                    9,
                    10,
                    12,
                    14
                ],
                [
                    11,
                    13,
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "months",
                "was",
                "it",
                "since",
                "the",
                "cardinals",
                "and",
                "the",
                "Raiders",
                "last",
                "played",
                "each",
                "other",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1,
                    3
                ],
                [
                    2,
                    4,
                    8
                ],
                [
                    5
                ],
                [
                    6,
                    7,
                    9,
                    10,
                    12
                ],
                [
                    11,
                    13
                ],
                [],
                [
                    14,
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    4,
                    14
                ],
                [
                    3,
                    5,
                    8
                ],
                [
                    6,
                    7,
                    9,
                    10,
                    12,
                    13
                ],
                [
                    11
                ],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    14
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    14
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    14
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_785_f9673ead-b06d-41a5-97e5-a7900d95d37e",
        "question_text": "How many TD passes did Roethlisberger complete in the first quarter?",
        "split": "train",
        "decomposition": "return TD passes of  Roethlisberger in  the first quarter ;return the number of  #1",
        "program": [
            "SELECT['TD passes of Roethlisberger in the first quarter']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "TD passes of Roethlisberger in the first quarter"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(TD passes of Roethlisberger in the first quarter)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(TD passes of Roethlisberger)"
                ],
                "GET_QUESTION_SPAN(in the first quarter)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    6
                ],
                [
                    7,
                    9,
                    10
                ],
                [
                    5,
                    8
                ],
                [],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "TD",
                "passes",
                "did",
                "Roethlisberger",
                "complete",
                "in",
                "the",
                "first",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    4,
                    10
                ],
                [],
                [],
                [
                    5,
                    7
                ],
                [
                    6
                ],
                [
                    9
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    4,
                    6
                ],
                [],
                [
                    7,
                    9,
                    10
                ],
                [],
                [],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1575_272aa8cd-5554-4aea-9d0d-86552fc8ddcc",
        "question_text": "How many U.S. Marines and armed Navy sailors total participate in the seizure of the Veracruz waterfront?",
        "split": "train",
        "decomposition": "return U.S. Marines who  participate in  the  seizure of the Veracruz waterfront ;return armed Navy sailors who  participate in  the  seizure of the Veracruz waterfront ;return the  number of  #1 ;return the  number of  #2 ;return the  sum of #3 and  #4",
        "program": [
            "SELECT['U.S. Marines who participate in the seizure of the Veracruz waterfront']",
            "SELECT['armed Navy sailors who participate in the seizure of the Veracruz waterfront']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['sum', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "U.S. Marines who participate in the seizure of the Veracruz waterfront"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "armed Navy sailors who participate in the seizure of the Veracruz waterfront"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(U.S. Marines who participate in the seizure of the Veracruz waterfront)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(armed Navy sailors who participate in the seizure of the Veracruz waterfront)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(U.S. Marines who participate in the seizure of the Veracruz waterfront)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(armed Navy sailors who participate in the seizure of the Veracruz waterfront)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    3,
                    4,
                    6,
                    8
                ],
                [
                    1,
                    2,
                    7
                ],
                [
                    5,
                    9,
                    10
                ],
                [],
                [],
                [
                    11,
                    12,
                    13,
                    14,
                    15
                ],
                [
                    16,
                    17
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "U.S.",
                "Marines",
                "and",
                "armed",
                "Navy",
                "sailors",
                "total",
                "participate",
                "in",
                "the",
                "seizure",
                "of",
                "the",
                "Veracruz",
                "waterfront",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    4,
                    8
                ],
                [
                    2,
                    3
                ],
                [],
                [
                    5
                ],
                [],
                [
                    6,
                    9
                ],
                [
                    7
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    12
                ],
                [
                    15
                ],
                [
                    16
                ],
                [
                    17
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    4,
                    6,
                    8
                ],
                [
                    3
                ],
                [
                    2,
                    7
                ],
                [
                    5,
                    9
                ],
                [],
                [],
                [],
                [],
                [
                    12
                ],
                [
                    15,
                    16
                ],
                [
                    17
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    3
                ],
                [
                    2,
                    7
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    16
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    16
                ],
                [
                    11,
                    16
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    16
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    16
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_845_94a6865f-e206-418f-a6cc-58412ff42685",
        "question_text": "How many 40+ yard field goals did Phil Dawson make?",
        "split": "train",
        "decomposition": "return yard of  field goals of Phil Dawson ;return #1 that are  40+ yard ;return the number of  #2",
        "program": [
            "SELECT['yard of field goals of Phil Dawson']",
            "FILTER['#1', 'that are 40+ yard']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "yard of field goals of Phil Dawson"
                ],
                "that are 40+ yard"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yard of field goals of Phil Dawson)"
                ],
                "GET_QUESTION_SPAN(that are 40+ yard)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_GT",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yard of field goals of Phil Dawson)"
                ],
                "GET_QUESTION_NUMBER(40+)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    7,
                    8
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [
                    11
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "40",
                "+",
                "yard",
                "field",
                "goals",
                "did",
                "Phil",
                "Dawson",
                "make",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [
                    7
                ],
                [
                    8
                ],
                [],
                [
                    9,
                    10
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    7,
                    8
                ],
                [
                    4,
                    5,
                    6,
                    9
                ],
                [
                    2,
                    3
                ],
                [],
                [],
                [
                    11
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_195_ab83e892-6b23-40b8-a3b2-8ce03d28d14b",
        "question_text": "How many more yards did Peyton Manning gain on his first touchdown when compared to Ron Dayne's first two touchdowns?",
        "split": "train",
        "decomposition": "return yards of the  first touchdown of  Peyton Manning ;return yards of the  first two touchdowns of  Ron Dayne ;return the  sum of #2 ;return the  difference of #1 and  #3",
        "program": [
            "SELECT['yards of the first touchdown of Peyton Manning']",
            "SELECT['yards of the first two touchdowns of Ron Dayne']",
            "AGGREGATE['sum', '#2']",
            "ARITHMETIC['difference', '#1', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "yards of the first touchdown of Peyton Manning"
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of the first two touchdowns of Ron Dayne"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of the first touchdown of Peyton Manning)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of the first two touchdowns of Ron Dayne)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of the first touchdown of Peyton Manning)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of the first two touchdowns of Ron Dayne)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    5,
                    9,
                    13,
                    14,
                    17
                ],
                [
                    12
                ],
                [
                    10,
                    11
                ],
                [
                    3,
                    4,
                    6,
                    7,
                    8,
                    15,
                    16,
                    19,
                    20
                ],
                [],
                [
                    18,
                    21
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "yards",
                "did",
                "Peyton",
                "Manning",
                "gain",
                "on",
                "his",
                "first",
                "touchdown",
                "when",
                "compared",
                "to",
                "Ron",
                "Dayne",
                "'s",
                "first",
                "two",
                "touchdowns",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [
                    4
                ],
                [
                    13
                ],
                [],
                [
                    5
                ],
                [
                    8,
                    10
                ],
                [
                    9
                ],
                [],
                [],
                [
                    3,
                    6,
                    7,
                    20
                ],
                [],
                [
                    12
                ],
                [
                    17,
                    18,
                    19
                ],
                [
                    15,
                    16
                ],
                [],
                [
                    21
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    5
                ],
                [
                    9,
                    13,
                    14,
                    17
                ],
                [],
                [],
                [],
                [
                    11
                ],
                [
                    3,
                    4,
                    6,
                    7,
                    8,
                    15,
                    16,
                    19,
                    20
                ],
                [],
                [],
                [
                    21
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    20
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    20
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    20
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    20
                ],
                [
                    15,
                    20
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    17
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    20,
                    20
                ],
                [
                    21,
                    21
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2476_5ed23982-a6b1-4e61-a86e-b171cbd75ff5",
        "question_text": "Who threw more incomplete passes, Montana or Esiason?",
        "split": "train",
        "decomposition": "return incomplete passes that Montana threw ;return incomplete passes that Esiason threw ;return the  number of  #1 ;return the  number of  #2 ;return which is more of #3 ,  #4",
        "program": [
            "SELECT['incomplete passes that Montana threw']",
            "SELECT['incomplete passes that Esiason threw']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "incomplete passes that Montana threw"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "incomplete passes that Esiason threw"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(incomplete passes that Montana threw)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(incomplete passes that Esiason threw)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(incomplete passes that Montana threw)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(incomplete passes that Esiason threw)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4,
                    5,
                    7
                ],
                [
                    3
                ],
                [],
                [
                    6
                ],
                [
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "Who",
                "threw",
                "more",
                "incomplete",
                "passes",
                ",",
                "Montana",
                "or",
                "Esiason",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    4
                ],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    5,
                    7
                ],
                [
                    1,
                    2,
                    4
                ],
                [],
                [],
                [],
                [
                    6
                ],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    8
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2545_7b9feead-e5a8-4a7b-b7ac-840e1ebeb149",
        "question_text": "Which gold medalists got a gold medal for three of the same years?",
        "split": "train",
        "decomposition": "return gold medalists ;return #1 that got a gold medal for three of the  same years",
        "program": [
            "SELECT['gold medalists']",
            "FILTER['#1', 'that got a gold medal for three of the same years']"
        ],
        "nested_expression": [
            "FILTER",
            [
                "SELECT",
                "gold medalists"
            ],
            "that got a gold medal for three of the same years"
        ],
        "typed_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(gold medalists)"
            ],
            "GET_QUESTION_SPAN(that got a gold medal for three of the same years)"
        ],
        "drop_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(gold medalists)"
            ],
            "GET_QUESTION_SPAN(that got a gold medal for three of the same years)"
        ],
        "operators": [
            "select",
            "filter"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    8
                ],
                [
                    4,
                    6,
                    7,
                    9,
                    10
                ],
                [
                    11
                ],
                [
                    13
                ]
            ],
            "question_tokens": [
                "Which",
                "gold",
                "medalists",
                "got",
                "a",
                "gold",
                "medal",
                "for",
                "three",
                "of",
                "the",
                "same",
                "years",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    5
                ],
                [
                    12
                ],
                [
                    3,
                    4,
                    6
                ],
                [
                    7,
                    8,
                    9
                ],
                [],
                [
                    10,
                    11
                ],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    3
                ],
                [
                    2,
                    8
                ],
                [
                    1,
                    5,
                    6,
                    10,
                    11
                ],
                [
                    4,
                    9
                ],
                [
                    7
                ],
                [],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    12
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    12
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1802_fac208a2-5081-49a4-8e15-6cf8cde1ee78",
        "question_text": "Which cost more, the Sikorsky CH-53E Super Stallion cost per flight hour in 2007 or V-22 total cost of ownership per hour in 2013?",
        "split": "dev",
        "decomposition": "return cost per  flight hour of the  Sikorsky CH-53E Super Stallion in  2007 ;return total cost of ownership per  hour of  the  V-22 in  2013 ;return which is the  highest of #1 ,  #2",
        "program": [
            "SELECT['cost per flight hour of the Sikorsky CH-53E Super Stallion in 2007']",
            "SELECT['total cost of ownership per hour of the V-22 in 2013']",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "cost per flight hour of the Sikorsky CH-53E Super Stallion in 2007"
            ],
            [
                "SELECT",
                "total cost of ownership per hour of the V-22 in 2013"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(cost per flight hour of the Sikorsky CH-53E Super Stallion in 2007)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(total cost of ownership per hour of the V-22 in 2013)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(cost per flight hour of the Sikorsky CH-53E Super Stallion in 2007)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(total cost of ownership per hour of the V-22 in 2013)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    6,
                    9,
                    15,
                    18
                ],
                [
                    4,
                    7,
                    8,
                    10,
                    11,
                    12,
                    13
                ],
                [
                    14,
                    16
                ],
                [
                    17,
                    19,
                    20,
                    21,
                    22,
                    23
                ],
                [
                    24,
                    25
                ]
            ],
            "question_tokens": [
                "Which",
                "cost",
                "more",
                ",",
                "the",
                "Sikorsky",
                "CH-53E",
                "Super",
                "Stallion",
                "cost",
                "per",
                "flight",
                "hour",
                "in",
                "2007",
                "or",
                "V-22",
                "total",
                "cost",
                "of",
                "ownership",
                "per",
                "hour",
                "in",
                "2013",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    9,
                    18
                ],
                [
                    5,
                    6,
                    7,
                    8
                ],
                [
                    10
                ],
                [
                    13
                ],
                [
                    11,
                    12,
                    14
                ],
                [
                    16,
                    17
                ],
                [
                    15,
                    20,
                    21
                ],
                [
                    19,
                    23
                ],
                [
                    22
                ],
                [
                    24,
                    25
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    3,
                    5,
                    15
                ],
                [
                    1,
                    2,
                    6,
                    8,
                    9,
                    18
                ],
                [
                    7,
                    10,
                    11,
                    13
                ],
                [
                    12,
                    14
                ],
                [],
                [
                    16,
                    20,
                    21,
                    23
                ],
                [
                    22
                ],
                [
                    24,
                    25
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    1,
                    24
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    12
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    22
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    22
                ],
                [
                    16,
                    18
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    19,
                    22
                ],
                [
                    19,
                    20
                ],
                [
                    20,
                    20
                ],
                [
                    21,
                    21
                ],
                [
                    21,
                    22
                ],
                [
                    22,
                    22
                ],
                [
                    23,
                    24
                ],
                [
                    23,
                    23
                ],
                [
                    24,
                    24
                ],
                [
                    25,
                    25
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1363_eb3d2a11-ad97-47b2-9765-ea09fedb503a",
        "question_text": "What event happened later, Ferdinand's death or the treaty of Wehlau?",
        "split": "train",
        "decomposition": "return when  was Ferdinand 's death ;return when  was the treaty of  Wehlau ;return which is  the highest of  #1 , #2",
        "program": [
            "SELECT[\"when was Ferdinand 's death\"]",
            "SELECT['when was the treaty of Wehlau']",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "when was Ferdinand 's death"
            ],
            [
                "SELECT",
                "when was the treaty of Wehlau"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was Ferdinand 's death)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the treaty of Wehlau)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was Ferdinand 's death)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the treaty of Wehlau)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    7,
                    8,
                    10
                ],
                [
                    5,
                    6
                ],
                [],
                [
                    9,
                    11
                ],
                [
                    12,
                    13
                ]
            ],
            "question_tokens": [
                "What",
                "event",
                "happened",
                "later",
                ",",
                "Ferdinand",
                "'s",
                "death",
                "or",
                "the",
                "treaty",
                "of",
                "Wehlau",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    7
                ],
                [],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [],
                [
                    8,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    4,
                    8
                ],
                [
                    2,
                    3,
                    7
                ],
                [
                    5,
                    6
                ],
                [],
                [],
                [
                    10
                ],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    3
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    12
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2242_a905adec-5db3-4eeb-a41f-5372943b11eb",
        "question_text": "How many more Egyptian migrants live in Canada compared to Italy?",
        "split": "train",
        "decomposition": "return how many Egyptian migrants live in  Canada ;return how many Egyptian migrants live in  Italy ;return difference of #1 and  #2",
        "program": [
            "SELECT['how many Egyptian migrants live in Canada']",
            "SELECT['how many Egyptian migrants live in Italy']",
            "ARITHMETIC['difference', '#1', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "how many Egyptian migrants live in Canada"
            ],
            [
                "SELECT",
                "how many Egyptian migrants live in Italy"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(how many Egyptian migrants live in Canada)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(how many Egyptian migrants live in Italy)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(how many Egyptian migrants live in Canada)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(how many Egyptian migrants live in Italy)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    6
                ],
                [],
                [
                    7,
                    8,
                    9
                ],
                [],
                [
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "Egyptian",
                "migrants",
                "live",
                "in",
                "Canada",
                "compared",
                "to",
                "Italy",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    4
                ],
                [],
                [
                    7
                ],
                [],
                [
                    5,
                    8
                ],
                [],
                [],
                [
                    9
                ],
                [],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [
                    3,
                    5
                ],
                [
                    4
                ],
                [],
                [],
                [],
                [
                    7,
                    8,
                    9
                ],
                [],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1987_ae2792f8-28b7-4366-8ba8-2ad826f0d940",
        "question_text": "how many yards longer was the longest field goal of the game compared to Mason Crosby's field goal?",
        "split": "train",
        "decomposition": "return yards of field goals in  the  game ;return the  longest of #1 ;return yards of the  field goal  of  Mason Crosby ;return the  difference of #2 and  #3",
        "program": [
            "SELECT['yards of field goals in the game']",
            "AGGREGATE['max', '#1']",
            "SELECT['yards of the field goal of Mason Crosby']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of field goals in the game"
                ]
            ],
            [
                "SELECT",
                "yards of the field goal of Mason Crosby"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals in the game)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of the field goal of Mason Crosby)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals in the game)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of the field goal of Mason Crosby)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1
                ],
                [
                    0
                ],
                [
                    2,
                    3,
                    4,
                    6,
                    7,
                    8,
                    16,
                    17,
                    18
                ],
                [
                    9
                ],
                [
                    11
                ],
                [
                    12,
                    13,
                    14
                ],
                [
                    15
                ],
                [
                    19
                ]
            ],
            "question_tokens": [
                "how",
                "many",
                "yards",
                "longer",
                "was",
                "the",
                "longest",
                "field",
                "goal",
                "of",
                "the",
                "game",
                "compared",
                "to",
                "Mason",
                "Crosby",
                "'s",
                "field",
                "goal",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    6,
                    7,
                    8,
                    18
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    12,
                    13
                ],
                [
                    14
                ],
                [
                    15
                ],
                [
                    16
                ],
                [],
                [],
                [
                    19
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    2,
                    4,
                    7,
                    8,
                    18
                ],
                [
                    6,
                    16,
                    17
                ],
                [],
                [],
                [
                    11
                ],
                [
                    14,
                    15
                ],
                [
                    12,
                    13
                ],
                [],
                [],
                [
                    19
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    18
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    18
                ],
                [
                    14,
                    18
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    16
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1474_85bb7e23-1834-4ded-b9b3-0bc9e2d291e3",
        "question_text": "How many yards was Steve Slaton's longest touchdown runin the first quarter?",
        "split": "train",
        "decomposition": "return yards of touchdown runs in  the  first quarter of  Steve Slaton ;return the  longest of #1",
        "program": [
            "SELECT['yards of touchdown runs in the first quarter of Steve Slaton']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "yards of touchdown runs in the first quarter of Steve Slaton"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdown runs in the first quarter of Steve Slaton)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdown runs in the first quarter of Steve Slaton)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    4
                ],
                [
                    2,
                    3,
                    5,
                    6,
                    7,
                    8,
                    9
                ],
                [
                    10
                ],
                [
                    11,
                    12,
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "Steve",
                "Slaton",
                "'s",
                "longest",
                "touchdown",
                "runin",
                "the",
                "first",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    4
                ],
                [
                    2,
                    3,
                    5,
                    6,
                    7,
                    8
                ],
                [],
                [],
                [
                    11
                ],
                [
                    9
                ],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    4
                ],
                [],
                [
                    2,
                    3,
                    5
                ],
                [
                    6,
                    7,
                    8,
                    9
                ],
                [],
                [],
                [
                    11,
                    12,
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    12
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    12
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2366_64aaa7f0-0d06-45c7-80ce-b322cc01d6c4",
        "question_text": "How many yards was the second longest field goal of the entire game?",
        "split": "train",
        "decomposition": "return yards of field goals of  the  entire game ;return the  second longest of #1",
        "program": [
            "SELECT['yards of field goals of the entire game']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "yards of field goals of the entire game"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals of the entire game)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals of the entire game)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    5,
                    6,
                    7,
                    8,
                    11
                ],
                [
                    4,
                    9,
                    10
                ],
                [
                    12,
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "the",
                "second",
                "longest",
                "field",
                "goal",
                "of",
                "the",
                "entire",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    5,
                    6,
                    7,
                    8
                ],
                [],
                [],
                [
                    9
                ],
                [],
                [
                    11,
                    12
                ],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    5,
                    8
                ],
                [
                    6,
                    7,
                    11
                ],
                [
                    9
                ],
                [],
                [
                    12,
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    12
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    12
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    12
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_781_a9ca22da-5169-48dc-9e73-7b54b1e9548c",
        "question_text": "How many years were between the 2 uprisings that Lord George Murray took part in?",
        "split": "train",
        "decomposition": "return the  2 uprisings that Lord George Murray took part in  ;return the  years of #1 ;return the  difference of #2",
        "program": [
            "SELECT['the 2 uprisings that Lord George Murray took part in']",
            "PROJECT['the years of #REF', '#1']",
            "PROJECT['the difference of #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "the difference of #REF",
            [
                "PROJECT",
                "the years of #REF",
                [
                    "SELECT",
                    "the 2 uprisings that Lord George Murray took part in"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the difference of #REF)",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(the years of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the 2 uprisings that Lord George Murray took part in)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Single_Event",
            [
                "SELECT",
                "GET_QUESTION_SPAN(were between the 2 uprisings that Lord George Murray took part in?)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    7
                ],
                [
                    3,
                    4,
                    5,
                    6,
                    10,
                    11,
                    12,
                    13,
                    14
                ],
                [
                    8,
                    9,
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "were",
                "between",
                "the",
                "2",
                "uprisings",
                "that",
                "Lord",
                "George",
                "Murray",
                "took",
                "part",
                "in",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    3
                ],
                [
                    1,
                    2
                ],
                [
                    4
                ],
                [
                    5,
                    6,
                    7,
                    8,
                    9,
                    12
                ],
                [
                    10,
                    13,
                    14
                ],
                [
                    11
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2,
                    4
                ],
                [],
                [
                    7,
                    13
                ],
                [
                    5,
                    6,
                    8,
                    12,
                    14
                ],
                [
                    9,
                    10,
                    11
                ],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    14
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    14
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    5,
                    14
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    14
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    14
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_842_1fb5c1da-dd5f-4caa-a9ae-25495ae8ea8c",
        "question_text": "How many touchdowns measured less than 15-yards in length?",
        "split": "train",
        "decomposition": "return lengths of touchdowns ;return #1 that are less than 15-yards ;return the  number of  #2",
        "program": [
            "SELECT['lengths of touchdowns']",
            "FILTER['#1', 'that are less than 15-yards']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "lengths of touchdowns"
                ],
                "that are less than 15-yards"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(lengths of touchdowns)"
                ],
                "GET_QUESTION_SPAN(that are less than 15-yards)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_LT",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(lengths of touchdowns)"
                ],
                "GET_QUESTION_NUMBER(15)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4,
                    5,
                    6
                ],
                [
                    7
                ],
                [
                    9
                ],
                [
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "touchdowns",
                "measured",
                "less",
                "than",
                "15-yards",
                "in",
                "length",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4,
                    5
                ],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    6,
                    8
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [
                    3,
                    4,
                    5,
                    6
                ],
                [
                    7
                ],
                [],
                [
                    9
                ],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1375_f68f034e-ecb7-4c78-aa61-c900d37a70b4",
        "question_text": "Whe did the Western Allies finnaly pushed over in Italy and what cities did they captured?",
        "split": "train",
        "decomposition": "return when  did the  Western Allies finnaly push over in  Italy ;return what  cities did the  Western Allies capture ;return #1 ,  #2",
        "program": [
            "SELECT['when did the Western Allies finnaly push over in Italy']",
            "SELECT['what cities did the Western Allies capture']",
            "UNION['#1', '#2']"
        ],
        "nested_expression": [
            "UNION",
            [
                "SELECT",
                "when did the Western Allies finnaly push over in Italy"
            ],
            [
                "SELECT",
                "what cities did the Western Allies capture"
            ]
        ],
        "typed_nested_expression": [
            "UNION",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did the Western Allies finnaly push over in Italy)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(what cities did the Western Allies capture)"
            ]
        ],
        "drop_nested_expression": [
            "UNION",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did the Western Allies finnaly push over in Italy)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(what cities did the Western Allies capture)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "union"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    3,
                    4,
                    5,
                    6,
                    10
                ],
                [
                    1,
                    2,
                    8
                ],
                [
                    7,
                    9
                ],
                [
                    11,
                    12,
                    13,
                    14
                ],
                [
                    15,
                    16
                ]
            ],
            "question_tokens": [
                "Whe",
                "did",
                "the",
                "Western",
                "Allies",
                "finnaly",
                "pushed",
                "over",
                "in",
                "Italy",
                "and",
                "what",
                "cities",
                "did",
                "they",
                "captured",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    1
                ],
                [
                    0,
                    3,
                    5,
                    6
                ],
                [
                    4
                ],
                [],
                [
                    7,
                    8
                ],
                [
                    9
                ],
                [
                    11,
                    12
                ],
                [
                    13,
                    14
                ],
                [],
                [
                    15
                ],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    1,
                    11,
                    12,
                    13
                ],
                [],
                [
                    0,
                    3,
                    4,
                    5,
                    6,
                    10
                ],
                [
                    8
                ],
                [
                    9
                ],
                [],
                [
                    14
                ],
                [
                    15
                ],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    1,
                    9
                ],
                [
                    2,
                    5
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    15
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_131_ded5dbb8-447f-4030-8704-78c8092301db",
        "question_text": "What happened first, Polin arriving in Constantinople or Polin back to Toulon?",
        "split": "dev",
        "decomposition": "return when  was Polin  arriving in  Constantinople ;return when  was Polin  back to Toulon ;return which happened first of  #1 , #2",
        "program": [
            "SELECT['when was Polin arriving in Constantinople']",
            "SELECT['when was Polin back to Toulon']",
            "COMPARISON['min', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "when was Polin arriving in Constantinople"
            ],
            [
                "SELECT",
                "when was Polin back to Toulon"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was Polin arriving in Constantinople)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was Polin back to Toulon)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was Polin arriving in Constantinople)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was Polin back to Toulon)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    8
                ],
                [
                    4,
                    6
                ],
                [
                    7
                ],
                [
                    9,
                    10,
                    11
                ],
                [
                    12,
                    13
                ]
            ],
            "question_tokens": [
                "What",
                "happened",
                "first",
                ",",
                "Polin",
                "arriving",
                "in",
                "Constantinople",
                "or",
                "Polin",
                "back",
                "to",
                "Toulon",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    4,
                    5
                ],
                [
                    6
                ],
                [
                    7
                ],
                [],
                [
                    8,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    3,
                    8
                ],
                [
                    1,
                    2,
                    5
                ],
                [
                    4,
                    6
                ],
                [
                    7
                ],
                [],
                [
                    9
                ],
                [
                    10,
                    11,
                    12
                ],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    12
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    12
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    12
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_810_756e8258-0962-45b7-a13c-25331376998e",
        "question_text": "How many people in total died from smallpox from both Mexico City and Puebla?",
        "split": "train",
        "decomposition": "return people that died from  smallpox in  Mexico City ;return people that died from  smallpox in  Puebla ;return number of  #1 ;return number of  #2 ;return sum of #3 and  #4",
        "program": [
            "SELECT['people that died from smallpox in Mexico City']",
            "SELECT['people that died from smallpox in Puebla']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['sum', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "people that died from smallpox in Mexico City"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "people that died from smallpox in Puebla"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(people that died from smallpox in Mexico City)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(people that died from smallpox in Puebla)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(people that died from smallpox in Mexico City)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(people that died from smallpox in Puebla)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    4,
                    12
                ],
                [
                    1
                ],
                [
                    3,
                    6,
                    8
                ],
                [
                    5,
                    7
                ],
                [
                    10
                ],
                [
                    9,
                    11
                ],
                [
                    13,
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "people",
                "in",
                "total",
                "died",
                "from",
                "smallpox",
                "from",
                "both",
                "Mexico",
                "City",
                "and",
                "Puebla",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    4,
                    12
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [
                    10
                ],
                [
                    13
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    4,
                    12
                ],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [
                    9
                ],
                [
                    10
                ],
                [],
                [
                    11,
                    13
                ],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    13
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    13
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    13
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2999_e7df7066-cbf9-48f6-bf44-8bbc936f07e7",
        "question_text": "How many of the population in 1791 were not white or slaves?",
        "split": "train",
        "decomposition": "return population in  1791 ;return #1 that were white ;return #1 that were slaves ;return number of  #1 ;return number of  #2 ;return number of  #3 ;return sum of #5 and  #6 ;return difference of #4 and  #7",
        "program": [
            "SELECT['population in 1791']",
            "FILTER['#1', 'that were white']",
            "FILTER['#1', 'that were slaves']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "AGGREGATE['count', '#3']",
            "ARITHMETIC['sum', '#5', '#6']",
            "ARITHMETIC['difference', '#4', '#7']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "population in 1791"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "FILTER",
                        [
                            "SELECT",
                            "population in 1791"
                        ],
                        "that were white"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "FILTER",
                        [
                            "SELECT",
                            "population in 1791"
                        ],
                        "that were slaves"
                    ]
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(population in 1791)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "FILTER",
                        [
                            "SELECT",
                            "GET_QUESTION_SPAN(population in 1791)"
                        ],
                        "GET_QUESTION_SPAN(that were white)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "FILTER",
                        [
                            "SELECT",
                            "GET_QUESTION_SPAN(population in 1791)"
                        ],
                        "GET_QUESTION_SPAN(that were slaves)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(population in 1791)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "FILTER",
                        [
                            "SELECT",
                            "GET_QUESTION_SPAN(population in 1791)"
                        ],
                        "GET_QUESTION_SPAN(that were white)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "FILTER",
                        [
                            "SELECT",
                            "GET_QUESTION_SPAN(population in 1791)"
                        ],
                        "GET_QUESTION_SPAN(that were slaves)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "filter",
            "filter",
            "aggregate",
            "aggregate",
            "aggregate",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    7,
                    9
                ],
                [],
                [
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    8
                ],
                [],
                [
                    10,
                    11
                ],
                [
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "of",
                "the",
                "population",
                "in",
                "1791",
                "were",
                "not",
                "white",
                "or",
                "slaves",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [],
                [
                    1
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    8
                ],
                [],
                [],
                [],
                [
                    9
                ],
                [],
                [
                    11
                ],
                [],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    5
                ],
                [],
                [],
                [
                    6
                ],
                [],
                [
                    9,
                    11
                ],
                [],
                [
                    8
                ],
                [],
                [],
                [],
                [],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    4
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2317_1b24d273-bae9-41cc-a8f6-09edfbe5385b",
        "question_text": "Which kicker had more total yards?",
        "split": "train",
        "decomposition": "return kickers ;return yards of #1 ;return sum of #2 for each #1 ;return #1 where #3 is highest",
        "program": [
            "SELECT['kickers']",
            "PROJECT['yards of #REF', '#1']",
            "GROUP['sum', '#2', '#1']",
            "SUPERLATIVE['max', '#1', '#3']"
        ],
        "nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "kickers"
            ],
            [
                "GROUP_sum",
                [
                    "PROJECT",
                    "yards of #REF",
                    [
                        "SELECT",
                        "kickers"
                    ]
                ],
                [
                    "SELECT",
                    "kickers"
                ]
            ]
        ],
        "typed_nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(kickers)"
            ],
            [
                "PARTIAL_GROUP_sum",
                [
                    "PARTIAL_SELECT_NUM",
                    "GET_QUESTION_SPAN(yards of #REF)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(kickers)"
            ],
            [
                "PARTIAL_GROUP_sum",
                [
                    "PARTIAL_SELECT_NUM",
                    "GET_QUESTION_SPAN(yards of #REF)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "superlative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [],
                [
                    4
                ],
                [
                    5
                ],
                [
                    6
                ]
            ],
            "question_tokens": [
                "Which",
                "kicker",
                "had",
                "more",
                "total",
                "yards",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    4,
                    5
                ],
                [],
                [],
                [],
                [
                    6
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0
                ],
                [
                    1,
                    2,
                    3
                ],
                [],
                [],
                [],
                [],
                [
                    4
                ],
                [
                    5
                ],
                [],
                [
                    6
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_759_3fa54cfb-286e-4ca9-92dd-11c07d3705f3",
        "question_text": "How many yards longer was Travis Henry's first touchdown compared to his second?",
        "split": "train",
        "decomposition": "return yards of touchdowns of  Travis Henry ;return first of #1 ;return second of #1 ;return difference of #2 and  #3",
        "program": [
            "SELECT['yards of touchdowns of Travis Henry']",
            "AGGREGATE['min', '#1']",
            "PROJECT['second of #REF', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of touchdowns of Travis Henry"
                ]
            ],
            [
                "PROJECT",
                "second of #REF",
                [
                    "SELECT",
                    "yards of touchdowns of Travis Henry"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdowns of Travis Henry)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(second of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdowns of Travis Henry)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdowns of Travis Henry)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(second of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdowns of Travis Henry)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [
                    5
                ],
                [
                    2,
                    4,
                    7,
                    8,
                    9,
                    12,
                    13
                ],
                [
                    6
                ],
                [],
                [
                    10,
                    11
                ],
                [],
                [],
                [],
                [
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "Travis",
                "Henry",
                "'s",
                "first",
                "touchdown",
                "compared",
                "to",
                "his",
                "second",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [],
                [],
                [],
                [
                    2,
                    4,
                    7,
                    9,
                    12
                ],
                [],
                [
                    6
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    10
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    13
                ],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [
                    5
                ],
                [
                    2,
                    4,
                    7,
                    13
                ],
                [
                    8,
                    12
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [
                    10,
                    11
                ],
                [],
                [
                    9
                ],
                [],
                [],
                [],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    13
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2894_702d8cc9-fba4-4c76-9746-7c3ac62ed0ca",
        "question_text": "How many more French were there than Dutch by percent?",
        "split": "train",
        "decomposition": "return the  percent of the French ;return the  percent of the Dutch ;return the  difference of #1 and  #2",
        "program": [
            "SELECT['the percent of the French']",
            "SELECT['the percent of the Dutch']",
            "ARITHMETIC['difference', '#1', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "the percent of the French"
            ],
            [
                "SELECT",
                "the percent of the Dutch"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the percent of the French)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the percent of the Dutch)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the percent of the French)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the percent of the Dutch)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    9
                ],
                [
                    4
                ],
                [],
                [
                    3
                ],
                [
                    5,
                    6
                ],
                [
                    7
                ],
                [
                    8,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "French",
                "were",
                "there",
                "than",
                "Dutch",
                "by",
                "percent",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [
                    5,
                    6,
                    9
                ],
                [],
                [
                    7
                ],
                [
                    8
                ],
                [],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    9
                ],
                [
                    2,
                    5
                ],
                [
                    4
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    6
                ],
                [
                    7
                ],
                [
                    8
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_450_acae0680-62ad-4101-97fd-58d3666a2e8c",
        "question_text": "Were more field goals kicked in the first or second half of the game?",
        "split": "train",
        "decomposition": "return field goals kicked in  the  first half of the game ;return field goals kicked in  the  second half of the game ;return the  number of  #1 ;return the  number of  #2 ;return which is more of #3 ,  #4",
        "program": [
            "SELECT['field goals kicked in the first half of the game']",
            "SELECT['field goals kicked in the second half of the game']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals kicked in the first half of the game"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals kicked in the second half of the game"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals kicked in the first half of the game)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals kicked in the second half of the game)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals kicked in the first half of the game)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals kicked in the second half of the game)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    8
                ],
                [
                    4,
                    5,
                    6
                ],
                [
                    7,
                    9,
                    10
                ],
                [
                    11,
                    12
                ],
                [
                    13,
                    14
                ]
            ],
            "question_tokens": [
                "Were",
                "more",
                "field",
                "goals",
                "kicked",
                "in",
                "the",
                "first",
                "or",
                "second",
                "half",
                "of",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    4
                ],
                [
                    5,
                    7
                ],
                [
                    9
                ],
                [],
                [
                    8
                ],
                [
                    11,
                    12
                ],
                [
                    10,
                    13
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    4
                ],
                [
                    0,
                    7,
                    8
                ],
                [
                    1,
                    2,
                    3
                ],
                [
                    5
                ],
                [],
                [
                    9,
                    10
                ],
                [],
                [],
                [
                    13,
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    13
                ],
                [
                    5,
                    13
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    6,
                    13
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_3644_d73b2277-82c9-4866-b9fc-a11b1af61d5c",
        "question_text": "How many years old was Michael Weyl when his mother died?",
        "split": "train",
        "decomposition": "return How old was  Michael Weyl when  his mother died",
        "program": [
            "SELECT['How old was Michael Weyl when his mother died']"
        ],
        "nested_expression": [
            "SELECT",
            "How old was Michael Weyl when his mother died"
        ],
        "typed_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(How old was Michael Weyl when his mother died)"
        ],
        "drop_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(How old was Michael Weyl when his mother died)"
        ],
        "operators": [
            "select"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8
                ],
                [
                    9,
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "old",
                "was",
                "Michael",
                "Weyl",
                "when",
                "his",
                "mother",
                "died",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1,
                    2,
                    4
                ],
                [
                    3,
                    5,
                    6,
                    7
                ],
                [
                    8,
                    9,
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    3,
                    4
                ],
                [
                    5,
                    6,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    9,
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_64_b1ba1468-b345-4f73-86dd-df9993efcfd3",
        "question_text": "How many years after they went to Iraq was the 24th Infantry re-flagged ?",
        "split": "train",
        "decomposition": "return what  year did they go to Iraq ;return what  year was  the  24th Infantry re-flagged ;return the  difference of #2 and  #1",
        "program": [
            "SELECT['what year did they go to Iraq']",
            "SELECT['what year was the 24th Infantry re-flagged']",
            "ARITHMETIC['difference', '#2', '#1']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "what year was the 24th Infantry re-flagged"
            ],
            [
                "SELECT",
                "what year did they go to Iraq"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(what year was the 24th Infantry re-flagged)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(what year did they go to Iraq)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Two_Events",
            [
                "SELECT",
                "GET_QUESTION_SPAN(what year was the 24th Infantry re-flagged)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(what year did they go to Iraq)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4
                ],
                [
                    5,
                    6,
                    8
                ],
                [
                    7
                ],
                [
                    9,
                    10,
                    11,
                    12,
                    13
                ],
                [
                    14,
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "after",
                "they",
                "went",
                "to",
                "Iraq",
                "was",
                "the",
                "24th",
                "Infantry",
                "re",
                "-",
                "flagged",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3
                ],
                [],
                [
                    4,
                    5
                ],
                [
                    6
                ],
                [
                    7
                ],
                [
                    8
                ],
                [
                    10,
                    11
                ],
                [
                    12,
                    13
                ],
                [
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    5,
                    6
                ],
                [
                    7
                ],
                [],
                [
                    10,
                    11,
                    12,
                    13
                ],
                [],
                [
                    14,
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    7
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    7
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    14
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    14
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3432_c5f18cb7-585a-4c4e-b120-d3bba96bb04e",
        "question_text": "How many field goals longer than 30-yards did Matt Prater kick?",
        "split": "train",
        "decomposition": "return field goals that Matt Prater did kick ;return #1 that are longer than 30-yards ;return number of  #2",
        "program": [
            "SELECT['field goals that Matt Prater did kick']",
            "FILTER['#1', 'that are longer than 30-yards']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "field goals that Matt Prater did kick"
                ],
                "that are longer than 30-yards"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that Matt Prater did kick)"
                ],
                "GET_QUESTION_SPAN(that are longer than 30-yards)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_GT",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that Matt Prater did kick)"
                ],
                "GET_QUESTION_NUMBER(30)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    7
                ],
                [
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [
                    11
                ],
                [
                    6,
                    8,
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "field",
                "goals",
                "longer",
                "than",
                "30-yards",
                "did",
                "Matt",
                "Prater",
                "kick",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [
                    7
                ],
                [],
                [],
                [
                    6,
                    8,
                    9,
                    10
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    7,
                    8
                ],
                [
                    2,
                    3
                ],
                [
                    4,
                    5,
                    6,
                    9
                ],
                [],
                [],
                [
                    11
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_409_b95e8992-0bf2-44bb-869b-0868fe2dcf67",
        "question_text": "How many years did the peace of Vordingborg 1435 last until Eric was dethroned in 1439?",
        "split": "train",
        "decomposition": "return years when  the  peace of Vordingborg 1435 last ;return the  lowest of #1 ;return year when  Eric was  dethroned ;return the  difference of #3 and  #2",
        "program": [
            "SELECT['years when the peace of Vordingborg 1435 last']",
            "AGGREGATE['min', '#1']",
            "SELECT['year when Eric was dethroned']",
            "ARITHMETIC['difference', '#3', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "year when Eric was dethroned"
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "years when the peace of Vordingborg 1435 last"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year when Eric was dethroned)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(years when the peace of Vordingborg 1435 last)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Two_Events",
            [
                "SELECT",
                "GET_QUESTION_SPAN(year when Eric was dethroned)"
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(years when the peace of Vordingborg 1435 last)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    5,
                    10
                ],
                [
                    3,
                    4,
                    6
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    11,
                    12,
                    13,
                    15
                ],
                [
                    14
                ],
                [
                    16
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "did",
                "the",
                "peace",
                "of",
                "Vordingborg",
                "1435",
                "last",
                "until",
                "Eric",
                "was",
                "dethroned",
                "in",
                "1439",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3
                ],
                [],
                [
                    5
                ],
                [
                    7,
                    9
                ],
                [],
                [
                    8,
                    12
                ],
                [],
                [
                    10
                ],
                [
                    14
                ],
                [
                    11,
                    13
                ],
                [
                    15
                ],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    5,
                    10
                ],
                [],
                [
                    9
                ],
                [
                    7
                ],
                [
                    8,
                    12
                ],
                [
                    11,
                    13
                ],
                [],
                [
                    15
                ],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    15
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    15
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    15
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    15
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    15
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    15
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_2380_c94cef85-f269-43cf-8279-14892239dedf",
        "question_text": "How many points did the Ravens score in their two highest scoring games combined?",
        "split": "dev",
        "decomposition": "return points of the  Ravens in  their games ;return the  two highest of #1 ;return the  sum of #2",
        "program": [
            "SELECT['points of the Ravens in their games']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['sum', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "points of the Ravens in their games"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points of the Ravens in their games)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points of the Ravens in their games)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    13
                ],
                [
                    9,
                    10,
                    11
                ],
                [
                    2,
                    4,
                    6,
                    7,
                    8
                ],
                [
                    5,
                    12,
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "points",
                "did",
                "the",
                "Ravens",
                "score",
                "in",
                "their",
                "two",
                "highest",
                "scoring",
                "games",
                "combined",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    3,
                    13
                ],
                [
                    2
                ],
                [
                    9
                ],
                [
                    12
                ],
                [
                    6
                ],
                [
                    5,
                    7,
                    8,
                    10,
                    11
                ],
                [],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    12
                ],
                [
                    3,
                    13
                ],
                [
                    11
                ],
                [
                    9,
                    10
                ],
                [
                    5,
                    6,
                    7,
                    8
                ],
                [],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    13
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    13
                ],
                [
                    8,
                    12
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_134_ca998f04-63d7-4d30-960f-0b2c34ef344e",
        "question_text": "How many more field goals over 30 yards did Tynes kick than Elam?",
        "split": "train",
        "decomposition": "return yards of field goals of  Tynes that are over 30 yard ;return yards of field goals of  Elam that are over 30 yard ;return the  number of  #1 ;return the  number of  #2 ;return which is more of #3 ,  #4",
        "program": [
            "SELECT['yards of field goals of Tynes that are over 30 yard']",
            "SELECT['yards of field goals of Elam that are over 30 yard']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "yards of field goals of Tynes that are over 30 yard"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "yards of field goals of Elam that are over 30 yard"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals of Tynes that are over 30 yard)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals of Elam that are over 30 yard)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals of Tynes that are over 30 yard)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals of Elam that are over 30 yard)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    2,
                    3,
                    4
                ],
                [
                    7
                ],
                [
                    5,
                    6,
                    10
                ],
                [
                    8,
                    9,
                    12
                ],
                [
                    11,
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "field",
                "goals",
                "over",
                "30",
                "yards",
                "did",
                "Tynes",
                "kick",
                "than",
                "Elam",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4
                ],
                [],
                [],
                [
                    5,
                    6
                ],
                [],
                [
                    7,
                    8
                ],
                [
                    9
                ],
                [
                    10
                ],
                [
                    11,
                    12
                ],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    7,
                    8
                ],
                [],
                [
                    2,
                    3,
                    4
                ],
                [
                    6
                ],
                [],
                [],
                [
                    9,
                    12
                ],
                [
                    10
                ],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    12
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_2170_a058bdd9-a1e8-444d-9899-efc9ceb72bc1",
        "question_text": "What ancestries were self-identified by fewer than 7% of the population?",
        "split": "dev",
        "decomposition": "return self-identified ancestries ;return % of population of  #1 ;return #1 where #2 is less than 7",
        "program": [
            "SELECT['self-identified ancestries']",
            "PROJECT['% of population of #REF', '#1']",
            "COMPARATIVE['#1', '#2', 'is less than 7']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "self-identified ancestries"
            ],
            [
                "PROJECT",
                "% of population of #REF",
                [
                    "SELECT",
                    "self-identified ancestries"
                ]
            ],
            "is less than 7"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(self-identified ancestries)"
            ],
            [
                "PARTIAL_GROUP_sum",
                [
                    "PARTIAL_SELECT_NUM",
                    "GET_QUESTION_SPAN(% of population of #REF)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is less than 7)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(self-identified ancestries)"
            ],
            [
                "PARTIAL_SELECT_SINGLE_NUM",
                "GET_QUESTION_SPAN(% of population of #REF)"
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is less than 7)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [
                    2,
                    4,
                    5
                ],
                [
                    6
                ],
                [
                    7
                ],
                [
                    9
                ],
                [
                    8,
                    10,
                    11,
                    13
                ],
                [
                    14
                ]
            ],
            "question_tokens": [
                "What",
                "ancestries",
                "were",
                "self",
                "-",
                "identified",
                "by",
                "fewer",
                "than",
                "7",
                "%",
                "of",
                "the",
                "population",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    5
                ],
                [
                    4
                ],
                [],
                [
                    7
                ],
                [],
                [
                    6,
                    9
                ],
                [],
                [],
                [
                    8,
                    10,
                    11,
                    13
                ],
                [],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    6,
                    9
                ],
                [],
                [
                    7
                ],
                [
                    10,
                    11
                ],
                [],
                [
                    8
                ],
                [
                    13,
                    14
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    13
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    13
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    13
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    7,
                    9
                ],
                [
                    7,
                    13
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1245_1d66e259-0226-4cb1-8de3-44bf27071101",
        "question_text": "Does Ireland rank higher for top 500 universities per capita or for The Programme for International Student Assessment's reading score?",
        "split": "train",
        "decomposition": "return rank of  Ireland for   top 500 universities per capita ;return rank of  Ireland for   the Programme for International Student Assessment 's reading score ;return which is  higher of  #1 , #2",
        "program": [
            "SELECT['rank of Ireland for top 500 universities per capita']",
            "SELECT[\"rank of Ireland for the Programme for International Student Assessment 's reading score\"]",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "rank of Ireland for top 500 universities per capita"
            ],
            [
                "SELECT",
                "rank of Ireland for the Programme for International Student Assessment 's reading score"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(rank of Ireland for top 500 universities per capita)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(rank of Ireland for the Programme for International Student Assessment 's reading score)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(rank of Ireland for top 500 universities per capita)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(rank of Ireland for the Programme for International Student Assessment 's reading score)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    7,
                    10,
                    19
                ],
                [
                    4,
                    5,
                    8,
                    11,
                    12
                ],
                [
                    6,
                    9,
                    13,
                    15
                ],
                [
                    14,
                    16,
                    17,
                    18,
                    20
                ],
                [
                    21
                ]
            ],
            "question_tokens": [
                "Does",
                "Ireland",
                "rank",
                "higher",
                "for",
                "top",
                "500",
                "universities",
                "per",
                "capita",
                "or",
                "for",
                "The",
                "Programme",
                "for",
                "International",
                "Student",
                "Assessment",
                "'s",
                "reading",
                "score",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    4,
                    5,
                    7,
                    8
                ],
                [
                    9,
                    10,
                    11
                ],
                [
                    6,
                    13
                ],
                [
                    12
                ],
                [
                    14
                ],
                [
                    18,
                    20
                ],
                [
                    15,
                    16,
                    17,
                    19
                ],
                [
                    21
                ]
            ],
            "fastalign.grammar": [
                [
                    5
                ],
                [
                    1,
                    2,
                    10
                ],
                [
                    0,
                    3,
                    7,
                    19
                ],
                [
                    8,
                    9,
                    12
                ],
                [
                    4,
                    11,
                    13,
                    14
                ],
                [
                    6,
                    15
                ],
                [
                    16,
                    18,
                    20
                ],
                [
                    17
                ],
                [
                    21
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    20
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    20
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    20
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    20
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    20
                ],
                [
                    15,
                    18
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    20,
                    20
                ],
                [
                    21,
                    21
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2217_f21451e7-984e-4d38-85d0-9195cdfdc83a",
        "question_text": "How many more passing yards did Newton have than Rodgers?",
        "split": "train",
        "decomposition": "return yards of passing of  Newton ;return yards of passing of  Rodgers ;return sum of #1 ;return sum of #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['yards of passing of Newton']",
            "SELECT['yards of passing of Rodgers']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of passing of Newton"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of passing of Rodgers"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of passing of Newton)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of passing of Rodgers)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of passing of Newton)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of passing of Rodgers)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    8
                ],
                [
                    3,
                    4
                ],
                [],
                [],
                [
                    5,
                    6,
                    7
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "passing",
                "yards",
                "did",
                "Newton",
                "have",
                "than",
                "Rodgers",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    6
                ],
                [
                    4,
                    5
                ],
                [],
                [],
                [
                    9
                ],
                [],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [
                    3,
                    4,
                    5
                ],
                [],
                [],
                [],
                [
                    7,
                    8
                ],
                [
                    6
                ],
                [],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_581_63768a9e-025f-49e8-84b0-ae868a8219c5",
        "question_text": "Which player threw more touchdown passes, Jon Kitna or Josh McCown?",
        "split": "train",
        "decomposition": "return touchdown passes that Jon Kitna threw ;return touchdown passes that Josh McCown threw ;return number of  #1 ;return number of  #2 ;return which is more of #3 ,  #4",
        "program": [
            "SELECT['touchdown passes that Jon Kitna threw']",
            "SELECT['touchdown passes that Josh McCown threw']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdown passes that Jon Kitna threw"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdown passes that Josh McCown threw"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown passes that Jon Kitna threw)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown passes that Josh McCown threw)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown passes that Jon Kitna threw)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown passes that Josh McCown threw)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    9
                ],
                [],
                [],
                [
                    7,
                    8,
                    10
                ],
                [
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "threw",
                "more",
                "touchdown",
                "passes",
                ",",
                "Jon",
                "Kitna",
                "or",
                "Josh",
                "McCown",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    5
                ],
                [],
                [
                    6
                ],
                [
                    4,
                    7
                ],
                [
                    8
                ],
                [],
                [
                    9
                ],
                [
                    10
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    6,
                    9
                ],
                [
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [
                    7,
                    8
                ],
                [],
                [
                    10
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    11
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1249_aa66098c-6a91-4812-a2cd-9edc23448fe8",
        "question_text": "How many more field goals did Bryant kick than Mare?",
        "split": "train",
        "decomposition": "return field goals of Bryant ;return field goals of Mare ;return the  number of  #1 ;return the  number of  #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['field goals of Bryant']",
            "SELECT['field goals of Mare']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals of Bryant"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals of Mare"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Bryant)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Mare)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Bryant)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Mare)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    8
                ],
                [
                    3,
                    4
                ],
                [],
                [
                    6
                ],
                [
                    5,
                    7
                ],
                [],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "field",
                "goals",
                "did",
                "Bryant",
                "kick",
                "than",
                "Mare",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    4,
                    5,
                    7
                ],
                [],
                [],
                [
                    6
                ],
                [
                    9
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [
                    3,
                    4,
                    5
                ],
                [],
                [],
                [
                    6
                ],
                [
                    8
                ],
                [
                    7,
                    9
                ],
                [],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1970_a8955c93-bb32-4cd8-b9b1-edb6e4ce15c0",
        "question_text": "how many yards did austin get?",
        "split": "train",
        "decomposition": "return yards that austin get ;return sum of #1",
        "program": [
            "SELECT['yards that austin get']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "yards that austin get"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards that austin get)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards that austin get)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5
                ],
                [
                    4
                ],
                [
                    6
                ]
            ],
            "question_tokens": [
                "how",
                "many",
                "yards",
                "did",
                "austin",
                "get",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [
                    4,
                    5
                ],
                [],
                [
                    6
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [],
                [
                    6
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1158_64ab79e9-e6b1-48f1-b952-63fe6adaeb43",
        "question_text": "Who was Tsar second: Ivan IV or Boris Godunov?",
        "split": "train",
        "decomposition": "return when  was  Ivan IV the  Tsar ;return when  was  Boris Godunov the  Tsar ;return which is the  highest of #1 ,  #2",
        "program": [
            "SELECT['when was Ivan IV the Tsar']",
            "SELECT['when was Boris Godunov the Tsar']",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "when was Ivan IV the Tsar"
            ],
            [
                "SELECT",
                "when was Boris Godunov the Tsar"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was Ivan IV the Tsar)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was Boris Godunov the Tsar)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was Ivan IV the Tsar)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was Boris Godunov the Tsar)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    3,
                    4,
                    7
                ],
                [
                    1,
                    5
                ],
                [],
                [
                    6,
                    8
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "Who",
                "was",
                "Tsar",
                "second",
                ":",
                "Ivan",
                "IV",
                "or",
                "Boris",
                "Godunov",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    3,
                    4
                ],
                [
                    1,
                    2
                ],
                [],
                [],
                [],
                [
                    5
                ],
                [
                    6,
                    7
                ],
                [],
                [
                    8,
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    7
                ],
                [
                    2,
                    3,
                    4
                ],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [
                    8
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    9
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    3
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2127_faab481c-f06b-40ba-a80e-682b25818675",
        "question_text": "How many more Chevrolet Aveo than Chevrolet Cruze were sold in 2012?",
        "split": "train",
        "decomposition": "return Chevrolet Aveo sold in  2012 ;return Chevrolet Cruze sold in  2012 ;return number of  #1 ;return number of  #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['Chevrolet Aveo sold in 2012']",
            "SELECT['Chevrolet Cruze sold in 2012']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "Chevrolet Aveo sold in 2012"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "Chevrolet Cruze sold in 2012"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Chevrolet Aveo sold in 2012)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Chevrolet Cruze sold in 2012)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Chevrolet Aveo sold in 2012)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Chevrolet Cruze sold in 2012)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4,
                    5
                ],
                [],
                [],
                [
                    6,
                    7,
                    8,
                    9,
                    11
                ],
                [
                    10
                ],
                [
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "Chevrolet",
                "Aveo",
                "than",
                "Chevrolet",
                "Cruze",
                "were",
                "sold",
                "in",
                "2012",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    3,
                    4
                ],
                [],
                [],
                [],
                [],
                [
                    6,
                    7
                ],
                [
                    5,
                    8
                ],
                [
                    9
                ],
                [],
                [
                    10
                ],
                [],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [],
                [],
                [
                    8
                ],
                [
                    7,
                    9,
                    11
                ],
                [],
                [],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    7
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_3281_79ef8d0c-c239-4272-ab5e-0a9c28edaaa9",
        "question_text": "How many percent of jobs were not in healthcare?",
        "split": "train",
        "decomposition": "return the  percent of jobs in  healthcare ;return the  difference of 100 and  #1",
        "program": [
            "SELECT['the percent of jobs in healthcare']",
            "PROJECT['the difference of 100 and #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "the difference of 100 and #REF",
            [
                "SELECT",
                "the percent of jobs in healthcare"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the difference of 100 and #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the percent of jobs in healthcare)"
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            "SELECT_IMPLICIT_NUM(100)",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the percent of jobs in healthcare)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [
                    7
                ],
                [
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "percent",
                "of",
                "jobs",
                "were",
                "not",
                "in",
                "healthcare",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    6
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [],
                [
                    7
                ],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1081_622c1eb0-afd7-4957-b8f3-2c038c1e0d0a",
        "question_text": "Which happened first, the Battle of the Ice or the Battle of Grunwald?",
        "split": "train",
        "decomposition": "return when  was  the  Battle of the   Ice ;return when  was  the  Battle of Grunwald ;return which is the  lowest of #1 ,  #2",
        "program": [
            "SELECT['when was the Battle of the Ice']",
            "SELECT['when was the Battle of Grunwald']",
            "COMPARISON['min', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "when was the Battle of the Ice"
            ],
            [
                "SELECT",
                "when was the Battle of Grunwald"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the Battle of the Ice)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the Battle of Grunwald)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the Battle of the Ice)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the Battle of Grunwald)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    9,
                    11
                ],
                [
                    4,
                    6,
                    7
                ],
                [
                    8
                ],
                [
                    10,
                    12
                ],
                [
                    13,
                    14
                ]
            ],
            "question_tokens": [
                "Which",
                "happened",
                "first",
                ",",
                "the",
                "Battle",
                "of",
                "the",
                "Ice",
                "or",
                "the",
                "Battle",
                "of",
                "Grunwald",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    5
                ],
                [],
                [
                    4
                ],
                [
                    6
                ],
                [],
                [
                    8
                ],
                [
                    9,
                    10,
                    11
                ],
                [
                    12
                ],
                [
                    13
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    3,
                    9
                ],
                [
                    1,
                    2,
                    5,
                    11
                ],
                [],
                [
                    8
                ],
                [],
                [],
                [],
                [
                    13,
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    1,
                    13
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    13
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1547_a0d599d3-ce25-4e9f-aa52-927b08103fa8",
        "question_text": "How many player were injured during the game?",
        "split": "train",
        "decomposition": "return players that were injured during the  game ;return the  number of  #1",
        "program": [
            "SELECT['players that were injured during the game']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "players that were injured during the game"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(players that were injured during the game)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(players that were injured during the game)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    5
                ],
                [
                    2,
                    4,
                    6
                ],
                [
                    7,
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "player",
                "were",
                "injured",
                "during",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3
                ],
                [
                    5
                ],
                [
                    4,
                    6
                ],
                [],
                [
                    7,
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    7
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_475_6d239d83-d2a0-4a65-b440-8ee6b4e86673",
        "question_text": "How many more yards were completed in the third quarter than in the fourth quarter?",
        "split": "train",
        "decomposition": "return yards completed in  the  third quarter ;return yards completed in  the  fourth quarter ;return sum of #1 ;return sum of #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['yards completed in the third quarter']",
            "SELECT['yards completed in the fourth quarter']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards completed in the third quarter"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards completed in the fourth quarter"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards completed in the third quarter)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards completed in the fourth quarter)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards completed)"
                    ],
                    "GET_QUESTION_SPAN(in the third quarter)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards completed)"
                    ],
                    "GET_QUESTION_SPAN(in the fourth quarter)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    10
                ],
                [
                    3
                ],
                [
                    6
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [
                    8,
                    9,
                    11,
                    13,
                    14
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "yards",
                "were",
                "completed",
                "in",
                "the",
                "third",
                "quarter",
                "than",
                "in",
                "the",
                "fourth",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [
                    5
                ],
                [],
                [
                    8
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    9,
                    13,
                    14
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    4
                ],
                [
                    3
                ],
                [],
                [
                    6,
                    8
                ],
                [],
                [],
                [
                    5
                ],
                [],
                [
                    10
                ],
                [],
                [],
                [
                    9,
                    11,
                    13,
                    14
                ],
                [],
                [],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    14
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    14
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    14
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2015_e26b6c00-1b9e-4f2a-86cf-f9593c3212ee",
        "question_text": "How many total yards of touchdown passes did Peyton Manning make?",
        "split": "train",
        "decomposition": "return yards of touchdown passes of  Peyton Manning ;return sum of #1",
        "program": [
            "SELECT['yards of touchdown passes of Peyton Manning']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "yards of touchdown passes of Peyton Manning"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdown passes of Peyton Manning)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdown passes of Peyton Manning)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    6,
                    7,
                    9,
                    10
                ],
                [
                    4,
                    8
                ],
                [
                    5,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "total",
                "yards",
                "of",
                "touchdown",
                "passes",
                "did",
                "Peyton",
                "Manning",
                "make",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    9
                ],
                [],
                [
                    4,
                    6,
                    7,
                    8
                ],
                [
                    5
                ],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    5,
                    8
                ],
                [
                    2,
                    3,
                    6,
                    7,
                    9,
                    10
                ],
                [
                    4
                ],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2919_f947fbf4-1a0d-4aba-a985-41efad0528bb",
        "question_text": "In what years did Japan capture more than 5 million metric tons of fish?",
        "split": "train",
        "decomposition": "return years ;return metric tons of fish Japan did capture In #1 ;return number of  #2 for each #1 ;return #1 where #3 is higher than 5 million",
        "program": [
            "SELECT['years']",
            "PROJECT['metric tons of fish Japan did capture In #REF', '#1']",
            "GROUP['count', '#2', '#1']",
            "COMPARATIVE['#1', '#3', 'is higher than 5 million']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "years"
            ],
            [
                "GROUP_count",
                [
                    "PROJECT",
                    "metric tons of fish Japan did capture In #REF",
                    [
                        "SELECT",
                        "years"
                    ]
                ],
                [
                    "SELECT",
                    "years"
                ]
            ],
            "is higher than 5 million"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(metric tons of fish Japan did capture In #REF)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is higher than 5 million)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years)"
            ],
            [
                "PARTIAL_SELECT_SINGLE_NUM",
                "GET_QUESTION_SPAN(metric tons of fish Japan did capture In #REF)"
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is higher than 5 million)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    3,
                    5
                ],
                [],
                [
                    6,
                    8,
                    9
                ],
                [],
                [
                    4,
                    7,
                    10,
                    11,
                    12,
                    13
                ],
                [
                    14
                ]
            ],
            "question_tokens": [
                "In",
                "what",
                "years",
                "did",
                "Japan",
                "capture",
                "more",
                "than",
                "5",
                "million",
                "metric",
                "tons",
                "of",
                "fish",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    3
                ],
                [
                    5
                ],
                [
                    4
                ],
                [
                    6
                ],
                [],
                [
                    8
                ],
                [],
                [
                    9,
                    10
                ],
                [
                    7,
                    11
                ],
                [
                    12
                ],
                [
                    13
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    1
                ],
                [
                    0
                ],
                [],
                [
                    5
                ],
                [],
                [
                    4
                ],
                [
                    6,
                    8
                ],
                [
                    9,
                    10,
                    12
                ],
                [],
                [
                    7,
                    11
                ],
                [
                    13,
                    14
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    13
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    13
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    11
                ],
                [
                    6,
                    13
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1905_56db3c92-c6ed-4c02-ac2e-4b7769b53ed6",
        "question_text": "Which foreign nationality has a higher population in Bilbao, Ecuadorians or Chinese?",
        "split": "train",
        "decomposition": "return the  population of Ecuadorians in  Bilbao ;return the  population of Chinese in  Bilbao ;return which is higher of #1 ,  #2",
        "program": [
            "SELECT['the population of Ecuadorians in Bilbao']",
            "SELECT['the population of Chinese in Bilbao']",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "the population of Ecuadorians in Bilbao"
            ],
            [
                "SELECT",
                "the population of Chinese in Bilbao"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the population of Ecuadorians in Bilbao)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(the population of Chinese in Bilbao)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the population of Ecuadorians in Bilbao)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(the population of Chinese in Bilbao)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    5,
                    6,
                    9,
                    11,
                    12
                ],
                [
                    2,
                    4,
                    7
                ],
                [
                    8
                ],
                [
                    10
                ],
                [
                    13
                ]
            ],
            "question_tokens": [
                "Which",
                "foreign",
                "nationality",
                "has",
                "a",
                "higher",
                "population",
                "in",
                "Bilbao",
                ",",
                "Ecuadorians",
                "or",
                "Chinese",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3,
                    5
                ],
                [
                    2
                ],
                [
                    4
                ],
                [
                    6,
                    7
                ],
                [],
                [
                    8
                ],
                [
                    9
                ],
                [
                    11,
                    12
                ],
                [
                    10
                ],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    2
                ],
                [
                    4,
                    9,
                    11
                ],
                [
                    1,
                    3,
                    5,
                    6,
                    12
                ],
                [],
                [],
                [
                    8
                ],
                [
                    10
                ],
                [],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    12
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    12
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    12
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1312_25b5fab9-125b-4cc8-af3b-733fefce76a5",
        "question_text": "How many more, considering only the low range of estimates, of Japanese Army dead in combat or died of wounds than Russian Army?",
        "split": "train",
        "decomposition": "return low estimate of   Japanese Army  dead in  combat ;return low estimate of   Japanese Army  died of wounds ;return sum of   #1 and  #2 ;return low estimate of   Russian Army  dead in  combat ;return low estimate of   Russian Army  died of wounds ;return sum of   #4 and  #5 ;return difference of   #3 and  #6",
        "program": [
            "SELECT['low estimate of Japanese Army dead in combat']",
            "SELECT['low estimate of Japanese Army died of wounds']",
            "ARITHMETIC['sum', '#1', '#2']",
            "SELECT['low estimate of Russian Army dead in combat']",
            "SELECT['low estimate of Russian Army died of wounds']",
            "ARITHMETIC['sum', '#4', '#5']",
            "ARITHMETIC['difference', '#3', '#6']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "ARITHMETIC_sum",
                [
                    "SELECT",
                    "low estimate of Japanese Army dead in combat"
                ],
                [
                    "SELECT",
                    "low estimate of Japanese Army died of wounds"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT",
                    "low estimate of Russian Army dead in combat"
                ],
                [
                    "SELECT",
                    "low estimate of Russian Army died of wounds"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(low estimate of Japanese Army dead in combat)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(low estimate of Japanese Army died of wounds)"
                    ]
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(low estimate of Russian Army dead in combat)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(low estimate of Russian Army died of wounds)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(low estimate of Japanese Army dead in combat)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(low estimate of Japanese Army died of wounds)"
                    ]
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(low estimate of Russian Army dead in combat)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(low estimate of Russian Army died of wounds)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic",
            "select",
            "select",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4
                ],
                [],
                [
                    5,
                    7
                ],
                [],
                [
                    8,
                    10
                ],
                [
                    13
                ],
                [],
                [
                    11,
                    14,
                    15,
                    17,
                    24
                ],
                [],
                [],
                [
                    18
                ],
                [
                    21,
                    22
                ],
                [
                    23
                ],
                [
                    25
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                ",",
                "considering",
                "only",
                "the",
                "low",
                "range",
                "of",
                "estimates",
                ",",
                "of",
                "Japanese",
                "Army",
                "dead",
                "in",
                "combat",
                "or",
                "died",
                "of",
                "wounds",
                "than",
                "Russian",
                "Army",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    4
                ],
                [],
                [
                    5
                ],
                [],
                [
                    7
                ],
                [
                    8
                ],
                [],
                [
                    10
                ],
                [
                    13
                ],
                [],
                [],
                [],
                [
                    15
                ],
                [],
                [
                    11
                ],
                [],
                [],
                [],
                [
                    17
                ],
                [],
                [],
                [],
                [],
                [
                    22
                ],
                [],
                [
                    23
                ],
                [],
                [
                    21
                ],
                [],
                [],
                [
                    25
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [
                    3,
                    4
                ],
                [],
                [
                    8
                ],
                [],
                [
                    7
                ],
                [],
                [],
                [
                    10
                ],
                [],
                [
                    13,
                    15
                ],
                [],
                [],
                [
                    11,
                    14,
                    24
                ],
                [],
                [],
                [
                    17
                ],
                [],
                [],
                [],
                [
                    21,
                    22
                ],
                [],
                [],
                [
                    25
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    24
                ],
                [
                    4,
                    10
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    10
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    17
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    20,
                    20
                ],
                [
                    20,
                    21
                ],
                [
                    21,
                    21
                ],
                [
                    22,
                    24
                ],
                [
                    22,
                    22
                ],
                [
                    23,
                    24
                ],
                [
                    23,
                    23
                ],
                [
                    24,
                    24
                ],
                [
                    25,
                    25
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2181_a79099fa-9efa-486a-8cad-18e9df01f6cc",
        "question_text": "Which players scored touchdowns over 50 yards?",
        "split": "train",
        "decomposition": "return touchdowns over 50 yards ;return players that scored #1",
        "program": [
            "SELECT['touchdowns over 50 yards']",
            "PROJECT['players that scored #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "players that scored #REF",
            [
                "SELECT",
                "touchdowns over 50 yards"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(players that scored #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdowns over 50 yards)"
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(players that scored #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdowns over 50 yards)"
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    6
                ],
                [
                    7
                ]
            ],
            "question_tokens": [
                "Which",
                "players",
                "scored",
                "touchdowns",
                "over",
                "50",
                "yards",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    6
                ],
                [
                    4
                ],
                [
                    5
                ],
                [],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    6
                ],
                [
                    1,
                    2
                ],
                [
                    3
                ],
                [],
                [
                    4,
                    5
                ],
                [],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_41_84a8f0d4-75f4-4c48-9468-9b5a250f32de",
        "question_text": "Did the campaign against the Kurds happen before or after the coup by the Persian Cossack Brigade?",
        "split": "train",
        "decomposition": "return when  did the  campaign against the   Kurds happen ;return when  was  the  coup by the   Persian Cossack Brigade ;return if #1 is before #2 ;return if #1 is after #2 ;return which is true of #3 ,  #4",
        "program": [
            "SELECT['when did the campaign against the Kurds happen']",
            "SELECT['when was the coup by the Persian Cossack Brigade']",
            "BOOLEAN['#1', 'is before #2']",
            "BOOLEAN['#1', 'is after #2']",
            "COMPARISON['true', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_true",
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "when did the campaign against the Kurds happen"
                ],
                "is before #2"
            ],
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "when did the campaign against the Kurds happen"
                ],
                "is after #2"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_true",
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(when did the campaign against the Kurds happen)"
                ],
                "GET_QUESTION_SPAN(is before #2)"
            ],
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(when did the campaign against the Kurds happen)"
                ],
                "GET_QUESTION_SPAN(is after #2)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_true",
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(when did the campaign against the Kurds happen)"
                ],
                "GET_QUESTION_SPAN(is before #2)"
            ],
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(when did the campaign against the Kurds happen)"
                ],
                "GET_QUESTION_SPAN(is after #2)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "boolean",
            "boolean",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2
                ],
                [
                    5,
                    6,
                    7
                ],
                [],
                [
                    3
                ],
                [
                    12
                ],
                [
                    8,
                    9,
                    11
                ],
                [],
                [
                    14,
                    15,
                    16
                ],
                [
                    17
                ]
            ],
            "question_tokens": [
                "Did",
                "the",
                "campaign",
                "against",
                "the",
                "Kurds",
                "happen",
                "before",
                "or",
                "after",
                "the",
                "coup",
                "by",
                "the",
                "Persian",
                "Cossack",
                "Brigade",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    2,
                    3
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    7,
                    8,
                    9
                ],
                [],
                [
                    11
                ],
                [
                    12,
                    14
                ],
                [
                    15
                ],
                [],
                [
                    16
                ],
                [
                    17
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [],
                [
                    7
                ],
                [
                    6
                ],
                [
                    5,
                    8
                ],
                [
                    2
                ],
                [],
                [],
                [],
                [
                    9,
                    11
                ],
                [],
                [
                    14
                ],
                [
                    12
                ],
                [
                    15,
                    16
                ],
                [
                    17
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    16
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    16
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    16
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    16
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    16
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_956_e4b08eca-a1ca-499d-ac00-fd8fa430d34f",
        "question_text": "Which player threw more touchdown passes, Tyler Thigpen or Trent Edwards?",
        "split": "train",
        "decomposition": "return touchdown passes of Tyler Thigpen ;return touchdown passes of Trent Edwards ;return the  number of  #1 ;return the  number of  #2 ;return which is more of #3 ,  #4",
        "program": [
            "SELECT['touchdown passes of Tyler Thigpen']",
            "SELECT['touchdown passes of Trent Edwards']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdown passes of Tyler Thigpen"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdown passes of Trent Edwards"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown passes of Tyler Thigpen)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown passes of Trent Edwards)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown passes of Tyler Thigpen)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown passes of Trent Edwards)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    9
                ],
                [],
                [],
                [
                    7,
                    8,
                    10
                ],
                [
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "threw",
                "more",
                "touchdown",
                "passes",
                ",",
                "Tyler",
                "Thigpen",
                "or",
                "Trent",
                "Edwards",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    5
                ],
                [],
                [
                    6
                ],
                [
                    4
                ],
                [],
                [],
                [
                    7,
                    9
                ],
                [
                    8
                ],
                [
                    10,
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    6,
                    9
                ],
                [
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [],
                [],
                [
                    7,
                    8
                ],
                [
                    10,
                    11
                ],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_102_e0081193-933a-4aa9-9fea-5fe0e3149e07",
        "question_text": "How many yards was Dawson's shortest field goal of the first half?",
        "split": "train",
        "decomposition": "return yards of Dawson 's first half field goals ;return shortest of #1",
        "program": [
            "SELECT[\"yards of Dawson 's first half field goals\"]",
            "AGGREGATE['min', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "yards of Dawson 's first half field goals"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of Dawson 's first half field goals)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of Dawson 's first half field goals)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    5,
                    6,
                    7,
                    8,
                    11
                ],
                [
                    9,
                    10
                ],
                [
                    4,
                    12,
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "Dawson",
                "'s",
                "shortest",
                "field",
                "goal",
                "of",
                "the",
                "first",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    4
                ],
                [
                    2,
                    3,
                    5,
                    6,
                    7,
                    8
                ],
                [],
                [],
                [
                    9,
                    11
                ],
                [],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    5
                ],
                [
                    6,
                    7,
                    8,
                    11
                ],
                [
                    9
                ],
                [],
                [
                    4,
                    12,
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    12
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    12
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1392_dfaf6157-ffd1-4c1e-87bf-b308e90c9595",
        "question_text": "How many months passed between the concluding of peace and the surrender of Uro\u0161 III?",
        "split": "train",
        "decomposition": "return when  was  the  concluding of peace ;return when  was  the  surrender of Uro\u0161 III ;return difference in  months of #1 and  #2",
        "program": [
            "SELECT['when was the concluding of peace']",
            "SELECT['when was the surrender of Uro\\u0161 III']",
            "ARITHMETIC['difference', '#1', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "when was the concluding of peace"
            ],
            [
                "SELECT",
                "when was the surrender of Uro\u0161 III"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(when was the concluding of peace)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(when was the surrender of Uro\u0161 III)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(when was the concluding of peace)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(when was the surrender of Uro\u0161 III)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    4
                ],
                [
                    5,
                    6,
                    7,
                    8
                ],
                [
                    11
                ],
                [
                    9,
                    13
                ],
                [
                    10,
                    12
                ],
                [
                    14,
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "months",
                "passed",
                "between",
                "the",
                "concluding",
                "of",
                "peace",
                "and",
                "the",
                "surrender",
                "of",
                "Uro\u0161",
                "III",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [
                    8
                ],
                [],
                [
                    9
                ],
                [],
                [],
                [
                    14
                ],
                [
                    11,
                    13
                ],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4
                ],
                [],
                [],
                [
                    6
                ],
                [
                    8
                ],
                [],
                [],
                [
                    9,
                    13
                ],
                [],
                [
                    11,
                    14
                ],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    14
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    14
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    14
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    14
                ],
                [
                    8,
                    14
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    14
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2196_4132a18a-c694-46f1-aabf-7577a3b6b82e",
        "question_text": "How many 53-yard field goals did Nick Novak attempt?",
        "split": "train",
        "decomposition": "return field goals that Nick Novak attempt ;return #1 that was  53-yard ;return number of  #2",
        "program": [
            "SELECT['field goals that Nick Novak attempt']",
            "FILTER['#1', 'that was 53-yard']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "field goals that Nick Novak attempt"
                ],
                "that was 53-yard"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that Nick Novak attempt)"
                ],
                "GET_QUESTION_SPAN(that was 53-yard)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_EQ",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that Nick Novak attempt)"
                ],
                "GET_QUESTION_NUMBER(53)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    5
                ],
                [
                    2,
                    3,
                    4
                ],
                [],
                [
                    8,
                    9
                ],
                [
                    6,
                    7
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "53-yard",
                "field",
                "goals",
                "did",
                "Nick",
                "Novak",
                "attempt",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4
                ],
                [],
                [
                    5
                ],
                [
                    8
                ],
                [],
                [
                    6,
                    7
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    5
                ],
                [
                    2,
                    3
                ],
                [
                    4,
                    6
                ],
                [],
                [
                    7,
                    8
                ],
                [
                    9
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_327_1cfc1cc2-87c4-4354-b630-01013ec0fbe7",
        "question_text": "How many two point attempts did Tiki Barber convert in this game?",
        "split": "train",
        "decomposition": "return the  two point attempts that Tiki Barber convert in  this game ;return number of  #1",
        "program": [
            "SELECT['the two point attempts that Tiki Barber convert in this game']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "the two point attempts that Tiki Barber convert in this game"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the two point attempts that Tiki Barber convert in this game)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the two point attempts that Tiki Barber convert in this game)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    4,
                    5,
                    6,
                    8,
                    10
                ],
                [
                    2,
                    7,
                    9
                ],
                [
                    3,
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "two",
                "point",
                "attempts",
                "did",
                "Tiki",
                "Barber",
                "convert",
                "in",
                "this",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    2
                ],
                [
                    0,
                    1,
                    4,
                    5
                ],
                [],
                [
                    6
                ],
                [
                    3,
                    7,
                    9
                ],
                [
                    8,
                    10,
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    4,
                    5,
                    6,
                    8,
                    10
                ],
                [
                    2,
                    7,
                    9
                ],
                [],
                [
                    3,
                    11,
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1360_26d7090e-afdc-4b0e-81d4-7dafa7d30f85",
        "question_text": "Did Casimir's troops have fewer regulars or nobles?",
        "split": "train",
        "decomposition": "return the regulars in  Casimir 's troops ;return the nobles in  Casimir 's troops ;return the number of  #1 ;return the number of  #2 ;return which is  fewer of  #3 , #4",
        "program": [
            "SELECT[\"the regulars in Casimir 's troops\"]",
            "SELECT[\"the nobles in Casimir 's troops\"]",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['min', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "the regulars in Casimir 's troops"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "the nobles in Casimir 's troops"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the regulars in Casimir 's troops)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(the nobles in Casimir 's troops)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the regulars in Casimir 's troops)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(the nobles in Casimir 's troops)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    5,
                    7
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    6
                ],
                [],
                [
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "Did",
                "Casimir",
                "'s",
                "troops",
                "have",
                "fewer",
                "regulars",
                "or",
                "nobles",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    5
                ],
                [],
                [
                    2,
                    3
                ],
                [],
                [
                    4
                ],
                [],
                [
                    6
                ],
                [
                    7
                ],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0,
                    1,
                    3,
                    7
                ],
                [
                    5
                ],
                [
                    2
                ],
                [
                    4
                ],
                [
                    6
                ],
                [],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1359_857d1d6f-5f40-4a92-b339-1c8d03ee3aee",
        "question_text": "Which player had the shortest field goal of the game?",
        "split": "train",
        "decomposition": "return field goals of the  game ;return the  shortest of #1 ;return the  player that had #2",
        "program": [
            "SELECT['field goals of the game']",
            "AGGREGATE['min', '#1']",
            "PROJECT['the player that had #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "the player that had #REF",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "field goals of the game"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the player that had #REF)",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of the game)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the player that had #REF)",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of the game)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    8
                ],
                [],
                [
                    4,
                    5,
                    6
                ],
                [
                    7
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "had",
                "the",
                "shortest",
                "field",
                "goal",
                "of",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    4,
                    5,
                    6
                ],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    7,
                    8
                ],
                [],
                [],
                [
                    4,
                    5,
                    6
                ],
                [],
                [],
                [
                    9,
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_574_3bf4905f-f9d3-485f-a123-9b750fc0b687",
        "question_text": "How many years since first plans to undertake a major restoration of Mdina's wall were made to it was inaugurated as a public garden?",
        "split": "train",
        "decomposition": "return year when  plans to undertake a major restoration of Mdina 's wall were first made ;return year when  Mdina 's wall was  inaugurated as a public garden ;return the  difference of #2 and  #1",
        "program": [
            "SELECT[\"year when plans to undertake a major restoration of Mdina 's wall were first made\"]",
            "SELECT[\"year when Mdina 's wall was inaugurated as a public garden\"]",
            "ARITHMETIC['difference', '#2', '#1']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "year when Mdina 's wall was inaugurated as a public garden"
            ],
            [
                "SELECT",
                "year when plans to undertake a major restoration of Mdina 's wall were first made"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year when Mdina 's wall was inaugurated as a public garden)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year when plans to undertake a major restoration of Mdina 's wall were first made)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Two_Events",
            [
                "SELECT",
                "GET_QUESTION_SPAN(year when Mdina 's wall was inaugurated as a public garden)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(year when plans to undertake a major restoration of Mdina 's wall were first made)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    7,
                    18
                ],
                [
                    6,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14
                ],
                [
                    4
                ],
                [
                    15,
                    16,
                    17,
                    19,
                    21,
                    22,
                    23
                ],
                [
                    20,
                    24,
                    25
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "since",
                "first",
                "plans",
                "to",
                "undertake",
                "a",
                "major",
                "restoration",
                "of",
                "Mdina",
                "'s",
                "wall",
                "were",
                "made",
                "to",
                "it",
                "was",
                "inaugurated",
                "as",
                "a",
                "public",
                "garden",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    18
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    8,
                    9
                ],
                [
                    4,
                    10,
                    11,
                    12,
                    13
                ],
                [],
                [
                    15,
                    19
                ],
                [
                    14,
                    16,
                    17,
                    23
                ],
                [
                    21,
                    22
                ],
                [
                    20
                ],
                [
                    24,
                    25
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    5,
                    18
                ],
                [
                    7,
                    11,
                    19
                ],
                [
                    6,
                    8,
                    9,
                    10,
                    12,
                    13,
                    14
                ],
                [
                    17
                ],
                [
                    4
                ],
                [
                    21,
                    22,
                    23
                ],
                [
                    20
                ],
                [
                    24,
                    25
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    18
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    14
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    14
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    14
                ],
                [
                    8,
                    14
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    18
                ],
                [
                    17,
                    18
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    19,
                    24
                ],
                [
                    20,
                    20
                ],
                [
                    20,
                    24
                ],
                [
                    21,
                    21
                ],
                [
                    21,
                    24
                ],
                [
                    22,
                    24
                ],
                [
                    22,
                    22
                ],
                [
                    23,
                    23
                ],
                [
                    24,
                    24
                ],
                [
                    25,
                    25
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_570_d88bcc2e-42a9-41ff-87a1-20ac08a6d088",
        "question_text": "Who did the Japanese support later, the Anhui or the Fengtian?",
        "split": "train",
        "decomposition": "return when  did the  Japanese support the   Anhui ;return when  did the  Japanese support the   Fengtian ;return which is the  highest of #1 ,  #2",
        "program": [
            "SELECT['when did the Japanese support the Anhui']",
            "SELECT['when did the Japanese support the Fengtian']",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "when did the Japanese support the Anhui"
            ],
            [
                "SELECT",
                "when did the Japanese support the Fengtian"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did the Japanese support the Anhui)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did the Japanese support the Fengtian)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did the Japanese support the Anhui)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did the Japanese support the Fengtian)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    5,
                    6,
                    9
                ],
                [
                    1,
                    2,
                    3,
                    4
                ],
                [
                    8
                ],
                [
                    7,
                    10
                ],
                [
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "Who",
                "did",
                "the",
                "Japanese",
                "support",
                "later",
                ",",
                "the",
                "Anhui",
                "or",
                "the",
                "Fengtian",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    5,
                    6
                ],
                [],
                [
                    3
                ],
                [
                    4
                ],
                [],
                [],
                [
                    8,
                    9
                ],
                [
                    10
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    6,
                    9
                ],
                [
                    5
                ],
                [],
                [
                    3,
                    4
                ],
                [
                    8
                ],
                [],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    11
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    4
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_800_a1dc75c6-f8b0-4652-8c95-5edd11279a62",
        "question_text": "What happened second: Chinese in Batavia revolted or Valckenier called an emergency meeting?",
        "split": "train",
        "decomposition": "return when  the Chinese in  Batavia revolted ;return when  Valckenier called an emergency meeting ;return which is  the highest of  #1 , #2",
        "program": [
            "SELECT['when the Chinese in Batavia revolted']",
            "SELECT['when Valckenier called an emergency meeting']",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "when the Chinese in Batavia revolted"
            ],
            [
                "SELECT",
                "when Valckenier called an emergency meeting"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when the Chinese in Batavia revolted)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when Valckenier called an emergency meeting)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when the Chinese in Batavia revolted)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when Valckenier called an emergency meeting)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    6,
                    8
                ],
                [
                    4,
                    5,
                    7
                ],
                [
                    9,
                    10
                ],
                [
                    11
                ],
                [
                    12,
                    13,
                    14
                ]
            ],
            "question_tokens": [
                "What",
                "happened",
                "second",
                ":",
                "Chinese",
                "in",
                "Batavia",
                "revolted",
                "or",
                "Valckenier",
                "called",
                "an",
                "emergency",
                "meeting",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    9
                ],
                [
                    7
                ],
                [
                    8,
                    11
                ],
                [
                    10
                ],
                [
                    12,
                    13
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    7
                ],
                [
                    8
                ],
                [
                    1,
                    2,
                    3,
                    6
                ],
                [
                    4,
                    5
                ],
                [],
                [
                    9
                ],
                [
                    11
                ],
                [
                    10,
                    12
                ],
                [
                    13,
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    13
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    13
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2540_343c45bc-64a5-479c-bc13-060347df8e8a",
        "question_text": "How many percent difference is the national average of the immigrant population growth from 1993-2008 compared to in Bergen?",
        "split": "train",
        "decomposition": "return the  national average of the immigrant population growth from  1993-2008 in  percent ;return percent of the  immigrant population growth from  1993-2008 in  Bergen ;return the  difference of #1 and  #2",
        "program": [
            "SELECT['the national average of the immigrant population growth from 1993-2008 in percent']",
            "SELECT['percent of the immigrant population growth from 1993-2008 in Bergen']",
            "ARITHMETIC['difference', '#1', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "the national average of the immigrant population growth from 1993-2008 in percent"
            ],
            [
                "SELECT",
                "percent of the immigrant population growth from 1993-2008 in Bergen"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the national average of the immigrant population growth from 1993-2008 in percent)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent of the immigrant population growth from 1993-2008 in Bergen)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the national average of the immigrant population growth from 1993-2008 in percent)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent of the immigrant population growth from 1993-2008 in Bergen)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4
                ],
                [
                    6,
                    7,
                    10
                ],
                [
                    5,
                    8,
                    9,
                    13
                ],
                [
                    11,
                    12
                ],
                [
                    14,
                    16,
                    17,
                    18
                ],
                [
                    15,
                    19
                ],
                [
                    20,
                    21
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "percent",
                "difference",
                "is",
                "the",
                "national",
                "average",
                "of",
                "the",
                "immigrant",
                "population",
                "growth",
                "from",
                "1993",
                "-",
                "2008",
                "compared",
                "to",
                "in",
                "Bergen",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    4
                ],
                [
                    7
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [
                    10
                ],
                [
                    11,
                    14,
                    17
                ],
                [],
                [
                    12,
                    15
                ],
                [
                    19
                ],
                [
                    16
                ],
                [
                    20
                ],
                [
                    21
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    3,
                    4
                ],
                [],
                [
                    7,
                    10,
                    11
                ],
                [
                    6
                ],
                [],
                [
                    12
                ],
                [],
                [
                    14,
                    16,
                    17,
                    18
                ],
                [
                    15
                ],
                [],
                [
                    20,
                    21
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    20
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    16
                ],
                [
                    8,
                    12
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    16
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    16
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    20
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    20
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    19,
                    20
                ],
                [
                    20,
                    20
                ],
                [
                    21,
                    21
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1972_294991fc-c0a7-48ba-a3c9-cbafa2c7461f",
        "question_text": "Which quarterback accumulated more touchdown yards?",
        "split": "train",
        "decomposition": "return quarterbacks ;return yards of touchdown of  #1 ;return the  sum of #2 for each #1 ;return #1 where #3 is the  highest",
        "program": [
            "SELECT['quarterbacks']",
            "PROJECT['yards of touchdown of #REF', '#1']",
            "GROUP['sum', '#2', '#1']",
            "COMPARATIVE['#1', '#3', 'is the highest']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "quarterbacks"
            ],
            [
                "GROUP_sum",
                [
                    "PROJECT",
                    "yards of touchdown of #REF",
                    [
                        "SELECT",
                        "quarterbacks"
                    ]
                ],
                [
                    "SELECT",
                    "quarterbacks"
                ]
            ],
            "is the highest"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(quarterbacks)"
            ],
            [
                "PARTIAL_GROUP_sum",
                [
                    "PARTIAL_SELECT_NUM",
                    "GET_QUESTION_SPAN(yards of touchdown of #REF)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is the highest)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(quarterbacks)"
            ],
            [
                "PARTIAL_SELECT_SINGLE_NUM",
                "GET_QUESTION_SPAN(yards of touchdown of #REF)"
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is the highest)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3
                ],
                [
                    4
                ],
                [
                    5
                ],
                [
                    6
                ]
            ],
            "question_tokens": [
                "Which",
                "quarterback",
                "accumulated",
                "more",
                "touchdown",
                "yards",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [],
                [],
                [
                    1
                ],
                [],
                [
                    2,
                    3
                ],
                [],
                [],
                [],
                [],
                [
                    5
                ],
                [],
                [],
                [
                    6
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0
                ],
                [
                    1
                ],
                [],
                [],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [
                    5,
                    6
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2174_384c5f8f-3839-497f-a287-2333d6bdca38",
        "question_text": "How many in percent according to the 2000 Census didn't speak Spanish as their first language?",
        "split": "train",
        "decomposition": "return percent of the  population that speak Spanish as their first language according to the 2000 Census ;return the  difference of 100 and  #1",
        "program": [
            "SELECT['percent of the population that speak Spanish as their first language according to the 2000 Census']",
            "PROJECT['the difference of 100 and #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "the difference of 100 and #REF",
            [
                "SELECT",
                "percent of the population that speak Spanish as their first language according to the 2000 Census"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the difference of 100 and #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(percent of the population that speak Spanish as their first language according to the 2000 Census)"
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            "SELECT_IMPLICIT_NUM(100)",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent of the population that speak Spanish as their first language according to the 2000 Census)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    3,
                    4,
                    7,
                    8,
                    10,
                    11,
                    13,
                    14,
                    16
                ],
                [
                    5
                ],
                [
                    2,
                    6,
                    9,
                    12
                ],
                [
                    15,
                    17
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "in",
                "percent",
                "according",
                "to",
                "the",
                "2000",
                "Census",
                "did",
                "n't",
                "speak",
                "Spanish",
                "as",
                "their",
                "first",
                "language",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    7,
                    8,
                    10,
                    11
                ],
                [],
                [
                    5
                ],
                [
                    9
                ],
                [],
                [
                    12,
                    13,
                    14,
                    15
                ],
                [],
                [
                    16
                ],
                [
                    17
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    3,
                    4,
                    7,
                    8,
                    10,
                    11,
                    13,
                    16
                ],
                [
                    9
                ],
                [
                    5
                ],
                [
                    12
                ],
                [
                    14
                ],
                [
                    15,
                    17
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    3
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    16
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    16
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    16
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    16
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1746_ac69efde-0cb6-4dff-9a67-847be390eecc",
        "question_text": "How many combined Mechanized Infantry Battalions and Infantry Battalions were part of the Libyan Army in 2009?",
        "split": "dev",
        "decomposition": "return number of  Mechanized Infantry Battalions that were part of the  Libyan Army in  2009 ;return number of  Infantry Battalions that were part of the  Libyan Army in  2009 ;return sum of #1 and  #2",
        "program": [
            "SELECT['number of Mechanized Infantry Battalions that were part of the Libyan Army in 2009']",
            "SELECT['number of Infantry Battalions that were part of the Libyan Army in 2009']",
            "ARITHMETIC['sum', '#1', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT",
                "number of Mechanized Infantry Battalions that were part of the Libyan Army in 2009"
            ],
            [
                "SELECT",
                "number of Infantry Battalions that were part of the Libyan Army in 2009"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(number of Mechanized Infantry Battalions that were part of the Libyan Army in 2009)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(number of Infantry Battalions that were part of the Libyan Army in 2009)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(number of Mechanized Infantry Battalions that were part of the Libyan Army in 2009)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(number of Infantry Battalions that were part of the Libyan Army in 2009)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    3,
                    5,
                    6,
                    8,
                    9,
                    14
                ],
                [
                    1
                ],
                [
                    4,
                    7,
                    10
                ],
                [],
                [
                    16
                ],
                [
                    11,
                    12,
                    13,
                    15
                ],
                [
                    17
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "combined",
                "Mechanized",
                "Infantry",
                "Battalions",
                "and",
                "Infantry",
                "Battalions",
                "were",
                "part",
                "of",
                "the",
                "Libyan",
                "Army",
                "in",
                "2009",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    6
                ],
                [
                    3
                ],
                [],
                [
                    5
                ],
                [
                    4
                ],
                [
                    7
                ],
                [],
                [],
                [
                    8
                ],
                [
                    9
                ],
                [],
                [
                    10,
                    13
                ],
                [
                    14,
                    15
                ],
                [],
                [
                    16
                ],
                [
                    17
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    5,
                    6,
                    8,
                    9,
                    14
                ],
                [],
                [],
                [
                    4,
                    7,
                    10
                ],
                [],
                [],
                [],
                [
                    16
                ],
                [
                    13
                ],
                [],
                [
                    17
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    8
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    16
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    14
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    16
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_710_21694213-63d0-4788-8fea-8bc6185cd739",
        "question_text": "Who booted more field goals, Mare or Carney?",
        "split": "train",
        "decomposition": "return field goals that Mare booted ;return field goals that Carney booted ;return number of  #1 ;return number of  #2 ;return which is more of #3 ,  #4",
        "program": [
            "SELECT['field goals that Mare booted']",
            "SELECT['field goals that Carney booted']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals that Mare booted"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals that Carney booted"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals that Mare booted)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals that Carney booted)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals that Mare booted)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals that Carney booted)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    7
                ],
                [],
                [
                    6
                ],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "Who",
                "booted",
                "more",
                "field",
                "goals",
                ",",
                "Mare",
                "or",
                "Carney",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    4
                ],
                [],
                [],
                [],
                [
                    6
                ],
                [],
                [
                    5
                ],
                [
                    7,
                    8
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    5,
                    7
                ],
                [
                    1,
                    2,
                    3,
                    4
                ],
                [],
                [
                    6
                ],
                [],
                [
                    8
                ],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    8
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1838_3ea61d8b-6c73-41fa-9369-7fddda8a4d3f",
        "question_text": "Which team scored the most total game points?",
        "split": "dev",
        "decomposition": "return teams ;return total game points of #1 ;return sum of #2 for each #1 ;return #1 where #3 is highest",
        "program": [
            "SELECT['teams']",
            "PROJECT['total game points of #REF', '#1']",
            "GROUP['sum', '#2', '#1']",
            "SUPERLATIVE['max', '#1', '#3']"
        ],
        "nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "teams"
            ],
            [
                "GROUP_sum",
                [
                    "PROJECT",
                    "total game points of #REF",
                    [
                        "SELECT",
                        "teams"
                    ]
                ],
                [
                    "SELECT",
                    "teams"
                ]
            ]
        ],
        "typed_nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(teams)"
            ],
            [
                "PARTIAL_GROUP_sum",
                [
                    "PARTIAL_SELECT_NUM",
                    "GET_QUESTION_SPAN(total game points of #REF)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(teams)"
            ],
            [
                "PARTIAL_GROUP_sum",
                [
                    "PARTIAL_SELECT_NUM",
                    "GET_QUESTION_SPAN(total game points of #REF)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "superlative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    3
                ],
                [],
                [
                    2,
                    4,
                    5
                ],
                [
                    7
                ],
                [
                    6,
                    8
                ]
            ],
            "question_tokens": [
                "Which",
                "team",
                "scored",
                "the",
                "most",
                "total",
                "game",
                "points",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    2,
                    4
                ],
                [],
                [
                    5,
                    7
                ],
                [],
                [
                    6
                ],
                [],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [],
                [
                    2,
                    4
                ],
                [
                    5
                ],
                [
                    7
                ],
                [],
                [
                    6,
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1184_d4547161-dd97-4164-93a1-144986d94c51",
        "question_text": "How many yards difference is there between Kris Brown's longest and shortest field goals?",
        "split": "dev",
        "decomposition": "return yards of field goals of  Kris Brown ;return the  longest of #1 ;return the  shortest of #1 ;return the  difference of #2 and  #3",
        "program": [
            "SELECT['yards of field goals of Kris Brown']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['min', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of field goals of Kris Brown"
                ]
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of field goals of Kris Brown"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Kris Brown)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Kris Brown)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Kris Brown)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Kris Brown)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    2,
                    9,
                    10
                ],
                [
                    8
                ],
                [],
                [
                    11
                ],
                [
                    7,
                    12,
                    13
                ],
                [],
                [
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "difference",
                "is",
                "there",
                "between",
                "Kris",
                "Brown",
                "'s",
                "longest",
                "and",
                "shortest",
                "field",
                "goals",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    5
                ],
                [],
                [
                    2,
                    3,
                    10
                ],
                [
                    4
                ],
                [],
                [
                    7
                ],
                [],
                [],
                [],
                [],
                [
                    6
                ],
                [],
                [
                    9,
                    12,
                    13
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [],
                [
                    2
                ],
                [
                    9,
                    10
                ],
                [
                    7
                ],
                [],
                [],
                [
                    8,
                    14
                ],
                [
                    11
                ],
                [],
                [
                    12,
                    13
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    14
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    14
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    14
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_871_c6a3059d-380b-4746-a1cd-36a15ac609d9",
        "question_text": "Which team failed to score in the first two quarter?",
        "split": "train",
        "decomposition": "return teams ;return #1 that score in  the  first two quarters ;return #1 besides  #2",
        "program": [
            "SELECT['teams']",
            "FILTER['#1', 'that score in the first two quarters']",
            "DISCARD['#1', '#2']"
        ],
        "nested_expression": [
            "DISCARD",
            [
                "SELECT",
                "teams"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "teams"
                ],
                "that score in the first two quarters"
            ]
        ],
        "typed_nested_expression": [
            "DISCARD",
            [
                "SELECT",
                "GET_QUESTION_SPAN(teams)"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(teams)"
                ],
                "GET_QUESTION_SPAN(that score in the first two quarters)"
            ]
        ],
        "drop_nested_expression": [
            "DISCARD",
            [
                "SELECT",
                "GET_QUESTION_SPAN(teams)"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(teams)"
                ],
                "GET_QUESTION_SPAN(that score in the first two quarters)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "discard"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    2,
                    4
                ],
                [
                    3
                ],
                [],
                [
                    0,
                    5,
                    7,
                    8,
                    9
                ],
                [
                    6
                ],
                [],
                [
                    10
                ]
            ],
            "question_tokens": [
                "Which",
                "team",
                "failed",
                "to",
                "score",
                "in",
                "the",
                "first",
                "two",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    4,
                    5,
                    9
                ],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    8
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    8
                ],
                [],
                [
                    1,
                    2,
                    4
                ],
                [],
                [],
                [],
                [],
                [
                    5,
                    7,
                    9
                ],
                [],
                [],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2747_bfa32ce6-385e-4ef9-9fcf-6abfa386c5f4",
        "question_text": "How many points were the Cardinals ahead by the end of the first quarter?",
        "split": "train",
        "decomposition": "return first quarter points ;return first quarter points of the  Cardinals ;return difference of #1 and  #2 ;return difference of #2 and  #3",
        "program": [
            "SELECT['first quarter points']",
            "SELECT['first quarter points of the Cardinals']",
            "ARITHMETIC['difference', '#1', '#2']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "first quarter points of the Cardinals"
            ],
            [
                "ARITHMETIC_difference",
                [
                    "SELECT",
                    "first quarter points"
                ],
                [
                    "SELECT",
                    "first quarter points of the Cardinals"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(first quarter points of the Cardinals)"
                ]
            ],
            [
                "ARITHMETIC_difference",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(first quarter points)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(first quarter points of the Cardinals)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(first quarter points of the Cardinals)"
                ]
            ],
            [
                "ARITHMETIC_difference",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(first quarter points)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(first quarter points of the Cardinals)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3
                ],
                [],
                [
                    5,
                    7
                ],
                [],
                [],
                [
                    6,
                    9
                ],
                [],
                [],
                [],
                [
                    12,
                    13,
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "points",
                "were",
                "the",
                "Cardinals",
                "ahead",
                "by",
                "the",
                "end",
                "of",
                "the",
                "first",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    6
                ],
                [
                    7,
                    9
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    13
                ],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3
                ],
                [],
                [
                    6
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    13,
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    13
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    13
                ],
                [
                    8,
                    13
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1002_f6e8a20a-3b1f-4ed3-90a9-b3d8d5a82621",
        "question_text": "Which wide reciever threw a touchdown in the third quuarter?",
        "split": "train",
        "decomposition": "return wide recievers ;return #1 that threw a touchdown in  the  third quuarter",
        "program": [
            "SELECT['wide recievers']",
            "FILTER['#1', 'that threw a touchdown in the third quuarter']"
        ],
        "nested_expression": [
            "FILTER",
            [
                "SELECT",
                "wide recievers"
            ],
            "that threw a touchdown in the third quuarter"
        ],
        "typed_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(wide recievers)"
            ],
            "GET_QUESTION_SPAN(that threw a touchdown in the third quuarter)"
        ],
        "drop_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(wide recievers)"
            ],
            "GET_QUESTION_SPAN(that threw a touchdown in the third quuarter)"
        ],
        "operators": [
            "select",
            "filter"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    6,
                    8
                ],
                [
                    4,
                    7
                ],
                [
                    5
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "Which",
                "wide",
                "reciever",
                "threw",
                "a",
                "touchdown",
                "in",
                "the",
                "third",
                "quuarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    3
                ],
                [
                    4
                ],
                [
                    5,
                    6,
                    7
                ],
                [],
                [
                    8,
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    3,
                    6,
                    7,
                    8
                ],
                [
                    4
                ],
                [],
                [
                    5,
                    9
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_423_5c3ef4c2-8327-4b1e-8fbd-ef77bd89ab7a",
        "question_text": "What are the two shortest toucdown runs?",
        "split": "train",
        "decomposition": "return touchdown runs ;return the  two shortest of #1",
        "program": [
            "SELECT['touchdown runs']",
            "AGGREGATE['min', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "touchdown runs"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown runs)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown runs)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    3,
                    4
                ],
                [
                    0,
                    2,
                    5
                ],
                [
                    6,
                    7
                ]
            ],
            "question_tokens": [
                "What",
                "are",
                "the",
                "two",
                "shortest",
                "toucdown",
                "runs",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    3,
                    4
                ],
                [],
                [
                    2
                ],
                [],
                [
                    5,
                    6
                ],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    2
                ],
                [],
                [
                    6,
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1780_78691291-8f52-4abe-82b1-08ae67aba4fa",
        "question_text": "How many yards were Billy Kilmer's passes on average, to two decimal places?",
        "split": "train",
        "decomposition": "return yards of passes of  Billy Kilmer ;return average of #1 to two decimal places",
        "program": [
            "SELECT['yards of passes of Billy Kilmer']",
            "AGGREGATE['avg', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "yards of passes of Billy Kilmer"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of passes of Billy Kilmer)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of passes of Billy Kilmer)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    8,
                    9,
                    10,
                    12,
                    13,
                    14
                ],
                [
                    7,
                    11
                ],
                [
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "were",
                "Billy",
                "Kilmer",
                "'s",
                "passes",
                "on",
                "average",
                ",",
                "to",
                "two",
                "decimal",
                "places",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1,
                    3
                ],
                [
                    2,
                    4,
                    5,
                    6,
                    9,
                    10,
                    13,
                    14
                ],
                [
                    7
                ],
                [
                    8
                ],
                [
                    11,
                    12
                ],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3,
                    4,
                    7
                ],
                [
                    2,
                    5,
                    6,
                    8,
                    9,
                    10,
                    12,
                    13,
                    14
                ],
                [],
                [
                    11
                ],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    14
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_422_8d1c1ca3-2d3e-4cb0-af48-d6e824b4d563",
        "question_text": "How many yards did Moss average in receptions?",
        "split": "train",
        "decomposition": "return yards of receptions of  Moss ;return average of #1",
        "program": [
            "SELECT['yards of receptions of Moss']",
            "AGGREGATE['avg', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "yards of receptions of Moss"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of receptions of Moss)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of receptions of Moss)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4,
                    5,
                    7
                ],
                [
                    3,
                    6
                ],
                [
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "did",
                "Moss",
                "average",
                "in",
                "receptions",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    2,
                    5
                ],
                [
                    3
                ],
                [
                    4
                ],
                [
                    6
                ],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3
                ],
                [
                    2,
                    4,
                    5,
                    7
                ],
                [
                    6
                ],
                [],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1299_a64bb396-1efa-496c-977f-6706c4397322",
        "question_text": "How many years did the most damaging invasions occur",
        "split": "train",
        "decomposition": "return the  years that most damaging invasions occur ;return number of  #1",
        "program": [
            "SELECT['the years that most damaging invasions occur']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "the years that most damaging invasions occur"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the years that most damaging invasions occur)"
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Single_Event",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the years that most damaging invasions occur)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    6,
                    7
                ],
                [
                    4
                ],
                [
                    5,
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "did",
                "the",
                "most",
                "damaging",
                "invasions",
                "occur"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3
                ],
                [],
                [
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    6,
                    7
                ],
                [
                    4,
                    5
                ],
                [],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2814_0dbdfda9-2c37-4193-b279-cfc50cc7ddd6",
        "question_text": "How many yards was Lamar Miller's shortest touchdown run?",
        "split": "train",
        "decomposition": "return yards of touchdown runs of  Lamar Miller ;return the  shortest of #1",
        "program": [
            "SELECT['yards of touchdown runs of Lamar Miller']",
            "AGGREGATE['min', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "yards of touchdown runs of Lamar Miller"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdown runs of Lamar Miller)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdown runs of Lamar Miller)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9
                ],
                [],
                [
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "Lamar",
                "Miller",
                "'s",
                "shortest",
                "touchdown",
                "run",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    6,
                    7,
                    8,
                    9
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    6,
                    8
                ],
                [
                    5,
                    7,
                    9
                ],
                [],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1720_b2efb10e-f5f0-4f14-a420-c5a7e3d2156b",
        "question_text": "How many more yards was Matt Bryant's second field goal over his first?",
        "split": "train",
        "decomposition": "return yards of field goals of  Matt Bryant ;return second of #1 ;return first of #1 ;return difference of #2 and  #3",
        "program": [
            "SELECT['yards of field goals of Matt Bryant']",
            "PROJECT['second of #REF', '#1']",
            "AGGREGATE['min', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "PROJECT",
                "second of #REF",
                [
                    "SELECT",
                    "yards of field goals of Matt Bryant"
                ]
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of field goals of Matt Bryant"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(second of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Matt Bryant)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Matt Bryant)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(second of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Matt Bryant)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Matt Bryant)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    11
                ],
                [
                    3,
                    4,
                    5,
                    7,
                    8,
                    9,
                    10,
                    12,
                    13
                ],
                [],
                [
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "yards",
                "was",
                "Matt",
                "Bryant",
                "'s",
                "second",
                "field",
                "goal",
                "over",
                "his",
                "first",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    4,
                    7,
                    9,
                    10,
                    12
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    3,
                    4,
                    7,
                    8,
                    11
                ],
                [
                    5,
                    9,
                    10,
                    12,
                    13
                ],
                [],
                [],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    13
                ],
                [
                    5,
                    13
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_765_289a945b-f814-4310-bbbb-48a9964b424b",
        "question_text": "Who defeated the French at St. Quentin?",
        "split": "train",
        "decomposition": "return who  defeated French ;return #1 at St. Quentin",
        "program": [
            "SELECT['who defeated French']",
            "FILTER['#1', 'at St. Quentin']"
        ],
        "nested_expression": [
            "FILTER",
            [
                "SELECT",
                "who defeated French"
            ],
            "at St. Quentin"
        ],
        "typed_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(who defeated French)"
            ],
            "GET_QUESTION_SPAN(at St. Quentin)"
        ],
        "drop_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(who defeated French)"
            ],
            "GET_QUESTION_SPAN(at St. Quentin)"
        ],
        "operators": [
            "select",
            "filter"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    7
                ]
            ],
            "question_tokens": [
                "Who",
                "defeated",
                "the",
                "French",
                "at",
                "St.",
                "Quentin",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [],
                [],
                [
                    1,
                    2,
                    3
                ],
                [
                    4,
                    5
                ],
                [],
                [
                    6
                ],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [],
                [
                    2
                ],
                [
                    3
                ],
                [
                    1,
                    4,
                    5
                ],
                [
                    6
                ],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2111_fbde91a3-aef8-4184-b175-97f949bbf961",
        "question_text": "How many more yards did John Riggins rush in the Redskins game against the Vikings than he did in the game against the Dolphins?",
        "split": "train",
        "decomposition": "return yards that John Riggins did rush in  the  Redskins game  ;return yards that John Riggins did rushes in  the  Dolphins game  ;return sum of #1 ;return sum of #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['yards that John Riggins did rush in the Redskins game']",
            "SELECT['yards that John Riggins did rushes in the Dolphins game']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards that John Riggins did rush in the Redskins game"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards that John Riggins did rushes in the Dolphins game"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards that John Riggins did rush in the Redskins game)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards that John Riggins did rushes in the Dolphins game)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards that John Riggins did rush in the Redskins game)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards that John Riggins did rushes in the Dolphins game)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    15
                ],
                [
                    3,
                    4,
                    6,
                    7
                ],
                [
                    5,
                    8,
                    9,
                    10,
                    13,
                    14
                ],
                [
                    11,
                    12
                ],
                [
                    17
                ],
                [
                    16,
                    18,
                    19,
                    22,
                    23
                ],
                [
                    20,
                    21,
                    24
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "yards",
                "did",
                "John",
                "Riggins",
                "rush",
                "in",
                "the",
                "Redskins",
                "game",
                "against",
                "the",
                "Vikings",
                "than",
                "he",
                "did",
                "in",
                "the",
                "game",
                "against",
                "the",
                "Dolphins",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4,
                    6,
                    7
                ],
                [],
                [
                    5,
                    10
                ],
                [
                    8,
                    12
                ],
                [
                    11
                ],
                [],
                [],
                [
                    17
                ],
                [],
                [
                    14,
                    16,
                    23
                ],
                [
                    18,
                    21
                ],
                [
                    20
                ],
                [],
                [
                    24
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [
                    3,
                    4,
                    6,
                    7
                ],
                [
                    10,
                    14
                ],
                [
                    12
                ],
                [
                    11
                ],
                [
                    15
                ],
                [
                    17
                ],
                [
                    16,
                    23
                ],
                [
                    21
                ],
                [
                    20,
                    24
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    23
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    14
                ],
                [
                    8,
                    14
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    14
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    23
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    23
                ],
                [
                    17,
                    23
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    23
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    19,
                    20
                ],
                [
                    19,
                    23
                ],
                [
                    20,
                    20
                ],
                [
                    21,
                    21
                ],
                [
                    21,
                    23
                ],
                [
                    22,
                    23
                ],
                [
                    22,
                    22
                ],
                [
                    23,
                    23
                ],
                [
                    24,
                    24
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2649_2c394d24-2086-4a1b-a36b-067c01918d32",
        "question_text": "How many yards longer was Suisham's longest field goal in the first half compared to his shortest?",
        "split": "train",
        "decomposition": "return yards of field goals of  Suisham in  the  first half ;return longest of #1 ;return shortest of #1 ;return the  difference of #2 and  #3",
        "program": [
            "SELECT['yards of field goals of Suisham in the first half']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['min', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of field goals of Suisham in the first half"
                ]
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of field goals of Suisham in the first half"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Suisham in the first half)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Suisham in the first half)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "FILTER",
                        [
                            "SELECT",
                            "GET_QUESTION_SPAN(yards of field goals of Suisham)"
                        ],
                        "GET_QUESTION_SPAN(in the first half)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "FILTER",
                        [
                            "SELECT",
                            "GET_QUESTION_SPAN(yards of field goals of Suisham)"
                        ],
                        "GET_QUESTION_SPAN(in the first half)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                ],
                [],
                [],
                [],
                [],
                [
                    14,
                    15
                ],
                [
                    8,
                    9,
                    16,
                    17
                ],
                [
                    10,
                    12,
                    13
                ],
                [],
                [],
                [
                    18
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "Suisham",
                "'s",
                "longest",
                "field",
                "goal",
                "in",
                "the",
                "first",
                "half",
                "compared",
                "to",
                "his",
                "shortest",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    7
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    14
                ],
                [],
                [
                    6,
                    8,
                    9,
                    16,
                    17
                ],
                [],
                [
                    13
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    18
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    2,
                    4,
                    5
                ],
                [
                    6,
                    7
                ],
                [],
                [
                    10
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    14
                ],
                [],
                [
                    8,
                    9,
                    16,
                    17
                ],
                [],
                [
                    12,
                    13
                ],
                [],
                [],
                [],
                [
                    18
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    17
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    13
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    17
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    17
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    17
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3433_58a4cc1c-8614-4f9c-a434-cef829cca3c2",
        "question_text": "How many 7-yard touchdown passes were in the game?",
        "split": "train",
        "decomposition": "return touchdown passes in  the game ;return #1 that were 7-yard ;return number of  #2",
        "program": [
            "SELECT['touchdown passes in the game']",
            "FILTER['#1', 'that were 7-yard']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "touchdown passes in the game"
                ],
                "that were 7-yard"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes in the game)"
                ],
                "GET_QUESTION_SPAN(that were 7-yard)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_EQ",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes in the game)"
                ],
                "GET_QUESTION_NUMBER(7)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4
                ],
                [
                    6,
                    7
                ],
                [
                    9
                ],
                [
                    5,
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "7-yard",
                "touchdown",
                "passes",
                "were",
                "in",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4
                ],
                [],
                [],
                [
                    6
                ],
                [],
                [
                    5
                ],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [
                    9
                ],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1701_e866d28d-ff7e-403e-a91c-7ef485f4b14e",
        "question_text": "How many names were a part of the DIG?",
        "split": "train",
        "decomposition": "return names that were a part of the  DIG ;return number of  #1",
        "program": [
            "SELECT['names that were a part of the DIG']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "names that were a part of the DIG"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(names that were a part of the DIG)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(names that were a part of the DIG)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    8
                ],
                [
                    4,
                    5,
                    6,
                    7
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "names",
                "were",
                "a",
                "part",
                "of",
                "the",
                "DIG",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3
                ],
                [
                    2,
                    8
                ],
                [
                    4,
                    5,
                    6,
                    7
                ],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1795_6284ac32-1272-4dc5-af68-314f7088c382",
        "question_text": "How many total field goal yards did Clint Stitser have?",
        "split": "train",
        "decomposition": "return yards of field goals of  Clint Stitser ;return the  sum of #1",
        "program": [
            "SELECT['yards of field goals of Clint Stitser']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "yards of field goals of Clint Stitser"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals of Clint Stitser)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals of Clint Stitser)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    9
                ],
                [
                    7,
                    8
                ],
                [
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "total",
                "field",
                "goal",
                "yards",
                "did",
                "Clint",
                "Stitser",
                "have",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [
                    4,
                    7,
                    8,
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3,
                    4,
                    9
                ],
                [
                    2,
                    5,
                    6
                ],
                [
                    7
                ],
                [
                    8
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1007_80b30900-3f3e-4130-a507-a694803ffe15",
        "question_text": "How many total yards of field goals were under 35 yards?",
        "split": "train",
        "decomposition": "return field goals ;return yards  of #1 ;return #1 where #2 is lower than 35 ;return yards  of #3 ;return sum of #4",
        "program": [
            "SELECT['field goals']",
            "PROJECT['yards of #REF', '#1']",
            "COMPARATIVE['#1', '#2', 'is lower than 35']",
            "PROJECT['yards of #REF', '#3']",
            "AGGREGATE['sum', '#4']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "PROJECT",
                "yards of #REF",
                [
                    "COMPARATIVE",
                    [
                        "SELECT",
                        "field goals"
                    ],
                    [
                        "PROJECT",
                        "yards of #REF",
                        [
                            "SELECT",
                            "field goals"
                        ]
                    ],
                    "is lower than 35"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(yards of #REF)",
                [
                    "COMPARATIVE",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(field goals)"
                    ],
                    [
                        "PARTIAL_GROUP_sum",
                        [
                            "PARTIAL_SELECT_NUM",
                            "GET_QUESTION_SPAN(yards of #REF)"
                        ]
                    ],
                    [
                        "CONDITION",
                        "GET_QUESTION_SPAN(is lower than 35)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(yards of #REF)",
                [
                    "COMPARATIVE",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(field goals)"
                    ],
                    [
                        "PARTIAL_GROUP_sum",
                        [
                            "PARTIAL_SELECT_NUM",
                            "GET_QUESTION_SPAN(yards of #REF)"
                        ]
                    ],
                    [
                        "CONDITION",
                        "GET_QUESTION_SPAN(is lower than 35)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "comparative",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    5,
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    2
                ],
                [
                    3,
                    9,
                    10
                ],
                [],
                [],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "total",
                "yards",
                "of",
                "field",
                "goals",
                "were",
                "under",
                "35",
                "yards",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    1,
                    3
                ],
                [
                    0
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    2
                ],
                [],
                [
                    10
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    5,
                    7
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    2
                ],
                [
                    3,
                    10
                ],
                [],
                [
                    9
                ],
                [],
                [
                    11
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_904_54380ff1-7e06-47d5-9f44-7bd966d38bc0",
        "question_text": "What two players received at least two touchdown passes in the game from Brett Favre?",
        "split": "train",
        "decomposition": "return players in  the  game ;return touchdown passes that #1 received from  Brett Favre ;return the  number of  #2 for each #1 ;return #1 where #3 is at least two",
        "program": [
            "SELECT['players in the game']",
            "PROJECT['touchdown passes that #REF received from Brett Favre', '#1']",
            "GROUP['count', '#2', '#1']",
            "COMPARATIVE['#1', '#3', 'is at least two']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "players in the game"
            ],
            [
                "GROUP_count",
                [
                    "PROJECT",
                    "touchdown passes that #REF received from Brett Favre",
                    [
                        "SELECT",
                        "players in the game"
                    ]
                ],
                [
                    "SELECT",
                    "players in the game"
                ]
            ],
            "is at least two"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(players in the game)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(touchdown passes that #REF received from Brett Favre)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is at least two)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(players in the game)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(touchdown passes that #REF received from Brett Favre)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is at least two)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2
                ],
                [
                    3,
                    4
                ],
                [],
                [],
                [
                    1,
                    5,
                    6,
                    7,
                    8,
                    9
                ],
                [],
                [
                    11,
                    12,
                    13
                ],
                [
                    14,
                    15
                ]
            ],
            "question_tokens": [
                "What",
                "two",
                "players",
                "received",
                "at",
                "least",
                "two",
                "touchdown",
                "passes",
                "in",
                "the",
                "game",
                "from",
                "Brett",
                "Favre",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    2
                ],
                [],
                [
                    3
                ],
                [
                    4
                ],
                [],
                [],
                [
                    1,
                    6
                ],
                [],
                [
                    5,
                    7,
                    8
                ],
                [
                    9
                ],
                [],
                [
                    11
                ],
                [],
                [],
                [
                    13
                ],
                [
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    3
                ],
                [],
                [
                    2
                ],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    1,
                    5,
                    6
                ],
                [
                    9
                ],
                [
                    7,
                    8
                ],
                [
                    13
                ],
                [],
                [
                    11,
                    12,
                    15
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    14
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    11
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_691_ad055c7d-97cf-4705-af5b-0638c78b3fd7",
        "question_text": "Did Charles V die before or after Edward III?",
        "split": "train",
        "decomposition": "return when  Charles V die ;return when  Edward III die ;return if #1 is  before #2 ;return if #1 is  after #2 ;return which is true of #3 , #4",
        "program": [
            "SELECT['when Charles V die']",
            "SELECT['when Edward III die']",
            "BOOLEAN['#1', 'is before #2']",
            "BOOLEAN['#1', 'is after #2']",
            "COMPARISON['true', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_true",
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "when Charles V die"
                ],
                "is before #2"
            ],
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "when Charles V die"
                ],
                "is after #2"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_true",
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(when Charles V die)"
                ],
                "GET_QUESTION_SPAN(is before #2)"
            ],
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(when Charles V die)"
                ],
                "GET_QUESTION_SPAN(is after #2)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_true",
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(when Charles V die)"
                ],
                "GET_QUESTION_SPAN(is before #2)"
            ],
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(when Charles V die)"
                ],
                "GET_QUESTION_SPAN(is after #2)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "boolean",
            "boolean",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0
                ],
                [
                    2
                ],
                [],
                [
                    1,
                    3
                ],
                [],
                [
                    4,
                    5,
                    6
                ],
                [
                    7
                ],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "Did",
                "Charles",
                "V",
                "die",
                "before",
                "or",
                "after",
                "Edward",
                "III",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [],
                [],
                [],
                [
                    1
                ],
                [
                    2
                ],
                [
                    3
                ],
                [],
                [],
                [],
                [
                    4,
                    5,
                    6
                ],
                [],
                [
                    7
                ],
                [],
                [],
                [
                    8
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [],
                [
                    4
                ],
                [],
                [],
                [],
                [
                    3
                ],
                [
                    2
                ],
                [],
                [
                    6
                ],
                [
                    5
                ],
                [
                    7
                ],
                [
                    8
                ],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1001_6df15a31-ee13-4bde-8856-5671ba546a4f",
        "question_text": "How many more total yards of field goals did Jeff Reed make than Shayne Graham?",
        "split": "train",
        "decomposition": "return yards of field goals of  Jeff Reed ;return yards of field goals of  Shayne Graham ;return sum of #1 ;return sum of #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['yards of field goals of Jeff Reed']",
            "SELECT['yards of field goals of Shayne Graham']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of field goals of Jeff Reed"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of field goals of Shayne Graham"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals of Jeff Reed)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals of Shayne Graham)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals of Jeff Reed)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals of Shayne Graham)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    12
                ],
                [
                    3,
                    4,
                    6,
                    7
                ],
                [
                    5,
                    9
                ],
                [],
                [
                    8,
                    11,
                    13,
                    14
                ],
                [
                    10
                ],
                [
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "total",
                "yards",
                "of",
                "field",
                "goals",
                "did",
                "Jeff",
                "Reed",
                "make",
                "than",
                "Shayne",
                "Graham",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4,
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [
                    7,
                    8,
                    13
                ],
                [],
                [
                    10
                ],
                [
                    14
                ],
                [
                    11
                ],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    6
                ],
                [
                    3,
                    4,
                    7,
                    8
                ],
                [],
                [
                    10
                ],
                [],
                [
                    9,
                    12
                ],
                [
                    11,
                    13,
                    14
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    1,
                    4
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    14
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_833_3e686894-2e66-43e5-a1cc-773a34878743",
        "question_text": "Which historian gives the lowest estimate for loss of Jewish lives?",
        "split": "train",
        "decomposition": "return the  loss of Jewish lives ;return the  lowest estimate for #1 ;return historian that gives #2",
        "program": [
            "SELECT['the loss of Jewish lives']",
            "PROJECT['the lowest estimate for #REF', '#1']",
            "PROJECT['historian that gives #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "historian that gives #REF",
            [
                "PROJECT",
                "the lowest estimate for #REF",
                [
                    "SELECT",
                    "the loss of Jewish lives"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(historian that gives #REF)",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(the lowest estimate for #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the loss of Jewish lives)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(historian that gives #REF)",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(the lowest estimate for #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the loss of Jewish lives)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    4,
                    5
                ],
                [
                    7,
                    9
                ],
                [
                    6,
                    8,
                    10
                ],
                [
                    11
                ]
            ],
            "question_tokens": [
                "Which",
                "historian",
                "gives",
                "the",
                "lowest",
                "estimate",
                "for",
                "loss",
                "of",
                "Jewish",
                "lives",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    4
                ],
                [
                    6
                ],
                [
                    5,
                    10
                ],
                [],
                [
                    7,
                    8
                ],
                [
                    9
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    10
                ],
                [
                    2
                ],
                [
                    3
                ],
                [],
                [
                    4
                ],
                [
                    5,
                    7,
                    8
                ],
                [
                    9
                ],
                [],
                [
                    6
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    10
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1745_442481d4-5c6e-46f0-afa5-e768c723a939",
        "question_text": "Which quarterback had more passing touchdown yards?",
        "split": "train",
        "decomposition": "return quarterbacks ;return passing touchdown yards of #1 ;return sum of #2 for each #1 ;return #1 where #3 is highest",
        "program": [
            "SELECT['quarterbacks']",
            "PROJECT['passing touchdown yards of #REF', '#1']",
            "GROUP['sum', '#2', '#1']",
            "SUPERLATIVE['max', '#1', '#3']"
        ],
        "nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "quarterbacks"
            ],
            [
                "GROUP_sum",
                [
                    "PROJECT",
                    "passing touchdown yards of #REF",
                    [
                        "SELECT",
                        "quarterbacks"
                    ]
                ],
                [
                    "SELECT",
                    "quarterbacks"
                ]
            ]
        ],
        "typed_nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(quarterbacks)"
            ],
            [
                "PARTIAL_GROUP_sum",
                [
                    "PARTIAL_SELECT_NUM",
                    "GET_QUESTION_SPAN(passing touchdown yards of #REF)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(quarterbacks)"
            ],
            [
                "PARTIAL_SELECT_SINGLE_NUM",
                "GET_QUESTION_SPAN(passing touchdown yards of #REF)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "superlative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    6
                ],
                [
                    5
                ],
                [
                    4
                ],
                [
                    7
                ]
            ],
            "question_tokens": [
                "Which",
                "quarterback",
                "had",
                "more",
                "passing",
                "touchdown",
                "yards",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [],
                [
                    3,
                    4,
                    6
                ],
                [
                    2
                ],
                [
                    5
                ],
                [],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    6
                ],
                [
                    0
                ],
                [
                    1,
                    2,
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_616_9946c5b2-7d87-4f5b-ba65-7f25d4370e96",
        "question_text": "How many yards longer was the longest TD pass of the game than the shortest?",
        "split": "train",
        "decomposition": "return yards of TD passes in  the  game ;return the  longest of #1 ;return the  shortest of #1 ;return the  difference of #2 and  #3",
        "program": [
            "SELECT['yards of TD passes in the game']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['min', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of TD passes in the game"
                ]
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of TD passes in the game"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of TD passes in the game)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of TD passes in the game)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of TD passes in the game)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of TD passes in the game)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    6,
                    7,
                    8
                ],
                [],
                [
                    11
                ],
                [
                    12
                ],
                [
                    14
                ],
                [],
                [
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "the",
                "longest",
                "TD",
                "pass",
                "of",
                "the",
                "game",
                "than",
                "the",
                "shortest",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    12
                ],
                [],
                [
                    7,
                    8,
                    14
                ],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    2,
                    4
                ],
                [
                    6,
                    7,
                    8
                ],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    12
                ],
                [],
                [
                    14
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_917_1b4c2828-6a7f-4361-9759-9e3c74814c5e",
        "question_text": "What event happened first, Sweden and Russian concluding a seven-years truce, or the start of the period of low intensity warfare?",
        "split": "train",
        "decomposition": "return when  was Sweden and Russian concluding a seven-years truce ;return when  was the start of  the  period of low intensity warfare ;return which was first of  #1 , #2",
        "program": [
            "SELECT['when was Sweden and Russian concluding a seven-years truce']",
            "SELECT['when was the start of the period of low intensity warfare']",
            "COMPARISON['min', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "when was Sweden and Russian concluding a seven-years truce"
            ],
            [
                "SELECT",
                "when was the start of the period of low intensity warfare"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was Sweden and Russian concluding a seven-years truce)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the start of the period of low intensity warfare)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was Sweden and Russian concluding a seven-years truce)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the start of the period of low intensity warfare)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    10,
                    14,
                    15,
                    23
                ],
                [
                    7,
                    8,
                    9,
                    11
                ],
                [
                    6,
                    13
                ],
                [
                    16,
                    17,
                    18,
                    19,
                    21,
                    22
                ],
                [
                    20,
                    24,
                    25
                ]
            ],
            "question_tokens": [
                "What",
                "event",
                "happened",
                "first",
                ",",
                "Sweden",
                "and",
                "Russian",
                "concluding",
                "a",
                "seven",
                "-",
                "years",
                "truce",
                ",",
                "or",
                "the",
                "start",
                "of",
                "the",
                "period",
                "of",
                "low",
                "intensity",
                "warfare",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    14
                ],
                [
                    8
                ],
                [
                    6,
                    7,
                    9,
                    10
                ],
                [
                    5,
                    11
                ],
                [
                    13
                ],
                [
                    12
                ],
                [
                    15,
                    17,
                    18,
                    19
                ],
                [
                    20,
                    21
                ],
                [
                    22,
                    23
                ],
                [
                    24,
                    25
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    4,
                    9,
                    14,
                    15
                ],
                [
                    1,
                    2,
                    3,
                    5,
                    8,
                    10,
                    23
                ],
                [
                    11
                ],
                [
                    6,
                    7,
                    13,
                    17
                ],
                [],
                [],
                [
                    20,
                    22
                ],
                [
                    24,
                    25
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    3
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    24
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    24
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    24
                ],
                [
                    16,
                    17
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    24
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    19,
                    24
                ],
                [
                    19,
                    20
                ],
                [
                    20,
                    20
                ],
                [
                    21,
                    21
                ],
                [
                    21,
                    24
                ],
                [
                    22,
                    24
                ],
                [
                    22,
                    22
                ],
                [
                    23,
                    23
                ],
                [
                    24,
                    24
                ],
                [
                    25,
                    25
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2187_f63d8baf-f15d-4982-928c-d8ac4aa9fabf",
        "question_text": "Which player scored more field goals, Mike Nugent or Matt Prater?",
        "split": "train",
        "decomposition": "return field goals of Mike Nugent ;return field goals of Matt Prater ;return number of  #1 ;return number of  #2 ;return which is highest of #3 ,  #4",
        "program": [
            "SELECT['field goals of Mike Nugent']",
            "SELECT['field goals of Matt Prater']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals of Mike Nugent"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals of Matt Prater"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals of Mike Nugent)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals of Matt Prater)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals of Mike Nugent)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals of Matt Prater)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    9
                ],
                [],
                [
                    7
                ],
                [
                    8,
                    10,
                    11
                ],
                [
                    12
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "scored",
                "more",
                "field",
                "goals",
                ",",
                "Mike",
                "Nugent",
                "or",
                "Matt",
                "Prater",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    10
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    6,
                    9
                ],
                [
                    1,
                    2,
                    3,
                    4,
                    5,
                    10
                ],
                [],
                [],
                [],
                [
                    7,
                    8
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1743_8bb11a98-fe3c-402b-b5b9-9dba92a639ee",
        "question_text": "Which player caught the second shortest touchdown pass?",
        "split": "dev",
        "decomposition": "return the  second shortest touchdown pass ;return which player caught #1",
        "program": [
            "SELECT['the second shortest touchdown pass']",
            "PROJECT['which player caught #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "which player caught #REF",
            [
                "SELECT",
                "the second shortest touchdown pass"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(which player caught #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the second shortest touchdown pass)"
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(which player caught #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the second shortest touchdown pass)"
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    6,
                    7
                ],
                [
                    4
                ],
                [],
                [
                    8
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "caught",
                "the",
                "second",
                "shortest",
                "touchdown",
                "pass",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4
                ],
                [],
                [],
                [
                    6
                ],
                [
                    5,
                    7
                ],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    4,
                    5,
                    6,
                    7
                ],
                [],
                [],
                [],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_183_46b4fd6c-15a2-46ce-8d2c-b92da7921ba0",
        "question_text": "Which quarterback completed more passes?",
        "split": "train",
        "decomposition": "return quarterbacks ;return passes completed of #1 ;return number of  #2 for each #1 ;return #1 where #3 is highest",
        "program": [
            "SELECT['quarterbacks']",
            "PROJECT['passes completed of #REF', '#1']",
            "GROUP['count', '#2', '#1']",
            "SUPERLATIVE['max', '#1', '#3']"
        ],
        "nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "quarterbacks"
            ],
            [
                "GROUP_count",
                [
                    "PROJECT",
                    "passes completed of #REF",
                    [
                        "SELECT",
                        "quarterbacks"
                    ]
                ],
                [
                    "SELECT",
                    "quarterbacks"
                ]
            ]
        ],
        "typed_nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(quarterbacks)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(passes completed of #REF)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(quarterbacks)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(passes completed of #REF)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "superlative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    3
                ],
                [
                    4
                ],
                [
                    5
                ]
            ],
            "question_tokens": [
                "Which",
                "quarterback",
                "completed",
                "more",
                "passes",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2
                ],
                [],
                [],
                [
                    3
                ],
                [],
                [
                    4
                ],
                [],
                [],
                [],
                [
                    5
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0
                ],
                [
                    1
                ],
                [],
                [],
                [
                    2
                ],
                [
                    3
                ],
                [],
                [],
                [
                    4
                ],
                [
                    5
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    4
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_341_1dd97149-23f5-4406-80a5-66b5a5459051",
        "question_text": "Who's record did LaDainian Tomlinson break?",
        "split": "train",
        "decomposition": "return record that LaDainian Tomlinson did break ;return who  's record was  #1",
        "program": [
            "SELECT['record that LaDainian Tomlinson did break']",
            "PROJECT[\"who 's record was #REF\", '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "who 's record was #REF",
            [
                "SELECT",
                "record that LaDainian Tomlinson did break"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who 's record was #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(record that LaDainian Tomlinson did break)"
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who 's record was #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(record that LaDainian Tomlinson did break)"
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0
                ],
                [
                    2,
                    4,
                    5
                ],
                [
                    1,
                    3,
                    6
                ],
                [
                    7
                ]
            ],
            "question_tokens": [
                "Who",
                "'s",
                "record",
                "did",
                "LaDainian",
                "Tomlinson",
                "break",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3
                ],
                [],
                [
                    4,
                    5,
                    6
                ],
                [],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    3
                ],
                [],
                [
                    1,
                    2
                ],
                [
                    4,
                    5
                ],
                [],
                [
                    6
                ],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_744_2e82c5c6-82ff-4e85-b3ce-e9d867cc1ad8",
        "question_text": "How many more field goals did the Jets score than the Dolphin's scored?",
        "split": "train",
        "decomposition": "return field goals of Jets ;return number of  #1 ;return field goals of Dolphin ;return number of  #3 ;return difference of #2 and  #4",
        "program": [
            "SELECT['field goals of Jets']",
            "AGGREGATE['count', '#1']",
            "SELECT['field goals of Dolphin']",
            "AGGREGATE['count', '#3']",
            "ARITHMETIC['difference', '#2', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals of Jets"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals of Dolphin"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Jets)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Dolphin)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Jets)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Dolphin)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "select",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    9
                ],
                [
                    3,
                    4,
                    5
                ],
                [
                    6,
                    7
                ],
                [],
                [
                    8
                ],
                [
                    10,
                    11,
                    12,
                    13
                ],
                [
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "field",
                "goals",
                "did",
                "the",
                "Jets",
                "score",
                "than",
                "the",
                "Dolphin",
                "'s",
                "scored",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4,
                    5
                ],
                [],
                [
                    7
                ],
                [
                    8
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    12
                ],
                [
                    11
                ],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [
                    3,
                    4,
                    5
                ],
                [
                    7
                ],
                [],
                [],
                [
                    9,
                    11
                ],
                [
                    8,
                    13
                ],
                [],
                [],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    4
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    13
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    13
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    13
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_877_e0923cc2-e6ba-4461-bceb-5296ef276337",
        "question_text": "Did Chad Johnson score fewer touchdowns in the first half or the second half?",
        "split": "train",
        "decomposition": "return touchdowns of  Chad Johnson in  the first half  ;return touchdowns of  Chad Johnson in  the second half  ;return the number of  #1 ;return the number of  #2 ;return which is  fewer of  #3 , #4",
        "program": [
            "SELECT['touchdowns of Chad Johnson in the first half']",
            "SELECT['touchdowns of Chad Johnson in the second half']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['min', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdowns of Chad Johnson in the first half"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdowns of Chad Johnson in the second half"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdowns of Chad Johnson in the first half)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdowns of Chad Johnson in the second half)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_count_min",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns of Chad Johnson)"
                ],
                "GET_QUESTION_SPAN(in the first half)"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns of Chad Johnson)"
                ],
                "GET_QUESTION_SPAN(in the second half)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4
                ],
                [
                    3,
                    5
                ],
                [],
                [],
                [],
                [
                    6,
                    8,
                    9,
                    12,
                    13
                ],
                [],
                [
                    10
                ],
                [
                    14
                ]
            ],
            "question_tokens": [
                "Did",
                "Chad",
                "Johnson",
                "score",
                "fewer",
                "touchdowns",
                "in",
                "the",
                "first",
                "half",
                "or",
                "the",
                "second",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    4
                ],
                [],
                [
                    3,
                    5
                ],
                [],
                [],
                [
                    2
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    8,
                    9,
                    13
                ],
                [],
                [
                    10
                ],
                [],
                [],
                [
                    12
                ],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    10
                ],
                [
                    0,
                    1,
                    2,
                    4
                ],
                [
                    5
                ],
                [
                    3,
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    8,
                    9,
                    12,
                    13
                ],
                [],
                [],
                [],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    13
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    13
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    7,
                    13
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3282_ce7714a4-815f-4fd8-91c3-2f7702230d56",
        "question_text": "How many more yards did Stephen Hauschka kick for field goals in the second half than the first?",
        "split": "train",
        "decomposition": "return yards of field goals of  Stephen Hauschka in  the  second half ;return yards of field goals of  Stephen Hauschka in  the  first half ;return the  sum of #1 ;return the  sum of #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['yards of field goals of Stephen Hauschka in the second half']",
            "SELECT['yards of field goals of Stephen Hauschka in the first half']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of field goals of Stephen Hauschka in the second half"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of field goals of Stephen Hauschka in the first half"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals of Stephen Hauschka in the second half)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals of Stephen Hauschka in the first half)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Stephen Hauschka)"
                    ],
                    "GET_QUESTION_SPAN(in the second half)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Stephen Hauschka)"
                    ],
                    "GET_QUESTION_SPAN(in the first half)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    15
                ],
                [
                    3,
                    4
                ],
                [
                    6,
                    7
                ],
                [
                    5,
                    8
                ],
                [],
                [],
                [
                    9
                ],
                [
                    10,
                    11,
                    13,
                    14,
                    17
                ],
                [],
                [],
                [
                    18
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "yards",
                "did",
                "Stephen",
                "Hauschka",
                "kick",
                "for",
                "field",
                "goals",
                "in",
                "the",
                "second",
                "half",
                "than",
                "the",
                "first",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4
                ],
                [],
                [
                    7
                ],
                [],
                [
                    5
                ],
                [],
                [
                    6
                ],
                [
                    8
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    9,
                    10,
                    14
                ],
                [],
                [],
                [],
                [],
                [
                    17
                ],
                [],
                [],
                [
                    18
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [
                    3,
                    4,
                    6
                ],
                [
                    9
                ],
                [
                    7
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    15
                ],
                [],
                [
                    10
                ],
                [
                    11,
                    13,
                    14,
                    17
                ],
                [],
                [],
                [],
                [
                    18
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    17
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    14
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    17
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    17
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2841_7b1382da-9dd7-42a9-b235-6081fd761296",
        "question_text": "How many points did San Dieao lead by at halftime?",
        "split": "train",
        "decomposition": "return points at halftime ;return the  sum of #1 ;return points of San Dieao at halftime ;return the  difference of #2 and  #3 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['points at halftime']",
            "AGGREGATE['sum', '#1']",
            "SELECT['points of San Dieao at halftime']",
            "ARITHMETIC['difference', '#2', '#3']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "points of San Dieao at halftime"
            ],
            [
                "ARITHMETIC_difference",
                [
                    "AGGREGATE_sum",
                    [
                        "SELECT",
                        "points at halftime"
                    ]
                ],
                [
                    "SELECT",
                    "points of San Dieao at halftime"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points of San Dieao at halftime)"
                ]
            ],
            [
                "ARITHMETIC_difference",
                [
                    "AGGREGATE_sum",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(points at halftime)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(points of San Dieao at halftime)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points of San Dieao at halftime)"
                ]
            ],
            [
                "ARITHMETIC_difference",
                [
                    "AGGREGATE_sum",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(points at halftime)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(points of San Dieao at halftime)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "select",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    4
                ],
                [],
                [],
                [],
                [
                    3,
                    5
                ],
                [
                    6
                ],
                [
                    7
                ],
                [],
                [
                    8
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "points",
                "did",
                "San",
                "Dieao",
                "lead",
                "by",
                "at",
                "halftime",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    3
                ],
                [
                    5
                ],
                [
                    4,
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    7,
                    8
                ],
                [],
                [
                    9
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2
                ],
                [
                    4
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    5
                ],
                [
                    3
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    9,
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1907_9bb434e5-76eb-483e-9105-2ddd1466c43e",
        "question_text": "How many yards difference was Matt Cassel\u2019s first touchdown pass to Dwayne Bowe compared to Matt Cassel\u2019s second touchdown pass to Dwayne Bowe?",
        "split": "train",
        "decomposition": "return touchdown passes from  Matt  Cassel  to Dwayne Bowe  ;return the  first of #1 ;return the  second of #1 ;return the  yards of #2 ;return the  yards of #3 ;return the  difference of #4 and  #5",
        "program": [
            "SELECT['touchdown passes from Matt Cassel to Dwayne Bowe']",
            "AGGREGATE['min', '#1']",
            "PROJECT['the second of #REF', '#1']",
            "PROJECT['the yards of #REF', '#2']",
            "PROJECT['the yards of #REF', '#3']",
            "ARITHMETIC['difference', '#4', '#5']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "PROJECT",
                "the yards of #REF",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "touchdown passes from Matt Cassel to Dwayne Bowe"
                    ]
                ]
            ],
            [
                "PROJECT",
                "the yards of #REF",
                [
                    "PROJECT",
                    "the second of #REF",
                    [
                        "SELECT",
                        "touchdown passes from Matt Cassel to Dwayne Bowe"
                    ]
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(the yards of #REF)",
                    [
                        "AGGREGATE_min",
                        [
                            "SELECT",
                            "GET_QUESTION_SPAN(touchdown passes from Matt Cassel to Dwayne Bowe)"
                        ]
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(the yards of #REF)",
                    [
                        "PROJECT",
                        "GET_QUESTION_SPAN(the second of #REF)",
                        [
                            "SELECT",
                            "GET_QUESTION_SPAN(touchdown passes from Matt Cassel to Dwayne Bowe)"
                        ]
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(the yards of #REF)",
                    [
                        "AGGREGATE_min",
                        [
                            "SELECT",
                            "GET_QUESTION_SPAN(touchdown passes from Matt Cassel to Dwayne Bowe)"
                        ]
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(the yards of #REF)",
                    [
                        "PROJECT",
                        "GET_QUESTION_SPAN(the second of #REF)",
                        [
                            "SELECT",
                            "GET_QUESTION_SPAN(touchdown passes from Matt Cassel to Dwayne Bowe)"
                        ]
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project",
            "project",
            "project",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [
                    6,
                    7
                ],
                [],
                [],
                [
                    2,
                    4,
                    5,
                    8,
                    9,
                    10,
                    16,
                    19,
                    20,
                    21
                ],
                [],
                [],
                [
                    11,
                    14,
                    15,
                    17,
                    18
                ],
                [
                    12,
                    13
                ],
                [],
                [
                    23,
                    24
                ],
                [],
                [],
                [
                    25
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "difference",
                "was",
                "Matt",
                "Cassel",
                "\u2019s",
                "first",
                "touchdown",
                "pass",
                "to",
                "Dwayne",
                "Bowe",
                "compared",
                "to",
                "Matt",
                "Cassel",
                "\u2019s",
                "second",
                "touchdown",
                "pass",
                "to",
                "Dwayne",
                "Bowe",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [],
                [
                    7
                ],
                [],
                [],
                [],
                [
                    6
                ],
                [
                    2,
                    4,
                    9,
                    10,
                    20,
                    21
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    12,
                    13
                ],
                [],
                [
                    14,
                    18
                ],
                [],
                [],
                [],
                [
                    17
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    23
                ],
                [
                    24
                ],
                [
                    25
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [
                    6
                ],
                [
                    7
                ],
                [],
                [
                    9,
                    12
                ],
                [],
                [
                    2,
                    4,
                    19
                ],
                [
                    5,
                    10,
                    16,
                    21
                ],
                [],
                [],
                [],
                [
                    17
                ],
                [
                    14,
                    18
                ],
                [],
                [
                    13
                ],
                [],
                [],
                [
                    20,
                    23,
                    24
                ],
                [],
                [],
                [],
                [
                    25
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    24
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    13
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    24
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    24
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    21
                ],
                [
                    16,
                    24
                ],
                [
                    16,
                    18
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    20,
                    20
                ],
                [
                    21,
                    21
                ],
                [
                    22,
                    24
                ],
                [
                    22,
                    22
                ],
                [
                    23,
                    24
                ],
                [
                    23,
                    23
                ],
                [
                    24,
                    24
                ],
                [
                    25,
                    25
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2827_289cf480-74fd-412b-ad7d-c1d3a445bf46",
        "question_text": "How many more winds did the Knicks have compared to losses in February 2013?",
        "split": "train",
        "decomposition": "return wins of the  Knicks in  February 2013 ;return losses of the  Knicks in  February 2013 ;return number of  #1 ;return number of  #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['wins of the Knicks in February 2013']",
            "SELECT['losses of the Knicks in February 2013']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "wins of the Knicks in February 2013"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "losses of the Knicks in February 2013"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(wins of the Knicks in February 2013)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(losses of the Knicks in February 2013)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(wins of the Knicks in February 2013)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(losses of the Knicks in February 2013)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3
                ],
                [
                    4,
                    5,
                    7
                ],
                [
                    6
                ],
                [
                    8,
                    9,
                    10,
                    12,
                    13
                ],
                [
                    11
                ],
                [
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "winds",
                "did",
                "the",
                "Knicks",
                "have",
                "compared",
                "to",
                "losses",
                "in",
                "February",
                "2013",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    3
                ],
                [
                    4
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    8,
                    9,
                    10,
                    13
                ],
                [],
                [],
                [
                    11
                ],
                [
                    12
                ],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3
                ],
                [
                    4
                ],
                [],
                [],
                [],
                [
                    6
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    9,
                    12,
                    13
                ],
                [],
                [],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    13
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    13
                ],
                [
                    8,
                    13
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    13
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1602_79abbce8-1ed8-4dc6-ac4a-38fdd48cbc8c",
        "question_text": "How many yards was Cutler's longest touchdown pass?",
        "split": "train",
        "decomposition": "return yards of touchdown passes of  Cutler ;return the  longest of #1",
        "program": [
            "SELECT['yards of touchdown passes of Cutler']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "yards of touchdown passes of Cutler"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdown passes of Cutler)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdown passes of Cutler)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8
                ],
                [],
                [
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "Cutler",
                "'s",
                "longest",
                "touchdown",
                "pass",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    5,
                    6,
                    7,
                    8
                ],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    4
                ],
                [
                    5,
                    6,
                    7,
                    8
                ],
                [],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_220_59bfe6ce-c55f-437b-93b9-3046ef4592d5",
        "question_text": "How many yards of differential are there between the first field goal made and the first two touchdowns scored?",
        "split": "train",
        "decomposition": "return yards of the  first field goal made ;return yards of the  first two touchdowns scored ;return the  sum of #2 ;return the  difference of #1 and  #3",
        "program": [
            "SELECT['yards of the first field goal made']",
            "SELECT['yards of the first two touchdowns scored']",
            "AGGREGATE['sum', '#2']",
            "ARITHMETIC['difference', '#1', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "yards of the first field goal made"
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of the first two touchdowns scored"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of the first field goal made)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of the first two touchdowns scored)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of the first field goal made)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of the first two touchdowns scored)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    4
                ],
                [
                    6,
                    7,
                    11,
                    13
                ],
                [
                    3,
                    5,
                    8
                ],
                [
                    9
                ],
                [
                    2,
                    10,
                    16,
                    17,
                    18
                ],
                [
                    12,
                    14
                ],
                [
                    15,
                    19
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "of",
                "differential",
                "are",
                "there",
                "between",
                "the",
                "first",
                "field",
                "goal",
                "made",
                "and",
                "the",
                "first",
                "two",
                "touchdowns",
                "scored",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    6,
                    7
                ],
                [
                    4,
                    5
                ],
                [],
                [
                    9
                ],
                [],
                [
                    11
                ],
                [],
                [
                    2,
                    10,
                    17
                ],
                [],
                [],
                [
                    15,
                    16
                ],
                [],
                [],
                [
                    19
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    4,
                    6,
                    7
                ],
                [
                    5
                ],
                [
                    11,
                    13
                ],
                [],
                [],
                [],
                [
                    10
                ],
                [
                    2,
                    16,
                    17,
                    18
                ],
                [],
                [],
                [
                    19
                ]
            ],
            "question_spans": [
                [
                    0,
                    4
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    18
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    18
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    17
                ],
                [
                    8,
                    12
                ],
                [
                    8,
                    8
                ],
                [
                    8,
                    18
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    17
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2471_892d41e5-a0d5-466b-9839-9798c7da014c",
        "question_text": "How many more Catholics and Jews were there in 1861 over 1740?",
        "split": "train",
        "decomposition": "return Catholics in  1861 ;return Jews in  1861 ;return Catholics in  1740 ;return Jews in  1740 ;return number of  #1 ;return number of  #2 ;return number of  #3 ;return number of  #4 ;return sum of #5 and  #6 ;return sum of #7 and  #8 ;return difference of #9 and  #10",
        "program": [
            "SELECT['Catholics in 1861']",
            "SELECT['Jews in 1861']",
            "SELECT['Catholics in 1740']",
            "SELECT['Jews in 1740']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "AGGREGATE['count', '#3']",
            "AGGREGATE['count', '#4']",
            "ARITHMETIC['sum', '#5', '#6']",
            "ARITHMETIC['sum', '#7', '#8']",
            "ARITHMETIC['difference', '#9', '#10']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "Catholics in 1861"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "Jews in 1861"
                    ]
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "Catholics in 1740"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "Jews in 1740"
                    ]
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Catholics in 1861)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Jews in 1861)"
                    ]
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Catholics in 1740)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Jews in 1740)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Catholics in 1861)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Jews in 1861)"
                    ]
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Catholics in 1740)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Jews in 1740)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "select",
            "aggregate",
            "aggregate",
            "aggregate",
            "aggregate",
            "arithmetic",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    7
                ],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    5
                ],
                [
                    4,
                    6,
                    9
                ],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "Catholics",
                "and",
                "Jews",
                "were",
                "there",
                "in",
                "1861",
                "over",
                "1740",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    2
                ],
                [],
                [],
                [],
                [
                    1
                ],
                [],
                [],
                [],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [
                    3,
                    4
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [],
                [],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    11
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1966_806f7afb-66b1-4e17-8856-1565b2163c9e",
        "question_text": "Are there more Christians or Muslims in Albania?",
        "split": "train",
        "decomposition": "return Christians in  Albania ;return Muslims in  Albania ;return number of #1 ;return number of #2 ;return which  is  highest of #3 , #4",
        "program": [
            "SELECT['Christians in Albania']",
            "SELECT['Muslims in Albania']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "Christians in Albania"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "Muslims in Albania"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(Christians in Albania)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(Muslims in Albania)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(Christians in Albania)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(Muslims in Albania)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4
                ],
                [],
                [
                    3
                ],
                [
                    5,
                    6,
                    7
                ],
                [
                    8
                ]
            ],
            "question_tokens": [
                "Are",
                "there",
                "more",
                "Christians",
                "or",
                "Muslims",
                "in",
                "Albania",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    4
                ],
                [
                    3,
                    5
                ],
                [],
                [],
                [
                    6
                ],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    4
                ],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [
                    5,
                    6
                ],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2121_0020f226-9219-4296-9dd4-9997523f8edb",
        "question_text": "How many white immigrants, from 1770-1775, were Scots and Scots-Irish?",
        "split": "train",
        "decomposition": "return white immigrants from  1770-1775 that were Scots ;return white immigrants from  1770-1775 that were Scots-Irish ;return the  number of  #1 ;return the  number of  #2 ;return the  sum of #3 and  #4",
        "program": [
            "SELECT['white immigrants from 1770-1775 that were Scots']",
            "SELECT['white immigrants from 1770-1775 that were Scots-Irish']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['sum', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "white immigrants from 1770-1775 that were Scots"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "white immigrants from 1770-1775 that were Scots-Irish"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(white immigrants from 1770-1775 that were Scots)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(white immigrants from 1770-1775 that were Scots-Irish)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(white immigrants from 1770-1775 that were Scots)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(white immigrants from 1770-1775 that were Scots-Irish)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    3,
                    4,
                    9,
                    10,
                    12
                ],
                [
                    1,
                    6
                ],
                [
                    5,
                    7
                ],
                [
                    8,
                    11
                ],
                [],
                [
                    14
                ],
                [
                    13,
                    15,
                    16
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "white",
                "immigrants",
                ",",
                "from",
                "1770",
                "-",
                "1775",
                ",",
                "were",
                "Scots",
                "and",
                "Scots",
                "-",
                "Irish",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    4,
                    12
                ],
                [],
                [
                    2,
                    3
                ],
                [],
                [],
                [
                    7
                ],
                [
                    6
                ],
                [
                    8
                ],
                [],
                [
                    10
                ],
                [],
                [],
                [
                    14
                ],
                [
                    11,
                    13
                ],
                [
                    15
                ],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3
                ],
                [
                    4,
                    9,
                    10,
                    12
                ],
                [],
                [
                    2,
                    6
                ],
                [
                    7
                ],
                [
                    8
                ],
                [
                    11
                ],
                [],
                [],
                [
                    14
                ],
                [
                    15
                ],
                [
                    13,
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1642_887aa176-df12-4fe7-8d41-6535ee94bed8",
        "question_text": "How many 46 yard field goals did Mare make?",
        "split": "train",
        "decomposition": "return field goals of  Mare ;return #1 that are  46 yard ;return number of  #2",
        "program": [
            "SELECT['field goals of Mare']",
            "FILTER['#1', 'that are 46 yard']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "field goals of Mare"
                ],
                "that are 46 yard"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Mare)"
                ],
                "GET_QUESTION_SPAN(that are 46 yard)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_EQ",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Mare)"
                ],
                "GET_QUESTION_NUMBER(46)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    6
                ],
                [
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [
                    9
                ],
                [
                    7,
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "46",
                "yard",
                "field",
                "goals",
                "did",
                "Mare",
                "make",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    7,
                    8
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    6,
                    7
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    5
                ],
                [],
                [],
                [
                    9
                ],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_591_1ff61714-cb99-4381-92e3-20684b981148",
        "question_text": "How many more total yards of field goals did Jason Hanson kick than Mason Crosby?",
        "split": "train",
        "decomposition": "return yards of field goals of  Jason Hanson ;return yards of field goals of  Mason Crosby ;return sum of #1 ;return sum of #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['yards of field goals of Jason Hanson']",
            "SELECT['yards of field goals of Mason Crosby']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of field goals of Jason Hanson"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of field goals of Mason Crosby"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals of Jason Hanson)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals of Mason Crosby)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals of Jason Hanson)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals of Mason Crosby)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    12
                ],
                [
                    3,
                    4,
                    6,
                    7
                ],
                [
                    5,
                    9
                ],
                [],
                [
                    8,
                    10,
                    11,
                    13
                ],
                [
                    14
                ],
                [
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "total",
                "yards",
                "of",
                "field",
                "goals",
                "did",
                "Jason",
                "Hanson",
                "kick",
                "than",
                "Mason",
                "Crosby",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4,
                    6
                ],
                [],
                [],
                [],
                [],
                [
                    10
                ],
                [
                    9
                ],
                [
                    7,
                    8,
                    11
                ],
                [],
                [
                    13
                ],
                [
                    14
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    6
                ],
                [
                    3,
                    4,
                    7,
                    8
                ],
                [],
                [],
                [],
                [
                    9,
                    12,
                    13,
                    14
                ],
                [
                    10,
                    11
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    7
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    1,
                    4
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    14
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1703_e4f8de78-903f-41e0-bb26-4b6fffca7d86",
        "question_text": "What was the longest rushing TD?",
        "split": "train",
        "decomposition": "return rushing TDS ;return the  longest of #1",
        "program": [
            "SELECT['rushing TDS']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "rushing TDS"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(rushing TDS)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(rushing TDS)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    3,
                    5
                ],
                [
                    0,
                    2,
                    4
                ],
                [
                    6
                ]
            ],
            "question_tokens": [
                "What",
                "was",
                "the",
                "longest",
                "rushing",
                "TD",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    3
                ],
                [],
                [
                    2
                ],
                [
                    4,
                    5
                ],
                [],
                [
                    6
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    3,
                    5
                ],
                [
                    2,
                    4
                ],
                [],
                [
                    6
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1999_52235822-7504-4d0a-ab86-7183e29e5bc2",
        "question_text": "What are the two longest field goals?",
        "split": "train",
        "decomposition": "return field goals ;return the  two longest of #1",
        "program": [
            "SELECT['field goals']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "field goals"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    3,
                    4,
                    5
                ],
                [
                    0,
                    2
                ],
                [
                    6,
                    7
                ]
            ],
            "question_tokens": [
                "What",
                "are",
                "the",
                "two",
                "longest",
                "field",
                "goals",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    3,
                    4,
                    5
                ],
                [],
                [
                    2
                ],
                [
                    6
                ],
                [],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    3,
                    4,
                    5
                ],
                [
                    2
                ],
                [],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1998_f66ee451-7c0e-4c0e-aa6f-f054c49d9a86",
        "question_text": "How many more troops did Howe have than Washington when they arrived in New York in July?",
        "split": "dev",
        "decomposition": "return troops of Howe when  they arrived in  New York in July ;return troops of Washington when  they arrived in  New York in July ;return number of  #1 ;return number of  #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['troops of Howe when they arrived in New York in July']",
            "SELECT['troops of Washington when they arrived in New York in July']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "troops of Howe when they arrived in New York in July"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "troops of Washington when they arrived in New York in July"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(troops of Howe when they arrived in New York in July)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(troops of Washington when they arrived in New York in July)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(troops of Howe when they arrived in New York in July)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(troops of Washington when they arrived in New York in July)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    5,
                    7
                ],
                [
                    4,
                    6,
                    8,
                    9
                ],
                [],
                [
                    10,
                    14,
                    16
                ],
                [
                    11,
                    12,
                    13,
                    15
                ],
                [
                    17
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "troops",
                "did",
                "Howe",
                "have",
                "than",
                "Washington",
                "when",
                "they",
                "arrived",
                "in",
                "New",
                "York",
                "in",
                "July",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    8,
                    9
                ],
                [],
                [],
                [],
                [],
                [
                    7,
                    10,
                    16
                ],
                [
                    11
                ],
                [
                    13
                ],
                [
                    15
                ],
                [
                    14
                ],
                [],
                [
                    17
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    4,
                    5,
                    6
                ],
                [
                    7
                ],
                [
                    8
                ],
                [],
                [],
                [
                    16
                ],
                [
                    10,
                    14
                ],
                [
                    11
                ],
                [
                    13
                ],
                [
                    17
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    16
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    16
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    16
                ],
                [
                    11,
                    16
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    16
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1757_9aaf9830-59d2-4f29-adfa-4312e5ebd482",
        "question_text": "How many yards was  John Carney's longest field goal?",
        "split": "train",
        "decomposition": "return yards of field goals of  John Carney ;return the  longest of #1",
        "program": [
            "SELECT['yards of field goals of John Carney']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "yards of field goals of John Carney"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals of John Carney)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals of John Carney)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    5,
                    6,
                    7,
                    8,
                    9
                ],
                [
                    4
                ],
                [
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "John",
                "Carney",
                "'s",
                "longest",
                "field",
                "goal",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    6,
                    7,
                    8,
                    9
                ],
                [],
                [
                    4,
                    5
                ],
                [],
                [],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    5,
                    9
                ],
                [
                    6,
                    7,
                    8
                ],
                [
                    4
                ],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_186_2897de4e-9e58-4c7f-90f5-52005cbc8427",
        "question_text": "How many different years did the Azov campaigns take place?",
        "split": "train",
        "decomposition": "return years of the  Azov campaigns ;return number of  different #1",
        "program": [
            "SELECT['years of the Azov campaigns']",
            "PROJECT['number of different #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "number of different #REF",
            [
                "SELECT",
                "years of the Azov campaigns"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(number of different #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years of the Azov campaigns)"
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(number of different #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years of the Azov campaigns)"
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    3,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    4,
                    8
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "different",
                "years",
                "did",
                "the",
                "Azov",
                "campaigns",
                "take",
                "place",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [],
                [
                    3,
                    4
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    7
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    4
                ],
                [
                    2,
                    3
                ],
                [
                    5
                ],
                [
                    7
                ],
                [
                    8
                ],
                [
                    6,
                    9
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_574_23ce6f14-41aa-41a1-8632-21426b6593fb",
        "question_text": "How many yards are between the longest and shortest field goal?",
        "split": "train",
        "decomposition": "return yards of field goals ;return longest of #1 ;return shortest of #1 ;return difference of #2 and  #3",
        "program": [
            "SELECT['yards of field goals']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['min', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of field goals"
                ]
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of field goals"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    4
                ],
                [
                    2,
                    6
                ],
                [],
                [],
                [
                    7
                ],
                [
                    3,
                    8,
                    9,
                    10
                ],
                [],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "are",
                "between",
                "the",
                "longest",
                "and",
                "shortest",
                "field",
                "goal",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    6
                ],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    4,
                    7
                ],
                [],
                [
                    8,
                    9,
                    10
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    2,
                    3
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    8,
                    9,
                    10
                ],
                [],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1660_2eef5797-391c-4768-b7c4-7f0bc9a95338",
        "question_text": "Did Byron Leftwich throw any touchdowns?",
        "split": "train",
        "decomposition": "return touchdowns ;return if  Byron Leftwich throw any  #1",
        "program": [
            "SELECT['touchdowns']",
            "BOOLEAN['#1', 'if Byron Leftwich throw any #REF']"
        ],
        "nested_expression": [
            "BOOLEAN",
            [
                "SELECT",
                "touchdowns"
            ],
            "if Byron Leftwich throw any #REF"
        ],
        "typed_nested_expression": [
            "BOOLEAN",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdowns)"
            ],
            "GET_QUESTION_SPAN(if Byron Leftwich throw any #REF)"
        ],
        "drop_nested_expression": [
            "BOOLEAN",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdowns)"
            ],
            "GET_QUESTION_SPAN(if Byron Leftwich throw any #REF)"
        ],
        "operators": [
            "select",
            "boolean"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4,
                    5
                ],
                [
                    6
                ]
            ],
            "question_tokens": [
                "Did",
                "Byron",
                "Leftwich",
                "throw",
                "any",
                "touchdowns",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    4
                ],
                [
                    3
                ],
                [
                    5
                ],
                [
                    6
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    2
                ],
                [],
                [
                    3
                ],
                [
                    4
                ],
                [
                    6
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1417_8b21980f-a97a-4676-a14d-470bd306372e",
        "question_text": "How many touchdowns were between 1 and 10 yards in length?",
        "split": "train",
        "decomposition": "return length of touchdowns in  yards ;return #1 that were between 1 and  10 ;return number of  #2",
        "program": [
            "SELECT['length of touchdowns in yards']",
            "FILTER['#1', 'that were between 1 and 10']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "length of touchdowns in yards"
                ],
                "that were between 1 and 10"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(length of touchdowns in yards)"
                ],
                "GET_QUESTION_SPAN(that were between 1 and 10)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(length of touchdowns in yards)"
                ],
                "GET_QUESTION_SPAN(that were between 1 and 10)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    5,
                    8,
                    9
                ],
                [
                    4
                ],
                [
                    6,
                    7
                ],
                [
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "touchdowns",
                "were",
                "between",
                "1",
                "and",
                "10",
                "yards",
                "in",
                "length",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    7
                ],
                [],
                [
                    9
                ],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3,
                    4,
                    8
                ],
                [
                    2,
                    7
                ],
                [],
                [
                    5,
                    9
                ],
                [],
                [
                    6
                ],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2875_78331bdc-55de-4160-adf0-6cc214d2985d",
        "question_text": "How many passes did Austin Seferian-Jenkins catch from under 10 yards?",
        "split": "train",
        "decomposition": "return passes Austin Seferian-Jenkins did catch ;return yards of #1 ;return #1 where #2 is lower than 10 ;return number of  #3",
        "program": [
            "SELECT['passes Austin Seferian-Jenkins did catch']",
            "PROJECT['yards of #REF', '#1']",
            "COMPARATIVE['#1', '#2', 'is lower than 10']",
            "AGGREGATE['count', '#3']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "passes Austin Seferian-Jenkins did catch"
                ],
                [
                    "PROJECT",
                    "yards of #REF",
                    [
                        "SELECT",
                        "passes Austin Seferian-Jenkins did catch"
                    ]
                ],
                "is lower than 10"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(passes Austin Seferian-Jenkins did catch)"
                ],
                [
                    "PARTIAL_GROUP_sum",
                    [
                        "PARTIAL_SELECT_NUM",
                        "GET_QUESTION_SPAN(yards of #REF)"
                    ]
                ],
                [
                    "CONDITION",
                    "GET_QUESTION_SPAN(is lower than 10)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_LT",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(passes Austin Seferian-Jenkins did catch)"
                ],
                "GET_QUESTION_NUMBER(10)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "comparative",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [
                    2,
                    4,
                    5,
                    7,
                    10,
                    11
                ],
                [
                    6,
                    9
                ],
                [
                    8,
                    13
                ],
                [
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "passes",
                "did",
                "Austin",
                "Seferian",
                "-",
                "Jenkins",
                "catch",
                "from",
                "under",
                "10",
                "yards",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [],
                [
                    2,
                    4,
                    5
                ],
                [],
                [
                    6
                ],
                [
                    9
                ],
                [
                    7,
                    8
                ],
                [
                    10,
                    11,
                    12
                ],
                [],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3,
                    8
                ],
                [
                    2,
                    4
                ],
                [
                    5,
                    7,
                    10,
                    11
                ],
                [
                    6
                ],
                [],
                [
                    13
                ],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2944_c830d75d-4d60-4518-961f-dda050a8ae00",
        "question_text": "How many total yards did the player with the most field goals of the game kick?",
        "split": "train",
        "decomposition": "return player with the  most field goals of the   game ;return yards of field goals of  #1 ;return the  sum of #2",
        "program": [
            "SELECT['player with the most field goals of the game']",
            "PROJECT['yards of field goals of #REF', '#1']",
            "AGGREGATE['sum', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "PROJECT",
                "yards of field goals of #REF",
                [
                    "SELECT",
                    "player with the most field goals of the game"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(yards of field goals of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(player with the most field goals of the game)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(yards of field goals of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(player with the most field goals of the game)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    10,
                    11,
                    15
                ],
                [
                    5,
                    6,
                    8,
                    9,
                    13
                ],
                [
                    7
                ],
                [
                    12
                ],
                [
                    14,
                    16
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "total",
                "yards",
                "did",
                "the",
                "player",
                "with",
                "the",
                "most",
                "field",
                "goals",
                "of",
                "the",
                "game",
                "kick",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    4,
                    10,
                    11
                ],
                [],
                [
                    6
                ],
                [
                    7,
                    9
                ],
                [],
                [],
                [
                    12
                ],
                [],
                [
                    14,
                    15
                ],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    10
                ],
                [
                    2,
                    3,
                    4,
                    11,
                    15
                ],
                [
                    6
                ],
                [
                    5,
                    8,
                    9,
                    12,
                    13
                ],
                [],
                [],
                [
                    7
                ],
                [
                    14,
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    15
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    15
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    15
                ],
                [
                    8,
                    15
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_800_8e156221-de64-44df-b35a-7cd333a179dc",
        "question_text": "How many troops and battalions did Governor-General Adriaan Valckenier send to stop the revolt?",
        "split": "train",
        "decomposition": "return troops Governor-General Adriaan Valckenier did send to stop the  revolt ;return battalions Governor-General Adriaan Valckenier did send to stop the  revolt ;return number of  #1 ;return number of  #2 ;return sum of #3 and  #4",
        "program": [
            "SELECT['troops Governor-General Adriaan Valckenier did send to stop the revolt']",
            "SELECT['battalions Governor-General Adriaan Valckenier did send to stop the revolt']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['sum', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "troops Governor-General Adriaan Valckenier did send to stop the revolt"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "battalions Governor-General Adriaan Valckenier did send to stop the revolt"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(troops Governor-General Adriaan Valckenier did send to stop the revolt)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(battalions Governor-General Adriaan Valckenier did send to stop the revolt)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(troops Governor-General Adriaan Valckenier did send to stop the revolt)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(battalions Governor-General Adriaan Valckenier did send to stop the revolt)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    3
                ],
                [
                    1
                ],
                [
                    5,
                    6,
                    7,
                    8
                ],
                [
                    4,
                    10
                ],
                [
                    9,
                    12
                ],
                [
                    11,
                    13,
                    14
                ],
                [
                    15,
                    16
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "troops",
                "and",
                "battalions",
                "did",
                "Governor",
                "-",
                "General",
                "Adriaan",
                "Valckenier",
                "send",
                "to",
                "stop",
                "the",
                "revolt",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [],
                [
                    4
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    7
                ],
                [],
                [
                    10
                ],
                [
                    9
                ],
                [],
                [
                    11
                ],
                [
                    13
                ],
                [],
                [],
                [
                    15
                ],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3
                ],
                [
                    5
                ],
                [],
                [
                    7,
                    8
                ],
                [
                    4,
                    6
                ],
                [
                    10
                ],
                [],
                [
                    9,
                    12
                ],
                [
                    11,
                    13
                ],
                [
                    15
                ],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    4
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    15
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    15
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    15
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    15
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    15
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1651_38effc13-3de5-4972-9320-37c59a3b60f4",
        "question_text": "How many years did it take for the Papacy to change its mind about supporting James after 1691?",
        "split": "train",
        "decomposition": "return year when  the  Papacy changes its mind about supporting James ;return the  difference of #1 and  1691",
        "program": [
            "SELECT['year when the Papacy changes its mind about supporting James']",
            "PROJECT['the difference of #REF and 1691', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "the difference of #REF and 1691",
            [
                "SELECT",
                "year when the Papacy changes its mind about supporting James"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the difference of #REF and 1691)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(year when the Papacy changes its mind about supporting James)"
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Single_Event",
            [
                "SELECT",
                "GET_QUESTION_SPAN(did it take for the Papacy to change its mind about supporting James after 1691?)"
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    8
                ],
                [
                    7,
                    9,
                    10,
                    11,
                    12,
                    14,
                    15,
                    16
                ],
                [
                    13,
                    17,
                    18
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "did",
                "it",
                "take",
                "for",
                "the",
                "Papacy",
                "to",
                "change",
                "its",
                "mind",
                "about",
                "supporting",
                "James",
                "after",
                "1691",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    8
                ],
                [
                    16
                ],
                [
                    7,
                    9,
                    10,
                    15
                ],
                [
                    11,
                    12,
                    13
                ],
                [
                    14
                ],
                [
                    17,
                    18
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2,
                    16
                ],
                [
                    3,
                    4,
                    5
                ],
                [
                    6,
                    8,
                    12
                ],
                [
                    7,
                    9,
                    10,
                    15
                ],
                [
                    11,
                    13,
                    14
                ],
                [
                    17,
                    18
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    17
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    17
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    17
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    17
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    17
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    17
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    17
                ],
                [
                    14,
                    17
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    17
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3000_7fedbdf2-b38f-41e4-b21b-54f1773d64c7",
        "question_text": "How many points greater was the lead that the Eagles had over the Jets in the 2nd quarter than at the end of the game?",
        "split": "train",
        "decomposition": "return points of Eagles in  2nd quarter ;return points of Jets in  2nd quarter ;return difference of #1 and  #2 ;return points of Eagles at end of  game ;return points of Jets at end of  game ;return difference of #4 and  #5 ;return difference of #3 and  #6",
        "program": [
            "SELECT['points of Eagles in 2nd quarter']",
            "SELECT['points of Jets in 2nd quarter']",
            "ARITHMETIC['difference', '#1', '#2']",
            "SELECT['points of Eagles at end of game']",
            "SELECT['points of Jets at end of game']",
            "ARITHMETIC['difference', '#4', '#5']",
            "ARITHMETIC['difference', '#3', '#6']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "ARITHMETIC_difference",
                [
                    "SELECT",
                    "points of Eagles in 2nd quarter"
                ],
                [
                    "SELECT",
                    "points of Jets in 2nd quarter"
                ]
            ],
            [
                "ARITHMETIC_difference",
                [
                    "SELECT",
                    "points of Eagles at end of game"
                ],
                [
                    "SELECT",
                    "points of Jets at end of game"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "ARITHMETIC_difference",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(points of Eagles in 2nd quarter)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(points of Jets in 2nd quarter)"
                    ]
                ]
            ],
            [
                "ARITHMETIC_difference",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(points of Eagles at end of game)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(points of Jets at end of game)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "ARITHMETIC_difference",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(points of Eagles in 2nd quarter)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(points of Jets in 2nd quarter)"
                    ]
                ]
            ],
            [
                "ARITHMETIC_difference",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(points of Eagles at end of game)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(points of Jets at end of game)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic",
            "select",
            "select",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    6
                ],
                [
                    3
                ],
                [
                    11
                ],
                [
                    9,
                    13
                ],
                [
                    16
                ],
                [],
                [
                    18
                ],
                [],
                [
                    17
                ],
                [],
                [
                    21
                ],
                [
                    24,
                    25
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "points",
                "greater",
                "was",
                "the",
                "lead",
                "that",
                "the",
                "Eagles",
                "had",
                "over",
                "the",
                "Jets",
                "in",
                "the",
                "2nd",
                "quarter",
                "than",
                "at",
                "the",
                "end",
                "of",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    3
                ],
                [
                    2
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    9,
                    13
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    16
                ],
                [
                    17
                ],
                [],
                [],
                [
                    18
                ],
                [],
                [],
                [
                    21
                ],
                [],
                [],
                [
                    24
                ],
                [
                    25
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    6,
                    9
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    13
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    18
                ],
                [],
                [
                    16
                ],
                [
                    17
                ],
                [],
                [],
                [],
                [],
                [
                    25
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    24
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    17
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    17
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    17
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    17
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    24
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    19,
                    24
                ],
                [
                    20,
                    20
                ],
                [
                    20,
                    21
                ],
                [
                    20,
                    24
                ],
                [
                    21,
                    21
                ],
                [
                    22,
                    24
                ],
                [
                    22,
                    22
                ],
                [
                    23,
                    24
                ],
                [
                    23,
                    23
                ],
                [
                    24,
                    24
                ],
                [
                    25,
                    25
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_466_66d6d18d-87ab-4311-b167-2f85089fd131",
        "question_text": "How many points did the Raven's have during the first half?",
        "split": "train",
        "decomposition": "return points that the  Raven 's have during the first half ;return the  number of  #1",
        "program": [
            "SELECT[\"points that the Raven 's have during the first half\"]",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "points that the Raven 's have during the first half"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(points that the Raven 's have during the first half)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "SELECT",
                "GET_QUESTION_SPAN(points that the Raven 's have during the first half)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    5,
                    6
                ],
                [
                    3,
                    4,
                    7,
                    8,
                    9
                ],
                [
                    10,
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "points",
                "did",
                "the",
                "Raven",
                "'s",
                "have",
                "during",
                "the",
                "first",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    6,
                    7
                ],
                [
                    8,
                    9,
                    10
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    7
                ],
                [
                    5,
                    6
                ],
                [
                    4,
                    8,
                    9
                ],
                [],
                [
                    10,
                    11,
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    11
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_695_ee40274e-a5e5-48d2-8e8d-ab302b61f6eb",
        "question_text": "How many days passed between May 23, 1430 to May 30, 1431?",
        "split": "train",
        "decomposition": "return days between May 23 ,  1430 and  May  30 ,   1431 ;return the  number of  #1",
        "program": [
            "SELECT['days between May 23 , 1430 and May 30 , 1431']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "days between May 23 , 1430 and May 30 , 1431"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(days between May 23 , 1430 and May 30 , 1431)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "SELECT",
                "GET_QUESTION_SPAN(days between May 23 , 1430 and May 30 , 1431)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    9,
                    10
                ],
                [
                    6,
                    7,
                    8,
                    12
                ],
                [
                    11,
                    13,
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "days",
                "passed",
                "between",
                "May",
                "23",
                ",",
                "1430",
                "to",
                "May",
                "30",
                ",",
                "1431",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4
                ],
                [],
                [
                    6,
                    7,
                    8,
                    12
                ],
                [
                    9,
                    11
                ],
                [
                    5,
                    10
                ],
                [
                    13,
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4,
                    8,
                    9
                ],
                [
                    6,
                    7,
                    11,
                    12
                ],
                [
                    5,
                    10
                ],
                [
                    13,
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    13
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    13
                ],
                [
                    5,
                    13
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    13
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2596_cda9b65b-21c6-46a5-ba85-0569f7b8e366",
        "question_text": "How many percent of people were not vietnamese?",
        "split": "train",
        "decomposition": "return the  percent of people who  were vietnamese ;return the  difference of 100 and  #1",
        "program": [
            "SELECT['the percent of people who were vietnamese']",
            "PROJECT['the difference of 100 and #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "the difference of 100 and #REF",
            [
                "SELECT",
                "the percent of people who were vietnamese"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the difference of 100 and #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the percent of people who were vietnamese)"
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            "SELECT_IMPLICIT_NUM(100)",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the percent of people who were vietnamese)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "percent",
                "of",
                "people",
                "were",
                "not",
                "vietnamese",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    6
                ],
                [],
                [
                    4,
                    5
                ],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [],
                [],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2930_955eb054-9a52-4742-8a5e-646cc74121ef",
        "question_text": "How many of the scientists and physicians lived to be over 70 years old?",
        "split": "train",
        "decomposition": "return scientists that lived to be over 70 years old ;return physicians that lived to be over 70 years old ;return number of  #1 ;return number of  #2 ;return sum of #3 and  #4",
        "program": [
            "SELECT['scientists that lived to be over 70 years old']",
            "SELECT['physicians that lived to be over 70 years old']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['sum', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "scientists that lived to be over 70 years old"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "physicians that lived to be over 70 years old"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(scientists that lived to be over 70 years old)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(physicians that lived to be over 70 years old)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(scientists that lived to be over 70 years old)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(physicians that lived to be over 70 years old)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    5
                ],
                [
                    1,
                    4,
                    6
                ],
                [
                    2,
                    3
                ],
                [],
                [
                    7,
                    8,
                    10
                ],
                [
                    9,
                    13
                ],
                [
                    11,
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "of",
                "the",
                "scientists",
                "and",
                "physicians",
                "lived",
                "to",
                "be",
                "over",
                "70",
                "years",
                "old",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    5
                ],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    7,
                    8,
                    10
                ],
                [
                    11,
                    12
                ],
                [
                    13
                ],
                [
                    9
                ],
                [],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    4,
                    5
                ],
                [],
                [
                    6,
                    7
                ],
                [],
                [
                    9
                ],
                [],
                [
                    11
                ],
                [
                    8,
                    10
                ],
                [],
                [
                    13
                ],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    6
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    13
                ],
                [
                    8,
                    13
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    13
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_35_c6bfb909-a5da-4804-a3d6-c64dec267516",
        "question_text": "how many yards did Horn pass?",
        "split": "train",
        "decomposition": "return yards that Horn did pass ;return sum of #1",
        "program": [
            "SELECT['yards that Horn did pass']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "yards that Horn did pass"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards that Horn did pass)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards that Horn did pass)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    4
                ],
                [
                    5,
                    6
                ]
            ],
            "question_tokens": [
                "how",
                "many",
                "yards",
                "did",
                "Horn",
                "pass",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [
                    4
                ],
                [
                    5
                ],
                [
                    6
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4
                ],
                [],
                [],
                [
                    5,
                    6
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1437_2ebaeea5-bbcf-4fb8-bb77-0092425dcf08",
        "question_text": "How many yards did the first two defensive touchdowns combine for?",
        "split": "train",
        "decomposition": "return the  first two defensive touchdowns ;return yards of #1 ;return sum of #2",
        "program": [
            "SELECT['the first two defensive touchdowns']",
            "PROJECT['yards of #REF', '#1']",
            "AGGREGATE['sum', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "PROJECT",
                "yards of #REF",
                [
                    "SELECT",
                    "the first two defensive touchdowns"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(yards of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the first two defensive touchdowns)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(yards of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the first two defensive touchdowns)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    8,
                    9
                ],
                [
                    4,
                    6
                ],
                [
                    5
                ],
                [
                    7,
                    10
                ],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "did",
                "the",
                "first",
                "two",
                "defensive",
                "touchdowns",
                "combine",
                "for",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    8
                ],
                [],
                [
                    6
                ],
                [
                    5
                ],
                [],
                [
                    7
                ],
                [
                    10
                ],
                [
                    9
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    7
                ],
                [
                    2,
                    3,
                    6,
                    8,
                    9
                ],
                [],
                [
                    4,
                    5
                ],
                [],
                [],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2581_7f59029a-03ac-4ef9-91e7-f1fd5a4837e7",
        "question_text": "How many years did it take for the Warriors to surpass the New York Knicks?",
        "split": "train",
        "decomposition": "return years that it take for the  Warriors to surpass the New York Knicks ;return the  number of  #1",
        "program": [
            "SELECT['years that it take for the Warriors to surpass the New York Knicks']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "years that it take for the Warriors to surpass the New York Knicks"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years that it take for the Warriors to surpass the New York Knicks)"
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Single_Event",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years that it take for the Warriors to surpass the New York Knicks)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [
                    7,
                    8,
                    9,
                    10,
                    11,
                    12
                ],
                [
                    13,
                    14,
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "did",
                "it",
                "take",
                "for",
                "the",
                "Warriors",
                "to",
                "surpass",
                "the",
                "New",
                "York",
                "Knicks",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [
                    7,
                    8
                ],
                [
                    9,
                    10,
                    11
                ],
                [
                    12,
                    13
                ],
                [
                    14,
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4,
                    5
                ],
                [
                    6,
                    8,
                    10
                ],
                [
                    7,
                    9,
                    11
                ],
                [
                    12,
                    13
                ],
                [
                    14,
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    14
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    14
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    14
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    14
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    14
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    14
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1012_a2f25486-e034-4532-b28e-e80ce8555c0f",
        "question_text": "Which Chinese invasion got the furthest into Burma?",
        "split": "dev",
        "decomposition": "return Chinese invasion that got the  furthest into Burma",
        "program": [
            "SELECT['Chinese invasion that got the furthest into Burma']"
        ],
        "nested_expression": [
            "SELECT",
            "Chinese invasion that got the furthest into Burma"
        ],
        "typed_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(Chinese invasion that got the furthest into Burma)"
        ],
        "drop_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(Chinese invasion that got the furthest into Burma)"
        ],
        "operators": [
            "select"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [
                    6,
                    7,
                    8
                ]
            ],
            "question_tokens": [
                "Which",
                "Chinese",
                "invasion",
                "got",
                "the",
                "furthest",
                "into",
                "Burma",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [
                    6
                ],
                [
                    7,
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    3
                ],
                [
                    1,
                    2,
                    4,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    7
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_2255_7363a147-a310-47b2-b873-433fc9570716",
        "question_text": "How many touchdowns did the Colts score in the third quarter?",
        "split": "dev",
        "decomposition": "return touchdowns that the  Colts did score in  the third quarter ;return number of  #1",
        "program": [
            "SELECT['touchdowns that the Colts did score in the third quarter']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "touchdowns that the Colts did score in the third quarter"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdowns that the Colts did score in the third quarter)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns that the Colts did score)"
                ],
                "GET_QUESTION_SPAN(in the third quarter)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5
                ],
                [
                    6,
                    7,
                    9,
                    10
                ],
                [
                    4,
                    8
                ],
                [],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "touchdowns",
                "did",
                "the",
                "Colts",
                "score",
                "in",
                "the",
                "third",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    6,
                    10
                ],
                [],
                [
                    5
                ],
                [
                    7
                ],
                [],
                [
                    9
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    5
                ],
                [],
                [
                    6,
                    7,
                    9,
                    10
                ],
                [],
                [],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_241_68d02b1b-285b-4e37-83b0-34b3d403c976",
        "question_text": "Which country had most deaths?",
        "split": "dev",
        "decomposition": "return countries ;return deaths of #1 ;return number of  #2 for each #1 ;return #1 where #3 is highest",
        "program": [
            "SELECT['countries']",
            "PROJECT['deaths of #REF', '#1']",
            "GROUP['count', '#2', '#1']",
            "SUPERLATIVE['max', '#1', '#3']"
        ],
        "nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "countries"
            ],
            [
                "GROUP_count",
                [
                    "PROJECT",
                    "deaths of #REF",
                    [
                        "SELECT",
                        "countries"
                    ]
                ],
                [
                    "SELECT",
                    "countries"
                ]
            ]
        ],
        "typed_nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(countries)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(deaths of #REF)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(countries)"
            ],
            [
                "PARTIAL_SELECT_SINGLE_NUM",
                "GET_QUESTION_SPAN(deaths of #REF)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "superlative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [],
                [
                    4
                ],
                [
                    5
                ]
            ],
            "question_tokens": [
                "Which",
                "country",
                "had",
                "most",
                "deaths",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [
                    1
                ],
                [],
                [],
                [],
                [
                    4
                ],
                [
                    2,
                    3
                ],
                [],
                [],
                [
                    5
                ]
            ],
            "fastalign.grammar": [
                [
                    1
                ],
                [
                    0
                ],
                [
                    2,
                    3
                ],
                [],
                [],
                [],
                [],
                [
                    4
                ],
                [
                    5
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    4
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1515_b6bc4ad8-1d5b-4b0d-b5d8-ef41347b9b7a",
        "question_text": "How many scoring yards did Jonathan Stewart have?",
        "split": "dev",
        "decomposition": "return scoring yards from  Jonathan Stewart ;return the  number of  #1",
        "program": [
            "SELECT['scoring yards from Jonathan Stewart']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "scoring yards from Jonathan Stewart"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(scoring yards from Jonathan Stewart)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(scoring yards from Jonathan Stewart)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    4,
                    7
                ],
                [
                    2,
                    3,
                    5,
                    6
                ],
                [
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "scoring",
                "yards",
                "did",
                "Jonathan",
                "Stewart",
                "have",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    4,
                    5
                ],
                [],
                [
                    6,
                    7
                ],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3
                ],
                [
                    4,
                    5,
                    7
                ],
                [
                    2
                ],
                [
                    6
                ],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2328_342cd68d-993f-4a47-8081-a0a30a258631",
        "question_text": "Did the Cowboys or the 49ers have more total offensive yards?",
        "split": "train",
        "decomposition": "return total offensive yards of the  Cowboys ;return total offensive yards of the  49ers ;return which is more of #1 ,  #2",
        "program": [
            "SELECT['total offensive yards of the Cowboys']",
            "SELECT['total offensive yards of the 49ers']",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "total offensive yards of the Cowboys"
            ],
            [
                "SELECT",
                "total offensive yards of the 49ers"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(total offensive yards of the Cowboys)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(total offensive yards of the 49ers)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(total offensive yards of the Cowboys)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(total offensive yards of the 49ers)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    3,
                    7
                ],
                [
                    1,
                    2,
                    4,
                    5,
                    6
                ],
                [],
                [
                    8,
                    9,
                    10
                ],
                [
                    11
                ]
            ],
            "question_tokens": [
                "Did",
                "the",
                "Cowboys",
                "or",
                "the",
                "49ers",
                "have",
                "more",
                "total",
                "offensive",
                "yards",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    7
                ],
                [],
                [
                    2,
                    3,
                    5
                ],
                [],
                [
                    6
                ],
                [
                    8,
                    9,
                    10
                ],
                [],
                [],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    10
                ],
                [
                    0,
                    3
                ],
                [
                    6,
                    7
                ],
                [
                    2,
                    5
                ],
                [],
                [],
                [
                    9
                ],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1726_47d38f4b-a90f-4dbd-b399-5b7ab839533e",
        "question_text": "In what quarter were the most field goals kicked?",
        "split": "train",
        "decomposition": "return quarters ;return field goals kicked In #1 ;return number of  #2 for each #1 ;return #1 where #3 is highest",
        "program": [
            "SELECT['quarters']",
            "PROJECT['field goals kicked In #REF', '#1']",
            "GROUP['count', '#2', '#1']",
            "SUPERLATIVE['max', '#1', '#3']"
        ],
        "nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "quarters"
            ],
            [
                "GROUP_count",
                [
                    "PROJECT",
                    "field goals kicked In #REF",
                    [
                        "SELECT",
                        "quarters"
                    ]
                ],
                [
                    "SELECT",
                    "quarters"
                ]
            ]
        ],
        "typed_nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(quarters)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(field goals kicked In #REF)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(quarters)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(field goals kicked In #REF)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "superlative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    3,
                    4
                ],
                [],
                [
                    5,
                    8
                ],
                [
                    2,
                    6,
                    7
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "In",
                "what",
                "quarter",
                "were",
                "the",
                "most",
                "field",
                "goals",
                "kicked",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [],
                [
                    1
                ],
                [],
                [],
                [],
                [
                    3
                ],
                [
                    8
                ],
                [],
                [
                    2,
                    5,
                    6,
                    7
                ],
                [],
                [],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    8
                ],
                [
                    6
                ],
                [],
                [
                    2,
                    7
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_3535_b18b3a6b-32d2-4853-a8c7-7f0be9e4daa9",
        "question_text": "How many times were the regulations for steam boilers extended and revised?",
        "split": "train",
        "decomposition": "return the  times that the regulations for steam boilers extended ;return the  times that the regulations for steam boilers revised ;return number of  #1 ;return number of  #2 ;return sum of #3 and  #4",
        "program": [
            "SELECT['the times that the regulations for steam boilers extended']",
            "SELECT['the times that the regulations for steam boilers revised']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['sum', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "the times that the regulations for steam boilers extended"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "the times that the regulations for steam boilers revised"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the times that the regulations for steam boilers extended)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the times that the regulations for steam boilers revised)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the times that the regulations for steam boilers extended)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the times that the regulations for steam boilers revised)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    3,
                    10
                ],
                [
                    1,
                    5
                ],
                [
                    2,
                    4,
                    6
                ],
                [
                    9
                ],
                [
                    7,
                    8
                ],
                [],
                [
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "times",
                "were",
                "the",
                "regulations",
                "for",
                "steam",
                "boilers",
                "extended",
                "and",
                "revised",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3,
                    10
                ],
                [
                    2
                ],
                [],
                [],
                [],
                [
                    6
                ],
                [
                    5
                ],
                [
                    8
                ],
                [
                    7
                ],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    10
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    8
                ],
                [
                    7
                ],
                [],
                [
                    9,
                    11
                ],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    11
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_2609_ef9ce2a5-7ca9-43af-bbd4-e4976e5141a1",
        "question_text": "Which groups are at least 3500 in size?",
        "split": "dev",
        "decomposition": "return groups ;return sizes of #1 ;return #1 where #2 higher than 3500",
        "program": [
            "SELECT['groups']",
            "PROJECT['sizes of #REF', '#1']",
            "COMPARATIVE['#1', '#2', 'higher than 3500']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "groups"
            ],
            [
                "PROJECT",
                "sizes of #REF",
                [
                    "SELECT",
                    "groups"
                ]
            ],
            "higher than 3500"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(groups)"
            ],
            [
                "PARTIAL_GROUP_sum",
                [
                    "PARTIAL_SELECT_NUM",
                    "GET_QUESTION_SPAN(sizes of #REF)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(higher than 3500)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(groups)"
            ],
            [
                "PARTIAL_SELECT_SINGLE_NUM",
                "GET_QUESTION_SPAN(sizes of #REF)"
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(higher than 3500)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    3
                ],
                [],
                [
                    2,
                    4,
                    5
                ],
                [],
                [
                    6,
                    7
                ],
                [
                    8
                ]
            ],
            "question_tokens": [
                "Which",
                "groups",
                "are",
                "at",
                "least",
                "3500",
                "in",
                "size",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    2,
                    4
                ],
                [],
                [],
                [
                    5
                ],
                [],
                [
                    6
                ],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [
                    2,
                    4
                ],
                [
                    5
                ],
                [],
                [
                    6
                ],
                [
                    7,
                    8
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    7
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_975_5985e6b1-c0b5-4f85-a7df-a8c3229cec61",
        "question_text": "How many total yards were gained on rushing touchdowns longer than 10 yards?",
        "split": "train",
        "decomposition": "return rushing touchdowns ;return yards  of #1 ;return #1 where #2 is higher than 10 ;return yards  of #3 ;return sum of #4",
        "program": [
            "SELECT['rushing touchdowns']",
            "PROJECT['yards of #REF', '#1']",
            "COMPARATIVE['#1', '#2', 'is higher than 10']",
            "PROJECT['yards of #REF', '#3']",
            "AGGREGATE['sum', '#4']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "PROJECT",
                "yards of #REF",
                [
                    "COMPARATIVE",
                    [
                        "SELECT",
                        "rushing touchdowns"
                    ],
                    [
                        "PROJECT",
                        "yards of #REF",
                        [
                            "SELECT",
                            "rushing touchdowns"
                        ]
                    ],
                    "is higher than 10"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(yards of #REF)",
                [
                    "COMPARATIVE",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(rushing touchdowns)"
                    ],
                    [
                        "PARTIAL_GROUP_sum",
                        [
                            "PARTIAL_SELECT_NUM",
                            "GET_QUESTION_SPAN(yards of #REF)"
                        ]
                    ],
                    [
                        "CONDITION",
                        "GET_QUESTION_SPAN(is higher than 10)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(yards of #REF)",
                [
                    "COMPARATIVE",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(rushing touchdowns)"
                    ],
                    [
                        "PARTIAL_GROUP_sum",
                        [
                            "PARTIAL_SELECT_NUM",
                            "GET_QUESTION_SPAN(yards of #REF)"
                        ]
                    ],
                    [
                        "CONDITION",
                        "GET_QUESTION_SPAN(is higher than 10)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "comparative",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    5,
                    6,
                    7,
                    8
                ],
                [
                    9
                ],
                [],
                [],
                [],
                [],
                [
                    2
                ],
                [
                    3,
                    12
                ],
                [],
                [
                    10,
                    11
                ],
                [
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "total",
                "yards",
                "were",
                "gained",
                "on",
                "rushing",
                "touchdowns",
                "longer",
                "than",
                "10",
                "yards",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    3,
                    5,
                    7
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    2
                ],
                [],
                [
                    12
                ],
                [],
                [],
                [],
                [],
                [
                    10,
                    11
                ],
                [],
                [],
                [],
                [],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    4
                ],
                [
                    5,
                    6,
                    7,
                    8
                ],
                [],
                [
                    9
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    2
                ],
                [
                    3,
                    12
                ],
                [],
                [],
                [
                    10,
                    11
                ],
                [
                    13
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    12
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    12
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    12
                ],
                [
                    7,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1474_f3905df8-2d77-42b7-a12a-8440b043a3f4",
        "question_text": "How many touchdowns did Owen Daniels score?",
        "split": "train",
        "decomposition": "return touchdowns that Owen Daniels did score",
        "program": [
            "SELECT['touchdowns that Owen Daniels did score']"
        ],
        "nested_expression": [
            "SELECT",
            "touchdowns that Owen Daniels did score"
        ],
        "typed_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(touchdowns that Owen Daniels did score)"
        ],
        "drop_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(touchdowns that Owen Daniels did score)"
        ],
        "operators": [
            "select"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    4,
                    5,
                    6
                ],
                [
                    2,
                    7
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "touchdowns",
                "did",
                "Owen",
                "Daniels",
                "score",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    3
                ],
                [
                    4,
                    6
                ],
                [
                    5
                ],
                [
                    2,
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_3113_e702952a-a01c-44e5-8229-9d0ce333a05c",
        "question_text": "Is the estimated population of 2016 higher or lower compared to the estimated population of 2015?",
        "split": "train",
        "decomposition": "return the  estimated population  of 2015 ;return the  estimated population  of 2016 ;return if  #2 is  lower than #1 ;return if  #2 is  higher than #1 ;return which is true of #3 ,  #4",
        "program": [
            "SELECT['the estimated population of 2015']",
            "SELECT['the estimated population of 2016']",
            "BOOLEAN['#2', 'is lower than #1']",
            "BOOLEAN['#2', 'is higher than #1']",
            "COMPARISON['true', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_true",
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "the estimated population of 2016"
                ],
                "is lower than #1"
            ],
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "the estimated population of 2016"
                ],
                "is higher than #1"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_true",
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the estimated population of 2016)"
                ],
                "GET_QUESTION_SPAN(is lower than #1)"
            ],
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the estimated population of 2016)"
                ],
                "GET_QUESTION_SPAN(is higher than #1)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_true",
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the estimated population of 2016)"
                ],
                "GET_QUESTION_SPAN(is lower than #1)"
            ],
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the estimated population of 2016)"
                ],
                "GET_QUESTION_SPAN(is higher than #1)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "boolean",
            "boolean",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0
                ],
                [
                    2,
                    6
                ],
                [],
                [
                    3,
                    5
                ],
                [],
                [
                    7,
                    8,
                    12
                ],
                [
                    10
                ],
                [
                    13,
                    15
                ],
                [
                    16
                ]
            ],
            "question_tokens": [
                "Is",
                "the",
                "estimated",
                "population",
                "of",
                "2016",
                "higher",
                "or",
                "lower",
                "compared",
                "to",
                "the",
                "estimated",
                "population",
                "of",
                "2015",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    7,
                    8,
                    12
                ],
                [],
                [],
                [
                    13
                ],
                [],
                [],
                [
                    15
                ],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [],
                [],
                [
                    2
                ],
                [
                    6,
                    7,
                    8
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [
                    12
                ],
                [
                    15
                ],
                [],
                [],
                [],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    3
                ],
                [
                    1,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    15
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    15
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    11,
                    15
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    15
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2792_1a91ef9e-c779-4a21-be81-9d0e2896ecfa",
        "question_text": "How many more yards did Tom Brady throw compared to Derek Carr?",
        "split": "train",
        "decomposition": "return yards that Tom Brady did throw ;return yards that Derek Carr did throw ;return sum of #1 ;return sum of #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['yards that Tom Brady did throw']",
            "SELECT['yards that Derek Carr did throw']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards that Tom Brady did throw"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards that Derek Carr did throw"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards that Tom Brady did throw)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards that Derek Carr did throw)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards that Tom Brady did throw)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards that Derek Carr did throw)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    8
                ],
                [
                    3,
                    4,
                    5
                ],
                [
                    6
                ],
                [],
                [
                    7
                ],
                [
                    9,
                    10,
                    11
                ],
                [
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "yards",
                "did",
                "Tom",
                "Brady",
                "throw",
                "compared",
                "to",
                "Derek",
                "Carr",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    7
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [
                    10
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [
                    3,
                    4,
                    5
                ],
                [],
                [],
                [],
                [
                    6,
                    8
                ],
                [
                    7
                ],
                [
                    10
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    11
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2087_a5851451-7bd9-47bd-8f9a-a52f86d9c4e2",
        "question_text": "How many major Sinhalese communities are located in Italy?",
        "split": "train",
        "decomposition": "return major Sinhalese communities in  Italy ;return number of  #1",
        "program": [
            "SELECT['major Sinhalese communities in Italy']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "major Sinhalese communities in Italy"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(major Sinhalese communities in Italy)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(major Sinhalese communities in Italy)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4
                ],
                [
                    5,
                    6,
                    7
                ],
                [
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "major",
                "Sinhalese",
                "communities",
                "are",
                "located",
                "in",
                "Italy",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    4
                ],
                [],
                [
                    5
                ],
                [
                    7
                ],
                [
                    6,
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    5
                ],
                [
                    2,
                    3,
                    4
                ],
                [
                    6,
                    7
                ],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1470_42fe7182-bfa6-4e04-8c04-a029ab3d3878",
        "question_text": "How many years before Z\u00e1polya's death was Stephen B\u00e1thory born?",
        "split": "train",
        "decomposition": "return year of Z\u00e1polya 's deaths ;return year Stephen B\u00e1thory was  born ;return difference of #1 and  #2",
        "program": [
            "SELECT[\"year of Z\\xe1polya 's deaths\"]",
            "SELECT['year Stephen B\\xe1thory was born']",
            "ARITHMETIC['difference', '#1', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "year of Z\u00e1polya 's deaths"
            ],
            [
                "SELECT",
                "year Stephen B\u00e1thory was born"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year of Z\u00e1polya 's deaths)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year Stephen B\u00e1thory was born)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Two_Events",
            [
                "SELECT",
                "GET_QUESTION_SPAN(year of Z\u00e1polya 's deaths)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(year Stephen B\u00e1thory was born)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    6
                ],
                [
                    5
                ],
                [
                    4
                ],
                [
                    7,
                    8,
                    9
                ],
                [
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "before",
                "Z\u00e1polya",
                "'s",
                "death",
                "was",
                "Stephen",
                "B\u00e1thory",
                "born",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    6
                ],
                [],
                [],
                [
                    5
                ],
                [
                    4
                ],
                [
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    10
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3
                ],
                [
                    6,
                    7
                ],
                [
                    5
                ],
                [
                    4
                ],
                [],
                [
                    8,
                    9
                ],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1074_ce8cdee7-0004-4084-8531-978e670062c8",
        "question_text": "When Edward went to Sicily after recovering from his wound, which two family members of his died?",
        "split": "dev",
        "decomposition": "return family members of Edward ;return #1 that died when  Edward went to Sicily after recovering from  his wound",
        "program": [
            "SELECT['family members of Edward']",
            "FILTER['#1', 'that died when Edward went to Sicily after recovering from his wound']"
        ],
        "nested_expression": [
            "FILTER",
            [
                "SELECT",
                "family members of Edward"
            ],
            "that died when Edward went to Sicily after recovering from his wound"
        ],
        "typed_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(family members of Edward)"
            ],
            "GET_QUESTION_SPAN(that died when Edward went to Sicily after recovering from his wound)"
        ],
        "drop_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(family members of Edward)"
            ],
            "GET_QUESTION_SPAN(that died when Edward went to Sicily after recovering from his wound)"
        ],
        "operators": [
            "select",
            "filter"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    2,
                    6,
                    11,
                    12
                ],
                [
                    0,
                    1,
                    3,
                    5,
                    7,
                    8,
                    10,
                    13,
                    15,
                    16
                ],
                [
                    4,
                    9,
                    14
                ],
                [
                    17,
                    18
                ]
            ],
            "question_tokens": [
                "When",
                "Edward",
                "went",
                "to",
                "Sicily",
                "after",
                "recovering",
                "from",
                "his",
                "wound",
                ",",
                "which",
                "two",
                "family",
                "members",
                "of",
                "his",
                "died",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    2
                ],
                [
                    6,
                    11
                ],
                [
                    5,
                    14
                ],
                [
                    1,
                    3,
                    7,
                    10
                ],
                [
                    9,
                    12
                ],
                [
                    4,
                    8,
                    13
                ],
                [
                    15,
                    17
                ],
                [
                    16,
                    18
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    11,
                    12
                ],
                [
                    2
                ],
                [
                    6,
                    9
                ],
                [
                    1,
                    3,
                    7,
                    8,
                    10,
                    13,
                    15,
                    16
                ],
                [
                    4,
                    17
                ],
                [
                    14
                ],
                [
                    18
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    17
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    17
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    17
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    17
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    17
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    16
                ],
                [
                    12,
                    17
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    16
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1289_5d8fe56a-2fa4-4a85-9df2-b2fcee6934b8",
        "question_text": "How many more field goals did Bironas kick than Stover?",
        "split": "train",
        "decomposition": "return field goals of Bironas ;return field goals of Stover ;return the  number of  #1 ;return the  number of  #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['field goals of Bironas']",
            "SELECT['field goals of Stover']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals of Bironas"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals of Stover"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Bironas)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Stover)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Bironas)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Stover)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    8
                ],
                [
                    3,
                    4
                ],
                [],
                [],
                [
                    5,
                    6,
                    7,
                    9
                ],
                [],
                [
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "field",
                "goals",
                "did",
                "Bironas",
                "kick",
                "than",
                "Stover",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [
                    6
                ],
                [],
                [
                    4,
                    5,
                    7
                ],
                [],
                [],
                [],
                [
                    9
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [
                    3,
                    4,
                    5
                ],
                [],
                [],
                [],
                [
                    8
                ],
                [
                    6,
                    7,
                    9
                ],
                [],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1592_c4ca35d6-60c7-4a73-9711-b69cfd19a408",
        "question_text": "How many touchdowns did The Eagles score in the first quarter?",
        "split": "train",
        "decomposition": "return touchdowns of The Eagles in  the  first quarter ;return the  number of  #1",
        "program": [
            "SELECT['touchdowns of The Eagles in the first quarter']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "touchdowns of The Eagles in the first quarter"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdowns of The Eagles in the first quarter)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns of The Eagles)"
                ],
                "GET_QUESTION_SPAN(in the first quarter)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    6,
                    7,
                    9,
                    10
                ],
                [
                    4,
                    5,
                    8
                ],
                [],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "touchdowns",
                "did",
                "The",
                "Eagles",
                "score",
                "in",
                "the",
                "first",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    6,
                    10
                ],
                [
                    4
                ],
                [
                    5
                ],
                [
                    7
                ],
                [],
                [
                    9
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3
                ],
                [],
                [
                    6,
                    7,
                    9,
                    10
                ],
                [
                    4,
                    5
                ],
                [],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1537_f9090d7e-76d9-4efe-9bf8-0f4952ced275",
        "question_text": "How many years was the age difference between the youngest and oldest local Serbs conscription for military service?",
        "split": "train",
        "decomposition": "return years of local Serbs conscription for military service ;return the  highest of #1 ;return the  lowest of #1 ;return the  difference of #2 and  #3",
        "program": [
            "SELECT['years of local Serbs conscription for military service']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['min', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "years of local Serbs conscription for military service"
                ]
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "years of local Serbs conscription for military service"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(years of local Serbs conscription for military service)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(years of local Serbs conscription for military service)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(years of local Serbs conscription for military service)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(years of local Serbs conscription for military service)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    6
                ],
                [
                    7
                ],
                [
                    3
                ],
                [
                    5
                ],
                [
                    11,
                    12
                ],
                [
                    9,
                    10,
                    17
                ],
                [
                    14
                ],
                [
                    13,
                    15,
                    16
                ],
                [
                    18
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "was",
                "the",
                "age",
                "difference",
                "between",
                "the",
                "youngest",
                "and",
                "oldest",
                "local",
                "Serbs",
                "conscription",
                "for",
                "military",
                "service",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [],
                [],
                [
                    3,
                    6
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [
                    9,
                    12
                ],
                [],
                [
                    7,
                    10
                ],
                [],
                [],
                [],
                [],
                [
                    11,
                    15,
                    16
                ],
                [
                    13,
                    14
                ],
                [],
                [
                    17
                ],
                [
                    18
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    6,
                    7
                ],
                [],
                [],
                [
                    3,
                    9
                ],
                [],
                [
                    11
                ],
                [
                    12
                ],
                [],
                [],
                [
                    10,
                    17
                ],
                [],
                [],
                [
                    13,
                    14
                ],
                [],
                [
                    18
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    17
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    17
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    17
                ],
                [
                    8,
                    14
                ],
                [
                    8,
                    17
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    17
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    17
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3199_0b871124-4009-48a4-8fd4-f0c53774ad7d",
        "question_text": "How many points were the Raiders leading by at the end of the first half?",
        "split": "train",
        "decomposition": "return points at the  end of the   first half ;return points of the  Raiders at the   end of  the first half ;return the  sum of #1 ;return the  difference of #3 and  #2 ;return the  difference of #2 and  #4",
        "program": [
            "SELECT['points at the end of the first half']",
            "SELECT['points of the Raiders at the end of the first half']",
            "AGGREGATE['sum', '#1']",
            "ARITHMETIC['difference', '#3', '#2']",
            "ARITHMETIC['difference', '#2', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "points of the Raiders at the end of the first half"
            ],
            [
                "ARITHMETIC_difference",
                [
                    "AGGREGATE_sum",
                    [
                        "SELECT",
                        "points at the end of the first half"
                    ]
                ],
                [
                    "SELECT",
                    "points of the Raiders at the end of the first half"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points of the Raiders at the end of the first half)"
                ]
            ],
            [
                "ARITHMETIC_difference",
                [
                    "AGGREGATE_sum",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(points at the end of the first half)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(points of the Raiders at the end of the first half)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points of the Raiders at the end of the first half)"
                ]
            ],
            [
                "ARITHMETIC_difference",
                [
                    "AGGREGATE_sum",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(points at the end of the first half)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(points of the Raiders at the end of the first half)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    5
                ],
                [
                    7
                ],
                [],
                [
                    6
                ],
                [
                    8,
                    10
                ],
                [],
                [],
                [],
                [
                    13,
                    14,
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "points",
                "were",
                "the",
                "Raiders",
                "leading",
                "by",
                "at",
                "the",
                "end",
                "of",
                "the",
                "first",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    6
                ],
                [
                    7,
                    8,
                    10
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    14
                ],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    6
                ],
                [],
                [
                    10
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    14,
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    14
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    14
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    14
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    14
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1136_6639ffe0-acdd-40cc-a6f5-081c6e09df04",
        "question_text": "How long were the two touchdown scrambles?",
        "split": "dev",
        "decomposition": "return the two touchdown scrambles ;return how long were #1",
        "program": [
            "SELECT['the two touchdown scrambles']",
            "PROJECT['how long were #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "how long were #REF",
            [
                "SELECT",
                "the two touchdown scrambles"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(how long were #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the two touchdown scrambles)"
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(how long were #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the two touchdown scrambles)"
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [],
                [
                    6,
                    7
                ]
            ],
            "question_tokens": [
                "How",
                "long",
                "were",
                "the",
                "two",
                "touchdown",
                "scrambles",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    4
                ],
                [],
                [
                    2
                ],
                [
                    3
                ],
                [
                    5
                ],
                [
                    6
                ],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    4,
                    5
                ],
                [],
                [],
                [],
                [
                    6,
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2453_4b07e9fb-7d43-47f2-a4dd-7c997ddbe104",
        "question_text": "what fixed out of sunday",
        "split": "train",
        "decomposition": "return what  fixed out of sunday",
        "program": [
            "SELECT['what fixed out of sunday']"
        ],
        "nested_expression": [
            "SELECT",
            "what fixed out of sunday"
        ],
        "typed_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(what fixed out of sunday)"
        ],
        "drop_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(what fixed out of sunday)"
        ],
        "operators": [
            "select"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    4
                ]
            ],
            "question_tokens": [
                "what",
                "fixed",
                "out",
                "of",
                "sunday"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    4
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    3
                ],
                [
                    2
                ],
                [
                    4
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    4
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1584_68ed1a04-8299-47da-9058-d0c134684c02",
        "question_text": "What was Ryan Succop two longest field goals?",
        "split": "train",
        "decomposition": "return field goals of Ryan Succop ;return the  two longest of #1",
        "program": [
            "SELECT['field goals of Ryan Succop']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "field goals of Ryan Succop"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals of Ryan Succop)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals of Ryan Succop)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    2,
                    4,
                    5,
                    6
                ],
                [
                    0,
                    3
                ],
                [
                    7,
                    8
                ]
            ],
            "question_tokens": [
                "What",
                "was",
                "Ryan",
                "Succop",
                "two",
                "longest",
                "field",
                "goals",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    4,
                    5,
                    6
                ],
                [],
                [
                    3
                ],
                [
                    7
                ],
                [],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    4,
                    5,
                    6
                ],
                [
                    3
                ],
                [],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    1,
                    7
                ],
                [
                    2,
                    3
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1601_3faa74af-83d5-41cc-bf1f-5f5ca2b2af29",
        "question_text": "Who kicked a field goal from greater than 35 yards?",
        "split": "train",
        "decomposition": "return yards of field goals ;return #1 that are greater than 35 yards ;return field goals where the  yards are any of #2 ;return who  kicked #3",
        "program": [
            "SELECT['yards of field goals']",
            "FILTER['#1', 'that are greater than 35 yards']",
            "PROJECT['field goals where the yards are any of #REF', '#2']",
            "PROJECT['who kicked #REF', '#3']"
        ],
        "nested_expression": [
            "PROJECT",
            "who kicked #REF",
            [
                "PROJECT",
                "field goals where the yards are any of #REF",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "yards of field goals"
                    ],
                    "that are greater than 35 yards"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who kicked #REF)",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(field goals where the yards are any of #REF)",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals)"
                    ],
                    "GET_QUESTION_SPAN(that are greater than 35 yards)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who kicked #REF)",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(field goals where the yards are any of #REF)",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals)"
                    ],
                    "GET_QUESTION_SPAN(that are greater than 35 yards)"
                ]
            ]
        ],
        "operators": [
            "select",
            "filter",
            "project",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    4
                ],
                [
                    6
                ],
                [
                    3,
                    8
                ],
                [
                    5
                ],
                [],
                [
                    10
                ]
            ],
            "question_tokens": [
                "Who",
                "kicked",
                "a",
                "field",
                "goal",
                "from",
                "greater",
                "than",
                "35",
                "yards",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [],
                [],
                [],
                [],
                [
                    3
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [
                    8
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    2
                ],
                [],
                [],
                [
                    4
                ],
                [
                    6
                ],
                [
                    3
                ],
                [
                    8
                ],
                [],
                [],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    1,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_3040_b3ad30dc-f775-4b96-a83d-980e8d0ca90f",
        "question_text": "How many years passed between 1920 to 1930  during the mass migration of the 1923 Great Kanto earthquake?",
        "split": "train",
        "decomposition": "return years of the  mass migration of  the 1923 Great Kanto earthquake ;return #1 that are at most 1930 ;return number of  #2",
        "program": [
            "SELECT['years of the mass migration of the 1923 Great Kanto earthquake']",
            "FILTER['#1', 'that are at most 1930']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "years of the mass migration of the 1923 Great Kanto earthquake"
                ],
                "that are at most 1930"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(years of the mass migration of the 1923 Great Kanto earthquake)"
                ],
                "GET_QUESTION_SPAN(that are at most 1930)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_LT_EQ",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(years of the mass migration of the 1923 Great Kanto earthquake)"
                ],
                "GET_QUESTION_NUMBER(1930)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    3,
                    4,
                    5,
                    7,
                    8,
                    10,
                    11
                ],
                [
                    6,
                    9,
                    12,
                    13,
                    15
                ],
                [
                    14,
                    18
                ],
                [
                    16,
                    17
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "passed",
                "between",
                "1920",
                "to",
                "1930",
                "during",
                "the",
                "mass",
                "migration",
                "of",
                "the",
                "1923",
                "Great",
                "Kanto",
                "earthquake",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    2
                ],
                [
                    0,
                    1
                ],
                [
                    3
                ],
                [
                    4,
                    5,
                    7
                ],
                [],
                [
                    9,
                    10,
                    15
                ],
                [
                    8,
                    12
                ],
                [
                    11,
                    14
                ],
                [
                    16,
                    17
                ],
                [],
                [
                    18
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    8
                ],
                [],
                [
                    4,
                    7,
                    10,
                    11
                ],
                [
                    6,
                    15
                ],
                [
                    5
                ],
                [
                    14,
                    18
                ],
                [
                    16,
                    17
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    17
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    17
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    17
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    17
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    17
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_705_0458b3af-0c75-4d84-a753-f7bfd9f22f0b",
        "question_text": "Which player had three interceptions in this game?",
        "split": "train",
        "decomposition": "return players ;return interceptions of #1 ;return number of  #2 for each #1 ;return #1 where #3 is three",
        "program": [
            "SELECT['players']",
            "PROJECT['interceptions of #REF', '#1']",
            "GROUP['count', '#2', '#1']",
            "COMPARATIVE['#1', '#3', 'is three']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "players"
            ],
            [
                "GROUP_count",
                [
                    "PROJECT",
                    "interceptions of #REF",
                    [
                        "SELECT",
                        "players"
                    ]
                ],
                [
                    "SELECT",
                    "players"
                ]
            ],
            "is three"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(players)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(interceptions of #REF)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is three)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(players)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(interceptions of #REF)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is three)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    3
                ],
                [],
                [],
                [
                    1
                ],
                [
                    4,
                    5
                ],
                [
                    6
                ],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "had",
                "three",
                "interceptions",
                "in",
                "this",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    1,
                    2
                ],
                [],
                [],
                [
                    4
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0,
                    3
                ],
                [
                    1,
                    2
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    5
                ],
                [
                    7,
                    8
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_447_6f54a392-7107-4da4-8e39-21bfbcf66cf8",
        "question_text": "How many field goals in the Falcons have?",
        "split": "train",
        "decomposition": "return field goals of the  Falcons ;return number of  #1",
        "program": [
            "SELECT['field goals of the Falcons']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "field goals of the Falcons"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals of the Falcons)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals of the Falcons)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    7
                ],
                [
                    4,
                    5,
                    6
                ],
                [
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "field",
                "goals",
                "in",
                "the",
                "Falcons",
                "have",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    6
                ],
                [
                    4,
                    5
                ],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    6,
                    7
                ],
                [
                    4,
                    5
                ],
                [],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2144_b75cf648-2d52-47d6-880d-66e0e463207a",
        "question_text": "Which racial group made up the least of the population?",
        "split": "train",
        "decomposition": "return racial groups ;return #1 that made up the  least of the population",
        "program": [
            "SELECT['racial groups']",
            "FILTER['#1', 'that made up the least of the population']"
        ],
        "nested_expression": [
            "FILTER",
            [
                "SELECT",
                "racial groups"
            ],
            "that made up the least of the population"
        ],
        "typed_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(racial groups)"
            ],
            "GET_QUESTION_SPAN(that made up the least of the population)"
        ],
        "drop_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(racial groups)"
            ],
            "GET_QUESTION_SPAN(that made up the least of the population)"
        ],
        "operators": [
            "select",
            "filter"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    6
                ],
                [
                    5,
                    7,
                    8
                ],
                [],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "Which",
                "racial",
                "group",
                "made",
                "up",
                "the",
                "least",
                "of",
                "the",
                "population",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3,
                    4
                ],
                [
                    2
                ],
                [
                    5
                ],
                [
                    6,
                    7
                ],
                [],
                [
                    8,
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    2
                ],
                [
                    1,
                    3
                ],
                [
                    4,
                    5,
                    6,
                    8
                ],
                [
                    7
                ],
                [],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1998_efb84d08-99d6-4754-b075-2d12c4510ddf",
        "question_text": "How many of Washington's troops were not raw recruits or militia?",
        "split": "dev",
        "decomposition": "return troops of Washington ;return #1 that were raw recruits ;return #1 that were militia ;return the  number of  #1 ;return the  number of  #2 ;return the  number of  #3 ;return the  sum of #5 and  #6 ;return the  difference of #4 and  #7",
        "program": [
            "SELECT['troops of Washington']",
            "FILTER['#1', 'that were raw recruits']",
            "FILTER['#1', 'that were militia']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "AGGREGATE['count', '#3']",
            "ARITHMETIC['sum', '#5', '#6']",
            "ARITHMETIC['difference', '#4', '#7']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "troops of Washington"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "FILTER",
                        [
                            "SELECT",
                            "troops of Washington"
                        ],
                        "that were raw recruits"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "FILTER",
                        [
                            "SELECT",
                            "troops of Washington"
                        ],
                        "that were militia"
                    ]
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(troops of Washington)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "FILTER",
                        [
                            "SELECT",
                            "GET_QUESTION_SPAN(troops of Washington)"
                        ],
                        "GET_QUESTION_SPAN(that were raw recruits)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "FILTER",
                        [
                            "SELECT",
                            "GET_QUESTION_SPAN(troops of Washington)"
                        ],
                        "GET_QUESTION_SPAN(that were militia)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(troops of Washington)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "FILTER",
                        [
                            "SELECT",
                            "GET_QUESTION_SPAN(troops of Washington)"
                        ],
                        "GET_QUESTION_SPAN(that were raw recruits)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "FILTER",
                        [
                            "SELECT",
                            "GET_QUESTION_SPAN(troops of Washington)"
                        ],
                        "GET_QUESTION_SPAN(that were militia)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "filter",
            "filter",
            "aggregate",
            "aggregate",
            "aggregate",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [
                    5,
                    6
                ],
                [],
                [
                    7
                ],
                [],
                [],
                [
                    8
                ],
                [],
                [
                    9
                ],
                [],
                [
                    10,
                    11
                ],
                [
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "of",
                "Washington",
                "'s",
                "troops",
                "were",
                "not",
                "raw",
                "recruits",
                "or",
                "militia",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [],
                [
                    1
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    3
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    8
                ],
                [],
                [],
                [],
                [
                    7
                ],
                [],
                [],
                [],
                [
                    9
                ],
                [],
                [
                    11
                ],
                [],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    5
                ],
                [],
                [],
                [
                    7
                ],
                [],
                [],
                [],
                [],
                [
                    8,
                    9
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    11
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1065_53dc4acd-a757-4fc2-bdc0-a54ecb419f84",
        "question_text": "How many more yards in field goals were there in the first half compared to touchdowns in the first half?",
        "split": "train",
        "decomposition": "return yards of field goals in   the  first half  ;return yards of touchdowns in   the  first half  ;return sum of #1 ;return sum of #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['yards of field goals in the first half']",
            "SELECT['yards of touchdowns in the first half']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of field goals in the first half"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of touchdowns in the first half"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals in the first half)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdowns in the first half)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals)"
                    ],
                    "GET_QUESTION_SPAN(in the first half)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdowns)"
                    ],
                    "GET_QUESTION_SPAN(in the first half)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    8,
                    13
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    6,
                    9
                ],
                [],
                [],
                [],
                [
                    15
                ],
                [
                    11,
                    12,
                    16,
                    18,
                    19
                ],
                [],
                [],
                [
                    20
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "yards",
                "in",
                "field",
                "goals",
                "were",
                "there",
                "in",
                "the",
                "first",
                "half",
                "compared",
                "to",
                "touchdowns",
                "in",
                "the",
                "first",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [
                    4,
                    5,
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    15
                ],
                [],
                [
                    12,
                    19
                ],
                [],
                [],
                [],
                [],
                [
                    18
                ],
                [],
                [],
                [
                    20
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    8
                ],
                [
                    7
                ],
                [
                    3
                ],
                [
                    5,
                    6
                ],
                [
                    4,
                    9,
                    11
                ],
                [],
                [],
                [],
                [],
                [
                    13
                ],
                [
                    15
                ],
                [],
                [
                    12,
                    16,
                    18,
                    19
                ],
                [],
                [],
                [],
                [
                    20
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    19
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    19
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    19
                ],
                [
                    15,
                    19
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    19
                ],
                [
                    17,
                    19
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    20,
                    20
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_399_cb621a96-5827-4be8-8000-f437ae016908",
        "question_text": "How many years after the First Rebellion did the Second Rebellion occur?",
        "split": "train",
        "decomposition": "return year that the  First Rebellion did occur ;return year that the  Second Rebellion did occur ;return difference of #2 and  #1",
        "program": [
            "SELECT['year that the First Rebellion did occur']",
            "SELECT['year that the Second Rebellion did occur']",
            "ARITHMETIC['difference', '#2', '#1']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "year that the Second Rebellion did occur"
            ],
            [
                "SELECT",
                "year that the First Rebellion did occur"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year that the Second Rebellion did occur)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year that the First Rebellion did occur)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Two_Events",
            [
                "SELECT",
                "GET_QUESTION_SPAN(year that the Second Rebellion did occur)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(year that the First Rebellion did occur)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5
                ],
                [
                    4
                ],
                [
                    6
                ],
                [
                    7,
                    8,
                    9
                ],
                [
                    10,
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "after",
                "the",
                "First",
                "Rebellion",
                "did",
                "the",
                "Second",
                "Rebellion",
                "occur",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3
                ],
                [],
                [
                    4
                ],
                [
                    5
                ],
                [
                    6
                ],
                [
                    7
                ],
                [
                    8,
                    9
                ],
                [],
                [
                    10,
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3
                ],
                [
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [
                    9
                ],
                [
                    10
                ],
                [
                    11,
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_320_b7a40aa6-9ec9-49de-a1a9-b6b9f5cd2c2e",
        "question_text": "How many more Navy and Marine personnel were there than civilians?",
        "split": "train",
        "decomposition": "return the  Navy personnel that were there  ;return the  Marine personnel that were there  ;return number of  #1 ;return number of  #2 ;return sum of #3 and  #4 ;return the  civilians that were there  ;return number of  #6 ;return difference of #5 and  #7",
        "program": [
            "SELECT['the Navy personnel that were there']",
            "SELECT['the Marine personnel that were there']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['sum', '#3', '#4']",
            "SELECT['the civilians that were there']",
            "AGGREGATE['count', '#6']",
            "ARITHMETIC['difference', '#5', '#7']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "the Navy personnel that were there"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "the Marine personnel that were there"
                    ]
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "the civilians that were there"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the Navy personnel that were there)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the Marine personnel that were there)"
                    ]
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the civilians that were there)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the Navy personnel that were there)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the Marine personnel that were there)"
                    ]
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the civilians that were there)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic",
            "select",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    5,
                    8,
                    9
                ],
                [
                    3,
                    4,
                    7
                ],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [
                    10
                ],
                [],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "Navy",
                "and",
                "Marine",
                "personnel",
                "were",
                "there",
                "than",
                "civilians",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    2
                ],
                [],
                [
                    4
                ],
                [],
                [
                    1
                ],
                [],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [
                    5,
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    10
                ],
                [],
                [],
                [],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    8
                ],
                [
                    5
                ],
                [
                    3,
                    4,
                    7
                ],
                [],
                [],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [],
                [
                    10
                ],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2331_54c3ff2f-6e0c-45b7-a649-464df60416da",
        "question_text": "Which player scored more field goals, Justin Medlock or Gould?",
        "split": "train",
        "decomposition": "return field goals of Justin Medlock ;return field goals of Gould ;return number of  #1 ;return number of  #2 ;return which is highest of #3 ,  #4",
        "program": [
            "SELECT['field goals of Justin Medlock']",
            "SELECT['field goals of Gould']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals of Justin Medlock"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals of Gould"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals of Justin Medlock)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals of Gould)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals of Justin Medlock)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals of Gould)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    9
                ],
                [],
                [],
                [
                    7,
                    8,
                    10
                ],
                [
                    11
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "scored",
                "more",
                "field",
                "goals",
                ",",
                "Justin",
                "Medlock",
                "or",
                "Gould",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    6,
                    7,
                    10
                ],
                [
                    9
                ],
                [
                    8
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    6,
                    9
                ],
                [
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [],
                [],
                [
                    7,
                    8,
                    10
                ],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2497_8a6e945f-568a-432b-8f93-412a8c308db6",
        "question_text": "What was the second largest religion in 1901 in Warsaw?",
        "split": "train",
        "decomposition": "return religions in  1901 in Warsaw ;return second largest of #1",
        "program": [
            "SELECT['religions in 1901 in Warsaw']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "religions in 1901 in Warsaw"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(religions in 1901 in Warsaw)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(religions in 1901 in Warsaw)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    3,
                    4
                ],
                [
                    0,
                    2,
                    5,
                    6,
                    8
                ],
                [
                    7,
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "What",
                "was",
                "the",
                "second",
                "largest",
                "religion",
                "in",
                "1901",
                "in",
                "Warsaw",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    3,
                    4
                ],
                [],
                [
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    5
                ],
                [
                    1,
                    3
                ],
                [
                    4
                ],
                [
                    2,
                    6,
                    8
                ],
                [
                    7,
                    9
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    9
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_160_c2789a6a-ec61-4d9a-ab9c-ab1e66391e4c",
        "question_text": "Which Packer quarterback had more yards?",
        "split": "train",
        "decomposition": "return Packer quarterback ;return yards of #1 ;return #1 where #2 is the  highest",
        "program": [
            "SELECT['Packer quarterback']",
            "PROJECT['yards of #REF', '#1']",
            "COMPARATIVE['#1', '#2', 'is the highest']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "Packer quarterback"
            ],
            [
                "PROJECT",
                "yards of #REF",
                [
                    "SELECT",
                    "Packer quarterback"
                ]
            ],
            "is the highest"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(Packer quarterback)"
            ],
            [
                "PARTIAL_GROUP_sum",
                [
                    "PARTIAL_SELECT_NUM",
                    "GET_QUESTION_SPAN(yards of #REF)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is the highest)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(Packer quarterback)"
            ],
            [
                "PARTIAL_SELECT_SINGLE_NUM",
                "GET_QUESTION_SPAN(yards of #REF)"
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is the highest)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [],
                [
                    4
                ],
                [],
                [
                    5
                ],
                [
                    6
                ]
            ],
            "question_tokens": [
                "Which",
                "Packer",
                "quarterback",
                "had",
                "more",
                "yards",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    4
                ],
                [
                    5
                ],
                [],
                [],
                [
                    6
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0
                ],
                [
                    1,
                    2,
                    3
                ],
                [],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [],
                [
                    5,
                    6
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2583_fcae3d1b-3b91-471e-a07e-c883aa9cb12a",
        "question_text": "How many games have the Bears won?",
        "split": "train",
        "decomposition": "return games that the  Bears have won ;return the  number of  #1",
        "program": [
            "SELECT['games that the Bears have won']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "games that the Bears have won"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(games that the Bears have won)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(games that the Bears have won)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    7
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "games",
                "have",
                "the",
                "Bears",
                "won",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4,
                    6
                ],
                [
                    5
                ],
                [],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    3,
                    5,
                    6
                ],
                [
                    4
                ],
                [],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1969_639af43c-ce2a-444c-beaa-f33ce25b3a1f",
        "question_text": "How many 40+ yard field goals did Mare make?",
        "split": "train",
        "decomposition": "return field goals of  Mare ;return #1 that are  40+ yard ;return number of  #2",
        "program": [
            "SELECT['field goals of Mare']",
            "FILTER['#1', 'that are 40+ yard']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "field goals of Mare"
                ],
                "that are 40+ yard"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Mare)"
                ],
                "GET_QUESTION_SPAN(that are 40+ yard)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_GT",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Mare)"
                ],
                "GET_QUESTION_NUMBER(40+)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    7
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [
                    10
                ],
                [
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "40",
                "+",
                "yard",
                "field",
                "goals",
                "did",
                "Mare",
                "make",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [
                    7
                ],
                [],
                [],
                [
                    8,
                    9
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    7,
                    8
                ],
                [
                    4,
                    5,
                    6
                ],
                [
                    2,
                    3
                ],
                [],
                [],
                [
                    10
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3116_8b185e7e-8a33-43c5-8a0c-69f7869c6ab3",
        "question_text": "how many consecutive seasons did the browns lose?",
        "split": "train",
        "decomposition": "return consecutive seasons that the  browns did lose ;return number of  #1",
        "program": [
            "SELECT['consecutive seasons that the browns did lose']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "consecutive seasons that the browns did lose"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(consecutive seasons that the browns did lose)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "SELECT",
                "GET_QUESTION_SPAN(consecutive seasons that the browns did lose)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    4,
                    5,
                    6,
                    7
                ],
                [
                    8
                ]
            ],
            "question_tokens": [
                "how",
                "many",
                "consecutive",
                "seasons",
                "did",
                "the",
                "browns",
                "lose",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    4
                ],
                [
                    5,
                    6,
                    7
                ],
                [],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    4
                ],
                [
                    3
                ],
                [
                    5,
                    6
                ],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1264_9ae0879d-873e-45c7-b864-4bd11d387bd9",
        "question_text": "How many years after its founding did Pi\u0142sudski's Combat Organization of the Polish Socialist Party regain prominence?",
        "split": "train",
        "decomposition": "return year of Pi\u0142sudski 's Combat Organization of  the  Polish Socialist Party founding ;return year when  Pi\u0142sudski 's Combat Organization of the  Polish Socialist Party regain prominence ;return the  difference of #2 and  #1",
        "program": [
            "SELECT[\"year of Pi\\u0142sudski 's Combat Organization of the Polish Socialist Party founding\"]",
            "SELECT[\"year when Pi\\u0142sudski 's Combat Organization of the Polish Socialist Party regain prominence\"]",
            "ARITHMETIC['difference', '#2', '#1']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "year when Pi\u0142sudski 's Combat Organization of the Polish Socialist Party regain prominence"
            ],
            [
                "SELECT",
                "year of Pi\u0142sudski 's Combat Organization of the Polish Socialist Party founding"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year when Pi\u0142sudski 's Combat Organization of the Polish Socialist Party regain prominence)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year of Pi\u0142sudski 's Combat Organization of the Polish Socialist Party founding)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Two_Events",
            [
                "SELECT",
                "GET_QUESTION_SPAN(year when Pi\u0142sudski 's Combat Organization of the Polish Socialist Party regain prominence)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(year of Pi\u0142sudski 's Combat Organization of the Polish Socialist Party founding)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5
                ],
                [
                    4,
                    6,
                    7,
                    8,
                    9,
                    10
                ],
                [
                    14
                ],
                [
                    11,
                    12,
                    13,
                    15,
                    16
                ],
                [
                    17,
                    18
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "after",
                "its",
                "founding",
                "did",
                "Pi\u0142sudski",
                "'s",
                "Combat",
                "Organization",
                "of",
                "the",
                "Polish",
                "Socialist",
                "Party",
                "regain",
                "prominence",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    5
                ],
                [],
                [
                    4,
                    6,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    10
                ],
                [],
                [
                    11,
                    12,
                    13,
                    16
                ],
                [
                    15
                ],
                [
                    14,
                    17
                ],
                [
                    18
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3
                ],
                [
                    5,
                    7,
                    11
                ],
                [
                    8,
                    9
                ],
                [
                    4,
                    10
                ],
                [
                    14
                ],
                [
                    13,
                    16
                ],
                [
                    15
                ],
                [
                    17,
                    18
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    17
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    15
                ],
                [
                    7,
                    10
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    15
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    15
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    17
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1498_89fe8219-b100-4200-beff-e803747f2eb4",
        "question_text": "Which art gallery came up last, Trescott Street Gallery or Art Euphoric?",
        "split": "dev",
        "decomposition": "return when  did Trescott Street gallery come up ;return when  did Art Euphoric come up ;return which was  last of #1 ,  #2",
        "program": [
            "SELECT['when did Trescott Street gallery come up']",
            "SELECT['when did Art Euphoric come up']",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "when did Trescott Street gallery come up"
            ],
            [
                "SELECT",
                "when did Art Euphoric come up"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did Trescott Street gallery come up)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did Art Euphoric come up)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did Trescott Street gallery come up)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did Art Euphoric come up)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    6,
                    10
                ],
                [
                    4
                ],
                [
                    7,
                    8,
                    9
                ],
                [
                    11
                ],
                [
                    12,
                    13
                ]
            ],
            "question_tokens": [
                "Which",
                "art",
                "gallery",
                "came",
                "up",
                "last",
                ",",
                "Trescott",
                "Street",
                "Gallery",
                "or",
                "Art",
                "Euphoric",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    5,
                    6
                ],
                [],
                [
                    3,
                    4
                ],
                [],
                [
                    7,
                    8
                ],
                [],
                [
                    9
                ],
                [
                    10
                ],
                [
                    11,
                    12
                ],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    2,
                    3,
                    6,
                    10
                ],
                [
                    5
                ],
                [
                    1,
                    4
                ],
                [
                    7
                ],
                [
                    8,
                    9
                ],
                [],
                [
                    11,
                    12
                ],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1441_42ead691-6cae-4735-af56-d68c3b8780c3",
        "question_text": "Which group had more prisoners of war, Soviet or Finnic?",
        "split": "train",
        "decomposition": "return Soviet prisoners of war ;return Finnic prisoners of war ;return number of  #1 ;return number of  #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['Soviet prisoners of war']",
            "SELECT['Finnic prisoners of war']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "Soviet prisoners of war"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "Finnic prisoners of war"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Soviet prisoners of war)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Finnic prisoners of war)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Soviet prisoners of war)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Finnic prisoners of war)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    3
                ],
                [],
                [
                    0,
                    1,
                    2,
                    4,
                    5
                ],
                [
                    6
                ],
                [],
                [
                    7,
                    8
                ],
                [
                    9,
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "Which",
                "group",
                "had",
                "more",
                "prisoners",
                "of",
                "war",
                ",",
                "Soviet",
                "or",
                "Finnic",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    3
                ],
                [
                    1
                ],
                [],
                [
                    2
                ],
                [
                    4
                ],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [
                    8
                ],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    4
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [
                    8,
                    9,
                    10
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    10
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    3,
                    6
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_690_dab83bd0-a76c-462a-9ebe-7eb8da0bc650",
        "question_text": "How many yards was the longest return?",
        "split": "train",
        "decomposition": "return the  longest return ;return yards of #1",
        "program": [
            "SELECT['the longest return']",
            "PROJECT['yards of #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "yards of #REF",
            [
                "SELECT",
                "the longest return"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(yards of #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the longest return)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the longest return)"
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    5
                ],
                [
                    3,
                    4
                ],
                [
                    6,
                    7
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "the",
                "longest",
                "return",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3
                ],
                [
                    4
                ],
                [
                    5,
                    6
                ],
                [],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    3,
                    5
                ],
                [
                    4
                ],
                [],
                [
                    6,
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_511_34bf61cc-8486-49f1-b7bf-ec3ea602bb8d",
        "question_text": "Which team allowed the least points in the game?",
        "split": "train",
        "decomposition": "return teams ;return points allowed of #1 ;return sum of #2 for each #1 ;return #1 where #3 is lowest",
        "program": [
            "SELECT['teams']",
            "PROJECT['points allowed of #REF', '#1']",
            "GROUP['sum', '#2', '#1']",
            "SUPERLATIVE['min', '#1', '#3']"
        ],
        "nested_expression": [
            "SUPERLATIVE_min",
            [
                "SELECT",
                "teams"
            ],
            [
                "GROUP_sum",
                [
                    "PROJECT",
                    "points allowed of #REF",
                    [
                        "SELECT",
                        "teams"
                    ]
                ],
                [
                    "SELECT",
                    "teams"
                ]
            ]
        ],
        "typed_nested_expression": [
            "SUPERLATIVE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(teams)"
            ],
            [
                "PARTIAL_GROUP_sum",
                [
                    "PARTIAL_SELECT_NUM",
                    "GET_QUESTION_SPAN(points allowed of #REF)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "SUPERLATIVE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(teams)"
            ],
            [
                "PARTIAL_SELECT_SINGLE_NUM",
                "GET_QUESTION_SPAN(points allowed of #REF)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "superlative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    6,
                    7
                ],
                [],
                [
                    4,
                    5
                ],
                [
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "Which",
                "team",
                "allowed",
                "the",
                "least",
                "points",
                "in",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [
                    4,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    7
                ],
                [],
                [],
                [],
                [
                    4,
                    5
                ],
                [],
                [
                    8,
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_597_5489e848-3518-4212-9d54-4a860cbd58ed",
        "question_text": "Which occurred first, the Battle of Mons-en-P\u00e9v\u00e8le or the Battle of Zierikzee?",
        "split": "train",
        "decomposition": "return when  was  the  Battle of Mons-en-P\u00e9v\u00e8le ;return when  was  the  Battle of Zierikzee ;return which is the  lowest of #1 ,  #2",
        "program": [
            "SELECT['when was the Battle of Mons-en-P\\xe9v\\xe8le']",
            "SELECT['when was the Battle of Zierikzee']",
            "COMPARISON['min', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "when was the Battle of Mons-en-P\u00e9v\u00e8le"
            ],
            [
                "SELECT",
                "when was the Battle of Zierikzee"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the Battle of Mons-en-P\u00e9v\u00e8le)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the Battle of Zierikzee)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the Battle of Mons-en-P\u00e9v\u00e8le)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the Battle of Zierikzee)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    12,
                    14
                ],
                [
                    4,
                    6,
                    7,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    13,
                    15
                ],
                [
                    16,
                    17
                ]
            ],
            "question_tokens": [
                "Which",
                "occurred",
                "first",
                ",",
                "the",
                "Battle",
                "of",
                "Mons",
                "-",
                "en",
                "-",
                "P\u00e9v\u00e8le",
                "or",
                "the",
                "Battle",
                "of",
                "Zierikzee",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    5
                ],
                [],
                [
                    6
                ],
                [
                    7,
                    8
                ],
                [
                    9,
                    11
                ],
                [],
                [
                    10,
                    12,
                    13,
                    14
                ],
                [
                    15
                ],
                [
                    16
                ],
                [
                    17
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    3,
                    12
                ],
                [
                    1,
                    2,
                    5,
                    7,
                    14
                ],
                [
                    8,
                    10
                ],
                [
                    9
                ],
                [
                    11
                ],
                [],
                [],
                [
                    16,
                    17
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    16
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    16
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    16
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    16
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_785_039009ea-c5ae-4cb3-aa65-f00103a2eea2",
        "question_text": "How many yards longer was Ben Roethlisberger's second touchdown pass to Santonio Holmes compared to his first?",
        "split": "train",
        "decomposition": "return yards of touchdown passes from  Ben Roethlisberger to Santonio Holmes ;return second of #1 ;return first of #1 ;return difference of #2 and  #3",
        "program": [
            "SELECT['yards of touchdown passes from Ben Roethlisberger to Santonio Holmes']",
            "PROJECT['second of #REF', '#1']",
            "AGGREGATE['min', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "PROJECT",
                "second of #REF",
                [
                    "SELECT",
                    "yards of touchdown passes from Ben Roethlisberger to Santonio Holmes"
                ]
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of touchdown passes from Ben Roethlisberger to Santonio Holmes"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(second of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes from Ben Roethlisberger to Santonio Holmes)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes from Ben Roethlisberger to Santonio Holmes)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(second of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes from Ben Roethlisberger to Santonio Holmes)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes from Ben Roethlisberger to Santonio Holmes)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [],
                [],
                [],
                [
                    5,
                    6
                ],
                [],
                [
                    11,
                    13,
                    14,
                    15
                ],
                [
                    2,
                    4,
                    7,
                    8,
                    9,
                    10,
                    12,
                    16,
                    17
                ],
                [],
                [
                    18
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "Ben",
                "Roethlisberger",
                "'s",
                "second",
                "touchdown",
                "pass",
                "to",
                "Santonio",
                "Holmes",
                "compared",
                "to",
                "his",
                "first",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [
                    5
                ],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    12
                ],
                [],
                [
                    14
                ],
                [],
                [
                    4,
                    7,
                    9,
                    10,
                    16
                ],
                [],
                [],
                [],
                [
                    13
                ],
                [],
                [],
                [
                    18
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [
                    5,
                    6
                ],
                [],
                [],
                [
                    9
                ],
                [],
                [],
                [],
                [
                    12
                ],
                [],
                [
                    11,
                    13,
                    14,
                    15
                ],
                [
                    2,
                    4,
                    7,
                    8,
                    10
                ],
                [
                    16,
                    17
                ],
                [],
                [],
                [
                    18
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    13
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    17
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    17
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    17
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1233_bc7dcb96-002f-4c86-a45a-6a6d54b0bd1a",
        "question_text": "In which quarters did the Saints not score?",
        "split": "dev",
        "decomposition": "return quarters ;return #1 in  which the  Saints score ;return #1 besides  #2",
        "program": [
            "SELECT['quarters']",
            "FILTER['#1', 'in which the Saints score']",
            "DISCARD['#1', '#2']"
        ],
        "nested_expression": [
            "DISCARD",
            [
                "SELECT",
                "quarters"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "quarters"
                ],
                "in which the Saints score"
            ]
        ],
        "typed_nested_expression": [
            "DISCARD",
            [
                "SELECT",
                "GET_QUESTION_SPAN(quarters)"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(quarters)"
                ],
                "GET_QUESTION_SPAN(in which the Saints score)"
            ]
        ],
        "drop_nested_expression": [
            "DISCARD",
            [
                "SELECT",
                "GET_QUESTION_SPAN(quarters)"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(quarters)"
                ],
                "GET_QUESTION_SPAN(in which the Saints score)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "discard"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    6,
                    7
                ],
                [
                    3
                ],
                [],
                [],
                [
                    4
                ],
                [
                    5
                ],
                [
                    8
                ]
            ],
            "question_tokens": [
                "In",
                "which",
                "quarters",
                "did",
                "the",
                "Saints",
                "not",
                "score",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    6
                ],
                [],
                [],
                [],
                [],
                [
                    3
                ],
                [
                    2,
                    7
                ],
                [],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [],
                [],
                [
                    0,
                    1,
                    2,
                    6,
                    7
                ],
                [],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    3,
                    7
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1801_a77c644a-1f87-4aa0-8197-626923266097",
        "question_text": "How many touchdowns did Boldin score during the first half?",
        "split": "train",
        "decomposition": "return touchdowns that Boldin did score during the  first half ;return number of  #1",
        "program": [
            "SELECT['touchdowns that Boldin did score during the first half']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "touchdowns that Boldin did score during the first half"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdowns that Boldin did score during the first half)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdowns that Boldin did score during the first half)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [
                    7
                ],
                [
                    8,
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "touchdowns",
                "did",
                "Boldin",
                "score",
                "during",
                "the",
                "first",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    4
                ],
                [
                    5
                ],
                [
                    6,
                    7,
                    8
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    4
                ],
                [
                    2,
                    3,
                    5,
                    6
                ],
                [
                    7
                ],
                [],
                [
                    8,
                    9,
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_658_dfd48c2b-0181-4a1f-9565-236ef6e60346",
        "question_text": "Which player scored points for their team first?",
        "split": "train",
        "decomposition": "return players that scored points for their team ;return first of #1",
        "program": [
            "SELECT['players that scored points for their team']",
            "AGGREGATE['min', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "players that scored points for their team"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(players that scored points for their team)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(players that scored points for their team)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    7
                ],
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [
                    8
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "scored",
                "points",
                "for",
                "their",
                "team",
                "first",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    6
                ],
                [
                    4
                ],
                [
                    5,
                    7
                ],
                [],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2,
                    3,
                    6
                ],
                [],
                [
                    7
                ],
                [
                    5
                ],
                [
                    4
                ],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_171_61c1f58a-f4a1-4ab5-98a6-efa1f5efb334",
        "question_text": "How many more yards than the Jaguars did the Texans tally?",
        "split": "train",
        "decomposition": "return yards of the  Texans ;return yards of the  Jaguars ;return sum of #1 ;return sum of #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['yards of the Texans']",
            "SELECT['yards of the Jaguars']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of the Texans"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of the Jaguars"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of the Texans)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of the Jaguars)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of the Texans)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of the Jaguars)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4
                ],
                [
                    3
                ],
                [
                    5,
                    6
                ],
                [],
                [
                    7,
                    10
                ],
                [
                    8,
                    9
                ],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "yards",
                "than",
                "the",
                "Jaguars",
                "did",
                "the",
                "Texans",
                "tally",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    9
                ],
                [],
                [],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    4
                ],
                [
                    3
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    7,
                    10
                ],
                [
                    9
                ],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2752_b57308c1-1e3c-4d70-b338-d599c311e50e",
        "question_text": "How many field goals of at least 30 yards did Matt Prater make?",
        "split": "train",
        "decomposition": "return yards of field goals that Matt Prater did make ;return #1 that was  at least 30 ;return number of  #2",
        "program": [
            "SELECT['yards of field goals that Matt Prater did make']",
            "FILTER['#1', 'that was at least 30']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "yards of field goals that Matt Prater did make"
                ],
                "that was at least 30"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals that Matt Prater did make)"
                ],
                "GET_QUESTION_SPAN(that was at least 30)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_GT_EQ",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals that Matt Prater did make)"
                ],
                "GET_QUESTION_NUMBER(30)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    9
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                ],
                [],
                [
                    13
                ],
                [
                    8,
                    10,
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "field",
                "goals",
                "of",
                "at",
                "least",
                "30",
                "yards",
                "did",
                "Matt",
                "Prater",
                "make",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [
                    9
                ],
                [],
                [],
                [
                    7,
                    8,
                    10,
                    11,
                    12
                ],
                [],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    9,
                    10,
                    11
                ],
                [
                    2,
                    3
                ],
                [
                    4,
                    5,
                    6,
                    7
                ],
                [],
                [],
                [
                    13
                ],
                [
                    8,
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    8
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1731_8a7254c4-c79c-444a-bd07-e9c2eacd19fe",
        "question_text": "How many millions of people residing in France and Italy were born outside of the EU?",
        "split": "dev",
        "decomposition": "return millions of people residing in  France that were born outside of  the  EU ;return millions of people residing in  Italy that were born outside of  the  EU ;return sum of #1 and  #2",
        "program": [
            "SELECT['millions of people residing in France that were born outside of the EU']",
            "SELECT['millions of people residing in Italy that were born outside of the EU']",
            "ARITHMETIC['sum', '#1', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT",
                "millions of people residing in France that were born outside of the EU"
            ],
            [
                "SELECT",
                "millions of people residing in Italy that were born outside of the EU"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(millions of people residing in France that were born outside of the EU)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(millions of people residing in Italy that were born outside of the EU)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(millions of people residing in France that were born outside of the EU)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(millions of people residing in Italy that were born outside of the EU)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    4,
                    8,
                    10
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    5,
                    6
                ],
                [
                    7,
                    9,
                    11
                ],
                [
                    12,
                    15
                ],
                [
                    13,
                    14
                ],
                [
                    16
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "millions",
                "of",
                "people",
                "residing",
                "in",
                "France",
                "and",
                "Italy",
                "were",
                "born",
                "outside",
                "of",
                "the",
                "EU",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    4,
                    8
                ],
                [],
                [
                    2
                ],
                [
                    5
                ],
                [],
                [
                    6
                ],
                [
                    7
                ],
                [
                    9
                ],
                [],
                [
                    10,
                    12,
                    15
                ],
                [],
                [],
                [
                    11,
                    13
                ],
                [],
                [],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    4,
                    8,
                    10
                ],
                [],
                [],
                [
                    5
                ],
                [
                    7,
                    9,
                    11
                ],
                [],
                [],
                [
                    12,
                    15
                ],
                [],
                [],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    15
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    15
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    15
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    15
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    15
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_187_5e325403-9c54-48ed-88fd-2b3d8c26baf1",
        "question_text": "How many days were there between the two unsuccessful attacks?",
        "split": "dev",
        "decomposition": "return days when  there  were unsuccessful attacks ;return the  difference of #1",
        "program": [
            "SELECT['days when there were unsuccessful attacks']",
            "PROJECT['the difference of #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "the difference of #REF",
            [
                "SELECT",
                "days when there were unsuccessful attacks"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the difference of #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(days when there were unsuccessful attacks)"
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the difference of #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(days when there were unsuccessful attacks)"
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    3,
                    6,
                    7
                ],
                [],
                [
                    4,
                    5,
                    9
                ],
                [
                    8,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "days",
                "were",
                "there",
                "between",
                "the",
                "two",
                "unsuccessful",
                "attacks",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1,
                    2
                ],
                [
                    7
                ],
                [],
                [
                    3,
                    4,
                    5
                ],
                [
                    6
                ],
                [
                    9
                ],
                [
                    8
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    6,
                    7
                ],
                [],
                [
                    9
                ],
                [],
                [
                    8,
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2704_577d2b48-de01-4774-b507-bba11358dacb",
        "question_text": "How many points were the Browns ahead by at the half?",
        "split": "train",
        "decomposition": "return points at the  half ;return points of the  Browns at the half ;return difference of #1 and  #2 ;return difference of #2 and  #3",
        "program": [
            "SELECT['points at the half']",
            "SELECT['points of the Browns at the half']",
            "ARITHMETIC['difference', '#1', '#2']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "points of the Browns at the half"
            ],
            [
                "ARITHMETIC_difference",
                [
                    "SELECT",
                    "points at the half"
                ],
                [
                    "SELECT",
                    "points of the Browns at the half"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points of the Browns at the half)"
                ]
            ],
            [
                "ARITHMETIC_difference",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(points at the half)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(points of the Browns at the half)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points of the Browns at the half)"
                ]
            ],
            [
                "ARITHMETIC_difference",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(points at the half)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(points of the Browns at the half)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [],
                [],
                [],
                [],
                [
                    5,
                    6,
                    8
                ],
                [
                    7
                ],
                [],
                [],
                [
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "points",
                "were",
                "the",
                "Browns",
                "ahead",
                "by",
                "at",
                "the",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    5,
                    6
                ],
                [
                    7
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    8
                ],
                [],
                [
                    10
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    10,
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1802_cfa3e5fa-4d05-4bf9-bad1-35219a3fdbb6",
        "question_text": "How many yards was the longest passing touchdown in the game?",
        "split": "train",
        "decomposition": "return yards of passing touchdowns in  the  game ;return longest of #1",
        "program": [
            "SELECT['yards of passing touchdowns in the game']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "yards of passing touchdowns in the game"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of passing touchdowns in the game)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of passing touchdowns in the game)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    5,
                    6,
                    7
                ],
                [
                    4,
                    8,
                    9
                ],
                [
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "the",
                "longest",
                "passing",
                "touchdown",
                "in",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    5,
                    7
                ],
                [
                    6
                ],
                [],
                [
                    8
                ],
                [],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    6
                ],
                [],
                [
                    2,
                    3
                ],
                [
                    5,
                    7
                ],
                [
                    8
                ],
                [],
                [
                    10,
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_380_04d572f8-8df7-46d6-9eb2-f00042d259de",
        "question_text": "How many years passed between the creation of The Academy and the publication of Ljetopis?",
        "split": "train",
        "decomposition": "return year of the  creation of  The Academy ;return year of the  publication of  Ljetopis ;return the  difference of #2 and  #1",
        "program": [
            "SELECT['year of the creation of The Academy']",
            "SELECT['year of the publication of Ljetopis']",
            "ARITHMETIC['difference', '#2', '#1']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "year of the publication of Ljetopis"
            ],
            [
                "SELECT",
                "year of the creation of The Academy"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year of the publication of Ljetopis)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year of the creation of The Academy)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Two_Events",
            [
                "SELECT",
                "GET_QUESTION_SPAN(year of the publication of Ljetopis)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(year of the creation of The Academy)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    6,
                    10
                ],
                [
                    5,
                    7,
                    8
                ],
                [
                    9
                ],
                [
                    11,
                    12,
                    13
                ],
                [
                    14,
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "passed",
                "between",
                "the",
                "creation",
                "of",
                "The",
                "Academy",
                "and",
                "the",
                "publication",
                "of",
                "Ljetopis",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    4
                ],
                [],
                [
                    5,
                    6
                ],
                [
                    7
                ],
                [
                    9
                ],
                [
                    8
                ],
                [
                    10,
                    11
                ],
                [
                    13
                ],
                [
                    12,
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2,
                    8
                ],
                [
                    3,
                    4
                ],
                [
                    6,
                    7,
                    10,
                    13
                ],
                [],
                [],
                [
                    9,
                    12
                ],
                [],
                [],
                [
                    14,
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    14
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    14
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    14
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1366_d78aa51a-e37c-48b3-b1a6-a9c991c77e81",
        "question_text": "Which Cowboys players scored touchdowns?",
        "split": "train",
        "decomposition": "return Cowboys players ;return #1 that scored touchdowns",
        "program": [
            "SELECT['Cowboys players']",
            "FILTER['#1', 'that scored touchdowns']"
        ],
        "nested_expression": [
            "FILTER",
            [
                "SELECT",
                "Cowboys players"
            ],
            "that scored touchdowns"
        ],
        "typed_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(Cowboys players)"
            ],
            "GET_QUESTION_SPAN(that scored touchdowns)"
        ],
        "drop_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(Cowboys players)"
            ],
            "GET_QUESTION_SPAN(that scored touchdowns)"
        ],
        "operators": [
            "select",
            "filter"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    3,
                    4
                ],
                [
                    1
                ],
                [],
                [
                    5
                ]
            ],
            "question_tokens": [
                "Which",
                "Cowboys",
                "players",
                "scored",
                "touchdowns",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    2,
                    3,
                    4
                ],
                [],
                [
                    1
                ],
                [],
                [],
                [],
                [
                    5
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    2,
                    3,
                    4
                ],
                [],
                [
                    1
                ],
                [],
                [],
                [
                    5
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3153_6c93993a-74cf-4b93-a16c-38a9e74b533c",
        "question_text": "How many yards was the shortest touchdown pass thrown this game?",
        "split": "train",
        "decomposition": "return touchdown passes of the  game ;return the  shortest of #1 ;return the  yards of #2",
        "program": [
            "SELECT['touchdown passes of the game']",
            "AGGREGATE['min', '#1']",
            "PROJECT['the yards of #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "the yards of #REF",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "touchdown passes of the game"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the yards of #REF)",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes of the game)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes of the game)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    5,
                    6,
                    7
                ],
                [
                    4,
                    8
                ],
                [
                    9,
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "the",
                "shortest",
                "touchdown",
                "pass",
                "thrown",
                "this",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    5,
                    6,
                    7
                ],
                [],
                [],
                [],
                [
                    8,
                    9
                ],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    6
                ],
                [
                    5,
                    7
                ],
                [],
                [
                    8,
                    9
                ],
                [
                    10,
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_690_90539a00-6d82-49da-aa9d-5c92e2d556f7",
        "question_text": "How many citizens from principal towns in France could be held as hostage in lieu of John II?",
        "split": "train",
        "decomposition": "return principal towns in  France ;return citizens from  #1 that could be held as hostage in  lieu of John II ;return number of  #2",
        "program": [
            "SELECT['principal towns in France']",
            "PROJECT['citizens from #REF that could be held as hostage in lieu of John II', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "citizens from #REF that could be held as hostage in lieu of John II",
                [
                    "SELECT",
                    "principal towns in France"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(citizens from #REF that could be held as hostage in lieu of John II)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(principal towns in France)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(citizens from #REF that could be held as hostage in lieu of John II)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(principal towns in France)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    8
                ],
                [
                    4,
                    5,
                    7,
                    10,
                    12,
                    14
                ],
                [
                    3,
                    6,
                    9,
                    11,
                    13,
                    15,
                    16
                ],
                [
                    17,
                    18
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "citizens",
                "from",
                "principal",
                "towns",
                "in",
                "France",
                "could",
                "be",
                "held",
                "as",
                "hostage",
                "in",
                "lieu",
                "of",
                "John",
                "II",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    8
                ],
                [
                    6,
                    7,
                    9
                ],
                [],
                [
                    10,
                    11,
                    16
                ],
                [
                    12,
                    13,
                    15,
                    17
                ],
                [
                    14
                ],
                [],
                [
                    18
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    5
                ],
                [],
                [
                    8
                ],
                [
                    15
                ],
                [
                    4,
                    10,
                    12,
                    14
                ],
                [
                    11,
                    13,
                    16
                ],
                [
                    7,
                    9,
                    17
                ],
                [
                    18
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    7
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    17
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    17
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    17
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    17
                ],
                [
                    14,
                    17
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    17
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    17
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2656_da9fa633-bd2b-42d4-88f1-7a8f6934b15f",
        "question_text": "How many field goals of at least 40 yards did Justin Tucker make?",
        "split": "train",
        "decomposition": "return yards of field goals that Justin Tucker did make ;return #1 that are at least 40 ;return number of  #2",
        "program": [
            "SELECT['yards of field goals that Justin Tucker did make']",
            "FILTER['#1', 'that are at least 40']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "yards of field goals that Justin Tucker did make"
                ],
                "that are at least 40"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals that Justin Tucker did make)"
                ],
                "GET_QUESTION_SPAN(that are at least 40)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_GT_EQ",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals that Justin Tucker did make)"
                ],
                "GET_QUESTION_NUMBER(40)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    9
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                ],
                [
                    10
                ],
                [
                    13
                ],
                [
                    8,
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "field",
                "goals",
                "of",
                "at",
                "least",
                "40",
                "yards",
                "did",
                "Justin",
                "Tucker",
                "make",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                ],
                [],
                [
                    9
                ],
                [],
                [
                    10
                ],
                [
                    8,
                    12
                ],
                [
                    11
                ],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    9
                ],
                [
                    2,
                    3
                ],
                [
                    4,
                    5,
                    6,
                    7
                ],
                [
                    10
                ],
                [],
                [
                    11,
                    13
                ],
                [
                    8,
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    8
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1646_00012a83-fcec-41c7-821e-487adce962eb",
        "question_text": "How many  years would  5.6 trillion for operations of the War on Terror last?",
        "split": "train",
        "decomposition": "return years that the  5.6 trillion for operations of the War on Terror would last ;return the  number of  #1",
        "program": [
            "SELECT['years that the 5.6 trillion for operations of the War on Terror would last']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "years that the 5.6 trillion for operations of the War on Terror would last"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years that the 5.6 trillion for operations of the War on Terror would last)"
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Single_Event",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years that the 5.6 trillion for operations of the War on Terror would last)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    10,
                    13
                ],
                [
                    8,
                    9,
                    11
                ],
                [
                    7,
                    12,
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "would",
                "5.6",
                "trillion",
                "for",
                "operations",
                "of",
                "the",
                "War",
                "on",
                "Terror",
                "last",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    4
                ],
                [
                    5
                ],
                [
                    6,
                    7,
                    8
                ],
                [
                    9,
                    10,
                    11
                ],
                [
                    12
                ],
                [
                    13,
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4,
                    5
                ],
                [
                    6,
                    10,
                    13
                ],
                [
                    8,
                    9,
                    11
                ],
                [
                    12
                ],
                [
                    7,
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    13
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    12
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1926_6e270dd0-f7ed-45de-b495-8f5ed962fc78",
        "question_text": "How many points did Miami beat Dallas by in game 1?",
        "split": "train",
        "decomposition": "return points of Miami in  game 1 ;return points of Dallas in  game 1 ;return sum of #1 ;return sum of #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['points of Miami in game 1']",
            "SELECT['points of Dallas in game 1']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "points of Miami in game 1"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "points of Dallas in game 1"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points of Miami in game 1)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points of Dallas in game 1)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points of Miami in game 1)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points of Dallas in game 1)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    3
                ],
                [
                    2,
                    4,
                    5
                ],
                [
                    6,
                    7
                ],
                [],
                [
                    8,
                    10
                ],
                [
                    9,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "points",
                "did",
                "Miami",
                "beat",
                "Dallas",
                "by",
                "in",
                "game",
                "1",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [
                    2
                ],
                [
                    5
                ],
                [],
                [
                    4
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [
                    7,
                    8,
                    10
                ],
                [
                    9
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    4,
                    5
                ],
                [
                    3
                ],
                [
                    6
                ],
                [
                    7
                ],
                [],
                [],
                [],
                [
                    10
                ],
                [],
                [
                    9,
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1873_30504e30-71aa-4643-98f3-8132de444b3b",
        "question_text": "How many different players scored two touchdowns?",
        "split": "dev",
        "decomposition": "return players ;return touchdowns of #1 ;return number of  #2 for each #1 ;return #1 where #3 is two",
        "program": [
            "SELECT['players']",
            "PROJECT['touchdowns of #REF', '#1']",
            "GROUP['count', '#2', '#1']",
            "COMPARATIVE['#1', '#3', 'is two']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "players"
            ],
            [
                "GROUP_count",
                [
                    "PROJECT",
                    "touchdowns of #REF",
                    [
                        "SELECT",
                        "players"
                    ]
                ],
                [
                    "SELECT",
                    "players"
                ]
            ],
            "is two"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(players)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(touchdowns of #REF)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is two)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(players)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(touchdowns of #REF)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is two)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    3,
                    4
                ],
                [
                    2
                ],
                [],
                [],
                [
                    5,
                    6
                ],
                [],
                [],
                [
                    7
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "different",
                "players",
                "scored",
                "two",
                "touchdowns",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    3,
                    4
                ],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2
                ],
                [
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    2
                ],
                [],
                [
                    3,
                    4
                ],
                [],
                [],
                [],
                [],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [
                    7
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_745_3a32fc2c-804a-49bc-8152-e0a2217faac1",
        "question_text": "How many Irish military groups were created in 1913?",
        "split": "train",
        "decomposition": "return Irish military groups created in 1913 ;return number of #1",
        "program": [
            "SELECT['Irish military groups created in 1913']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "Irish military groups created in 1913"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(Irish military groups created in 1913)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(Irish military groups created in 1913)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    5
                ],
                [
                    3,
                    4,
                    6,
                    7
                ],
                [
                    2,
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "Irish",
                "military",
                "groups",
                "were",
                "created",
                "in",
                "1913",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    3,
                    4,
                    5
                ],
                [
                    2
                ],
                [
                    6,
                    7
                ],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    4,
                    5
                ],
                [],
                [
                    3,
                    6,
                    7
                ],
                [
                    2,
                    8
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2993_79dc8e7c-0845-4265-a6bf-af605f8eb863",
        "question_text": "How many percent of the market did Sony and Nintendo hold in August of 1997?",
        "split": "train",
        "decomposition": "return percent of the  market that Sony holds in  August of  1997 ;return percent of the  market that Nintendo holds in  August of  1997 ;return the  sum of #1 and  #2",
        "program": [
            "SELECT['percent of the market that Sony holds in August of 1997']",
            "SELECT['percent of the market that Nintendo holds in August of 1997']",
            "ARITHMETIC['sum', '#1', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT",
                "percent of the market that Sony holds in August of 1997"
            ],
            [
                "SELECT",
                "percent of the market that Nintendo holds in August of 1997"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent of the market that Sony holds in August of 1997)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent of the market that Nintendo holds in August of 1997)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent of the market that Sony holds in August of 1997)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent of the market that Nintendo holds in August of 1997)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    5,
                    8
                ],
                [
                    1,
                    7
                ],
                [
                    3,
                    4,
                    6
                ],
                [],
                [
                    9,
                    14
                ],
                [
                    10,
                    11,
                    13
                ],
                [
                    12,
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "percent",
                "of",
                "the",
                "market",
                "did",
                "Sony",
                "and",
                "Nintendo",
                "hold",
                "in",
                "August",
                "of",
                "1997",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    5,
                    8
                ],
                [],
                [
                    2
                ],
                [],
                [
                    6
                ],
                [],
                [
                    7
                ],
                [],
                [
                    9
                ],
                [],
                [],
                [
                    10
                ],
                [
                    11
                ],
                [
                    12
                ],
                [
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    5,
                    8
                ],
                [
                    6
                ],
                [
                    7
                ],
                [],
                [],
                [],
                [],
                [
                    9,
                    14
                ],
                [
                    10
                ],
                [],
                [
                    12,
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    14
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    14
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1487_04a9c713-3a4b-497c-b5a5-ffdde0a59570",
        "question_text": "How many total field goal yards did David Akers kick?",
        "split": "train",
        "decomposition": "return yards of field goals of  David Akers ;return sum of #1",
        "program": [
            "SELECT['yards of field goals of David Akers']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "yards of field goals of David Akers"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals of David Akers)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals of David Akers)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9
                ],
                [],
                [
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "total",
                "field",
                "goal",
                "yards",
                "did",
                "David",
                "Akers",
                "kick",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    5
                ],
                [],
                [
                    6
                ],
                [
                    7,
                    8
                ],
                [
                    4,
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3,
                    4
                ],
                [
                    2,
                    5,
                    6,
                    7,
                    8,
                    9
                ],
                [],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2764_0ea6641e-4828-4985-af82-1b00ca69da86",
        "question_text": "How many yards was Bullock's shortest field goal or the game?",
        "split": "train",
        "decomposition": "return yards of field goals of  Bullock ;return lowest of #1",
        "program": [
            "SELECT['yards of field goals of Bullock']",
            "AGGREGATE['min', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "yards of field goals of Bullock"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals of Bullock)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals of Bullock)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8
                ],
                [
                    10
                ],
                [
                    9,
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "Bullock",
                "'s",
                "shortest",
                "field",
                "goal",
                "or",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    5,
                    6,
                    7,
                    8
                ],
                [],
                [],
                [
                    4,
                    9
                ],
                [],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    5
                ],
                [
                    6,
                    7,
                    8
                ],
                [],
                [
                    4,
                    9
                ],
                [
                    11,
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    11
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    11
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_153_c6bce289-1649-47cf-93df-29ebd80d41ed",
        "question_text": "How many field goals were over 30 yards?",
        "split": "dev",
        "decomposition": "return yards of field goals ;return #1 that were over 30 ;return number of  #2",
        "program": [
            "SELECT['yards of field goals']",
            "FILTER['#1', 'that were over 30']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "yards of field goals"
                ],
                "that were over 30"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals)"
                ],
                "GET_QUESTION_SPAN(that were over 30)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_GT",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals)"
                ],
                "GET_QUESTION_NUMBER(30)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    5
                ],
                [],
                [
                    8
                ],
                [
                    4,
                    6,
                    7
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "field",
                "goals",
                "were",
                "over",
                "30",
                "yards",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    5
                ],
                [],
                [],
                [],
                [],
                [
                    4,
                    6,
                    7
                ],
                [],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    6
                ],
                [
                    5
                ],
                [],
                [],
                [
                    8
                ],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_3398_ad0d1261-5025-45d6-a1f7-7a9cd5919b75",
        "question_text": "How many percent of people were not multiracial?",
        "split": "train",
        "decomposition": "return percent of people who  were multiracial ;return difference of 100 and  #1",
        "program": [
            "SELECT['percent of people who were multiracial']",
            "PROJECT['difference of 100 and #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "difference of 100 and #REF",
            [
                "SELECT",
                "percent of people who were multiracial"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(difference of 100 and #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(percent of people who were multiracial)"
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            "SELECT_IMPLICIT_NUM(100)",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent of people who were multiracial)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "percent",
                "of",
                "people",
                "were",
                "not",
                "multiracial",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    6
                ],
                [],
                [
                    4,
                    5
                ],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [],
                [],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1060_a6e0ec7d-5d04-4761-bb81-3ed93f50462e",
        "question_text": "How many field goals of over 30-yards did Mason Crosby kick in the fourth quarter?",
        "split": "train",
        "decomposition": "return field goals of Mason Crosby in  the  fourth quarter ;return #1 that are over 30-yards ;return the  number of  #2",
        "program": [
            "SELECT['field goals of Mason Crosby in the fourth quarter']",
            "FILTER['#1', 'that are over 30-yards']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "field goals of Mason Crosby in the fourth quarter"
                ],
                "that are over 30-yards"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Mason Crosby in the fourth quarter)"
                ],
                "GET_QUESTION_SPAN(that are over 30-yards)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_GT",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(field goals of Mason Crosby)"
                    ],
                    "GET_QUESTION_SPAN(in the fourth quarter)"
                ],
                "GET_QUESTION_NUMBER(30)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    7
                ],
                [
                    2,
                    3,
                    5
                ],
                [
                    11,
                    13,
                    14
                ],
                [
                    4,
                    12
                ],
                [],
                [
                    15
                ],
                [
                    6,
                    8,
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "field",
                "goals",
                "of",
                "over",
                "30-yards",
                "did",
                "Mason",
                "Crosby",
                "kick",
                "in",
                "the",
                "fourth",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    5
                ],
                [],
                [
                    13,
                    14
                ],
                [],
                [
                    7
                ],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    6,
                    8,
                    9,
                    10
                ],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    7
                ],
                [
                    2,
                    3
                ],
                [
                    5,
                    6
                ],
                [],
                [
                    11,
                    13,
                    14
                ],
                [],
                [],
                [],
                [
                    15
                ],
                [
                    8,
                    9,
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    14
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    14
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_268_2bb9237c-cdf6-4b1e-b7b1-1e94af933cf1",
        "question_text": "Which ethnic group comprised the smallest amount of Buddhists?",
        "split": "train",
        "decomposition": "return Buddhists ;return ethnic groups of #1 ;return the  number of  #1 for each #2 ;return #2 where #3 is the  smallest",
        "program": [
            "SELECT['Buddhists']",
            "PROJECT['ethnic groups of #REF', '#1']",
            "GROUP['count', '#1', '#2']",
            "COMPARATIVE['#2', '#3', 'is the smallest']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "PROJECT",
                "ethnic groups of #REF",
                [
                    "SELECT",
                    "Buddhists"
                ]
            ],
            [
                "GROUP_count",
                [
                    "SELECT",
                    "Buddhists"
                ],
                [
                    "PROJECT",
                    "ethnic groups of #REF",
                    [
                        "SELECT",
                        "Buddhists"
                    ]
                ]
            ],
            "is the smallest"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(ethnic groups of #REF)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(Buddhists)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is the smallest)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(ethnic groups of #REF)"
            ],
            [
                "PARTIAL_SELECT_SINGLE_NUM",
                "GET_QUESTION_SPAN(Buddhists)"
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is the smallest)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    4
                ],
                [],
                [
                    3,
                    5,
                    6
                ],
                [],
                [
                    7,
                    8
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "Which",
                "ethnic",
                "group",
                "comprised",
                "the",
                "smallest",
                "amount",
                "of",
                "Buddhists",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [],
                [],
                [],
                [
                    3
                ],
                [
                    5,
                    6
                ],
                [],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    1
                ],
                [
                    0
                ],
                [
                    2
                ],
                [],
                [],
                [
                    3
                ],
                [
                    5
                ],
                [
                    6,
                    7
                ],
                [],
                [],
                [
                    8,
                    9
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2251_59a77635-2026-4d4b-b9b7-c7dbeefcd73f",
        "question_text": "How many yards difference was Tom Brady\u2019s first touchdown pass compared to Eli Manning\u2019s first touchdown pass?",
        "split": "train",
        "decomposition": "return touchdown passes of Tom Brady ;return first of #1 ;return yards of #2 ;return touchdown passes of Eli Manning ;return first of #4 ;return yards of #5 ;return difference of #3 and  #6",
        "program": [
            "SELECT['touchdown passes of Tom Brady']",
            "AGGREGATE['min', '#1']",
            "PROJECT['yards of #REF', '#2']",
            "SELECT['touchdown passes of Eli Manning']",
            "AGGREGATE['min', '#4']",
            "PROJECT['yards of #REF', '#5']",
            "ARITHMETIC['difference', '#3', '#6']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "PROJECT",
                "yards of #REF",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "touchdown passes of Tom Brady"
                    ]
                ]
            ],
            [
                "PROJECT",
                "yards of #REF",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "touchdown passes of Eli Manning"
                    ]
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(yards of #REF)",
                    [
                        "AGGREGATE_min",
                        [
                            "SELECT",
                            "GET_QUESTION_SPAN(touchdown passes of Tom Brady)"
                        ]
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(yards of #REF)",
                    [
                        "AGGREGATE_min",
                        [
                            "SELECT",
                            "GET_QUESTION_SPAN(touchdown passes of Eli Manning)"
                        ]
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(yards of #REF)",
                    [
                        "AGGREGATE_min",
                        [
                            "SELECT",
                            "GET_QUESTION_SPAN(touchdown passes of Tom Brady)"
                        ]
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(yards of #REF)",
                    [
                        "AGGREGATE_min",
                        [
                            "SELECT",
                            "GET_QUESTION_SPAN(touchdown passes of Eli Manning)"
                        ]
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project",
            "select",
            "aggregate",
            "project",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [],
                [],
                [],
                [
                    2,
                    4,
                    5,
                    6,
                    8,
                    9,
                    10
                ],
                [],
                [],
                [
                    7,
                    11,
                    12,
                    15
                ],
                [],
                [],
                [
                    16,
                    17,
                    18
                ],
                [
                    13
                ],
                [
                    19
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "difference",
                "was",
                "Tom",
                "Brady",
                "\u2019s",
                "first",
                "touchdown",
                "pass",
                "compared",
                "to",
                "Eli",
                "Manning",
                "\u2019s",
                "first",
                "touchdown",
                "pass",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    2,
                    4,
                    9
                ],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    7,
                    11,
                    15
                ],
                [],
                [],
                [],
                [
                    13
                ],
                [
                    10,
                    17,
                    18
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    19
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [
                    5,
                    6
                ],
                [
                    7
                ],
                [],
                [
                    9
                ],
                [],
                [
                    2,
                    4
                ],
                [
                    10
                ],
                [],
                [],
                [],
                [
                    13,
                    14
                ],
                [
                    11,
                    15
                ],
                [],
                [
                    17
                ],
                [],
                [],
                [
                    18
                ],
                [],
                [],
                [
                    19
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    18
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    10
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    18
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    18
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    15
                ],
                [
                    13,
                    18
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1816_70f728a4-7af4-45a7-a364-522d2690ddc5",
        "question_text": "Which average of cars per household was lower, Las Vegas or national?",
        "split": "train",
        "decomposition": "return average cars per household in  Las Vegas ;return the  national average of cars per household ;return which is lower of #1 ,  #2",
        "program": [
            "SELECT['average cars per household in Las Vegas']",
            "SELECT['the national average of cars per household']",
            "COMPARISON['min', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "average cars per household in Las Vegas"
            ],
            [
                "SELECT",
                "the national average of cars per household"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(average cars per household in Las Vegas)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(the national average of cars per household)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(average cars per household in Las Vegas)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(the national average of cars per household)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    5,
                    7,
                    8,
                    9,
                    10,
                    11
                ],
                [
                    2,
                    4,
                    6
                ],
                [],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "question_tokens": [
                "Which",
                "average",
                "of",
                "cars",
                "per",
                "household",
                "was",
                "lower",
                ",",
                "Las",
                "Vegas",
                "or",
                "national",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    1
                ],
                [
                    0,
                    7,
                    9
                ],
                [
                    3
                ],
                [
                    2,
                    4
                ],
                [],
                [
                    5
                ],
                [
                    6
                ],
                [
                    8
                ],
                [
                    10,
                    11
                ],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    6
                ],
                [
                    5,
                    8,
                    11
                ],
                [
                    3,
                    7,
                    9,
                    10
                ],
                [
                    1,
                    4
                ],
                [],
                [],
                [
                    12
                ],
                [],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    5
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    3
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1149_60c922c5-1b82-41d6-a24e-8a63af5d65f0",
        "question_text": "Who threw the most touchdowns in the first half?",
        "split": "train",
        "decomposition": "return touchdowns in  the  first half ;return who  threw #1 ;return the  number of  #1 for each #2 ;return #2 where #3 is the  highest",
        "program": [
            "SELECT['touchdowns in the first half']",
            "PROJECT['who threw #REF', '#1']",
            "GROUP['count', '#1', '#2']",
            "COMPARATIVE['#2', '#3', 'is the highest']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "PROJECT",
                "who threw #REF",
                [
                    "SELECT",
                    "touchdowns in the first half"
                ]
            ],
            [
                "GROUP_count",
                [
                    "SELECT",
                    "touchdowns in the first half"
                ],
                [
                    "PROJECT",
                    "who threw #REF",
                    [
                        "SELECT",
                        "touchdowns in the first half"
                    ]
                ]
            ],
            "is the highest"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(who threw #REF)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(touchdowns in the first half)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is the highest)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(who threw #REF)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(touchdowns in the first half)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is the highest)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0
                ],
                [],
                [],
                [
                    1,
                    3
                ],
                [
                    4,
                    5,
                    7
                ],
                [],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "Who",
                "threw",
                "the",
                "most",
                "touchdowns",
                "in",
                "the",
                "first",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    1,
                    3
                ],
                [],
                [
                    4
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    1
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    7
                ],
                [],
                [],
                [],
                [
                    8,
                    9
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    8
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    4
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_586_c1fdc18e-c13d-4333-8f3c-ad00e1e246a1",
        "question_text": "Which player scored the longer field goal in the game?",
        "split": "train",
        "decomposition": "return field goals in  the  game ;return the  longer of #1 ;return the  player that scored #2",
        "program": [
            "SELECT['field goals in the game']",
            "PROJECT['the longer of #REF', '#1']",
            "PROJECT['the player that scored #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "the player that scored #REF",
            [
                "PROJECT",
                "the longer of #REF",
                [
                    "SELECT",
                    "field goals in the game"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the player that scored #REF)",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(the longer of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals in the game)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the player that scored #REF)",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(the longer of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals in the game)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4,
                    5,
                    6,
                    8
                ],
                [],
                [
                    7
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "scored",
                "the",
                "longer",
                "field",
                "goal",
                "in",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    5
                ],
                [],
                [
                    7
                ],
                [
                    6
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3
                ],
                [],
                [],
                [
                    4,
                    5,
                    6,
                    8
                ],
                [],
                [],
                [],
                [
                    9,
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1247_18aa0f00-32d9-40fc-9f87-fccc943da295",
        "question_text": "How long was the second shortest touchdown run?",
        "split": "train",
        "decomposition": "return touchdown run ;return second shortest of  #1 ;return how long was #2",
        "program": [
            "SELECT['touchdown run']",
            "AGGREGATE['min', '#1']",
            "PROJECT['how long was #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "how long was #REF",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "touchdown run"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(how long was #REF)",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown run)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(how long was #REF)",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown run)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [],
                [
                    2,
                    4,
                    5,
                    6,
                    7
                ],
                [],
                [
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "long",
                "was",
                "the",
                "second",
                "shortest",
                "touchdown",
                "run",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [],
                [
                    2,
                    4,
                    5,
                    6,
                    7
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    3,
                    6
                ],
                [],
                [
                    2,
                    4
                ],
                [
                    5,
                    7
                ],
                [],
                [],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    7
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2831_045034f1-973b-4092-979a-622cae118b21",
        "question_text": "Did the Steelers score fewer points in the first quarter or the 2nd quarter?",
        "split": "train",
        "decomposition": "return points the  Steelers score in  the   first quarter ;return points the  Steelers score in  the   2nd quarter ;return the  number of  #1 ;return the  number of  #2 ;return which is fewer of #3 ,  #4",
        "program": [
            "SELECT['points the Steelers score in the first quarter']",
            "SELECT['points the Steelers score in the 2nd quarter']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['min', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "points the Steelers score in the first quarter"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "points the Steelers score in the 2nd quarter"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(points the Steelers score in the first quarter)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(points the Steelers score in the 2nd quarter)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(points the Steelers score in the first quarter)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(points the Steelers score in the 2nd quarter)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    4,
                    10
                ],
                [
                    1,
                    2,
                    3,
                    5,
                    6,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    11
                ],
                [
                    12,
                    13,
                    14
                ]
            ],
            "question_tokens": [
                "Did",
                "the",
                "Steelers",
                "score",
                "fewer",
                "points",
                "in",
                "the",
                "first",
                "quarter",
                "or",
                "the",
                "2nd",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    4
                ],
                [
                    5
                ],
                [
                    2,
                    3
                ],
                [
                    6,
                    8
                ],
                [
                    9
                ],
                [],
                [
                    10
                ],
                [
                    11,
                    12
                ],
                [
                    13
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    5
                ],
                [
                    0,
                    8,
                    10
                ],
                [
                    4
                ],
                [
                    2,
                    3,
                    6
                ],
                [],
                [
                    9
                ],
                [],
                [
                    12
                ],
                [
                    13,
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    13
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    13
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    7,
                    13
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2608_bf07ad51-1d73-4b36-85d2-9e2accb01871",
        "question_text": "How many field goals were converted from a distance over 40 yards?",
        "split": "train",
        "decomposition": "return yards that field goals converted from  ;return #1 that were over 40 yards ;return number of  #2",
        "program": [
            "SELECT['yards that field goals converted from']",
            "FILTER['#1', 'that were over 40 yards']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "yards that field goals converted from"
                ],
                "that were over 40 yards"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards that field goals converted from)"
                ],
                "GET_QUESTION_SPAN(that were over 40 yards)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_GT",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards that field goals converted from)"
                ],
                "GET_QUESTION_NUMBER(40)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    5,
                    9,
                    10
                ],
                [
                    6,
                    7
                ],
                [
                    8,
                    12
                ],
                [
                    4,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "field",
                "goals",
                "were",
                "converted",
                "from",
                "a",
                "distance",
                "over",
                "40",
                "yards",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    5,
                    9,
                    10
                ],
                [
                    8
                ],
                [
                    6
                ],
                [
                    7
                ],
                [],
                [
                    4,
                    11
                ],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    5
                ],
                [
                    9,
                    10
                ],
                [
                    7
                ],
                [],
                [
                    8,
                    12
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    11
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    11
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_241_39b1772e-28ba-44d4-be18-52f24d87bf09",
        "question_text": "what is the difference in casualty numbers between Bavarian and Austrian?",
        "split": "dev",
        "decomposition": "return Bavarian casualties ;return Austrian casualties ;return number of  #1 ;return number of  #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['Bavarian casualties']",
            "SELECT['Austrian casualties']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "Bavarian casualties"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "Austrian casualties"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Bavarian casualties)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Austrian casualties)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Bavarian casualties)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Austrian casualties)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    3,
                    7
                ],
                [
                    5
                ],
                [
                    0,
                    2,
                    4
                ],
                [
                    8
                ],
                [
                    6
                ],
                [
                    10
                ],
                [
                    9,
                    11
                ]
            ],
            "question_tokens": [
                "what",
                "is",
                "the",
                "difference",
                "in",
                "casualty",
                "numbers",
                "between",
                "Bavarian",
                "and",
                "Austrian",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    3
                ],
                [
                    1
                ],
                [],
                [],
                [],
                [
                    4,
                    6
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    7
                ],
                [],
                [],
                [
                    8
                ],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [],
                [],
                [
                    1,
                    3,
                    7
                ],
                [],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [
                    10
                ],
                [
                    8
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    10
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    10
                ],
                [
                    2,
                    3
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2831_ae5fc796-a914-48d6-9e17-3ce67305fab4",
        "question_text": "Did the Ravens score more points in the first quarter or the 2nd quarter?",
        "split": "train",
        "decomposition": "return points that the   Ravens score in  the first quarter ;return points that the   Ravens score in  the 2nd quarter ;return the   sum of  #1 ;return the   sum of  #2 ;return which is  more of  #3 , #4",
        "program": [
            "SELECT['points that the Ravens score in the first quarter']",
            "SELECT['points that the Ravens score in the 2nd quarter']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "points that the Ravens score in the first quarter"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "points that the Ravens score in the 2nd quarter"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_sum_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(points that the Ravens score in the first quarter)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(points that the Ravens score in the 2nd quarter)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(points that the Ravens score in the first quarter)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(points that the Ravens score in the 2nd quarter)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    4,
                    10
                ],
                [
                    1,
                    3,
                    5,
                    6,
                    7
                ],
                [
                    2,
                    8,
                    9
                ],
                [
                    11
                ],
                [
                    12,
                    13,
                    14
                ]
            ],
            "question_tokens": [
                "Did",
                "the",
                "Ravens",
                "score",
                "more",
                "points",
                "in",
                "the",
                "first",
                "quarter",
                "or",
                "the",
                "2nd",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    4
                ],
                [
                    5
                ],
                [
                    3
                ],
                [
                    2,
                    6,
                    8
                ],
                [
                    9
                ],
                [],
                [
                    10
                ],
                [
                    11,
                    12
                ],
                [
                    13
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    5
                ],
                [
                    0,
                    8,
                    10
                ],
                [
                    4
                ],
                [
                    2,
                    3,
                    6
                ],
                [],
                [
                    9
                ],
                [],
                [
                    12
                ],
                [
                    13,
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    13
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    13
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    7,
                    13
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1223_33374285-4969-474a-8115-6448c052aec9",
        "question_text": "Which team allowed the least points against them?",
        "split": "dev",
        "decomposition": "return teams ;return points allowed against #1 ;return sum of #2 for each #1 ;return #1 where #3 is highest",
        "program": [
            "SELECT['teams']",
            "PROJECT['points allowed against #REF', '#1']",
            "GROUP['sum', '#2', '#1']",
            "SUPERLATIVE['max', '#1', '#3']"
        ],
        "nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "teams"
            ],
            [
                "GROUP_sum",
                [
                    "PROJECT",
                    "points allowed against #REF",
                    [
                        "SELECT",
                        "teams"
                    ]
                ],
                [
                    "SELECT",
                    "teams"
                ]
            ]
        ],
        "typed_nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(teams)"
            ],
            [
                "PARTIAL_GROUP_sum",
                [
                    "PARTIAL_SELECT_NUM",
                    "GET_QUESTION_SPAN(points allowed against #REF)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(teams)"
            ],
            [
                "PARTIAL_SELECT_SINGLE_NUM",
                "GET_QUESTION_SPAN(points allowed against #REF)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "superlative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3
                ],
                [
                    6
                ],
                [
                    4,
                    5,
                    7
                ],
                [
                    8
                ]
            ],
            "question_tokens": [
                "Which",
                "team",
                "allowed",
                "the",
                "least",
                "points",
                "against",
                "them",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    4,
                    5
                ],
                [
                    6
                ],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    6
                ],
                [],
                [
                    4,
                    5
                ],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    7
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_3295_5ed80fc9-3d9b-4f4d-a4ed-b83d60485f1a",
        "question_text": "Which ethnic groups saw a decrease in 2010 from 2000?",
        "split": "train",
        "decomposition": "return ethnic groups ;return #1 that saw a decrease from  2000 to 2010",
        "program": [
            "SELECT['ethnic groups']",
            "FILTER['#1', 'that saw a decrease from 2000 to 2010']"
        ],
        "nested_expression": [
            "FILTER",
            [
                "SELECT",
                "ethnic groups"
            ],
            "that saw a decrease from 2000 to 2010"
        ],
        "typed_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(ethnic groups)"
            ],
            "GET_QUESTION_SPAN(that saw a decrease from 2000 to 2010)"
        ],
        "drop_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(ethnic groups)"
            ],
            "GET_QUESTION_SPAN(that saw a decrease from 2000 to 2010)"
        ],
        "operators": [
            "select",
            "filter"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    6
                ],
                [
                    4,
                    5,
                    8
                ],
                [
                    7
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "Which",
                "ethnic",
                "groups",
                "saw",
                "a",
                "decrease",
                "in",
                "2010",
                "from",
                "2000",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    4,
                    5
                ],
                [
                    6
                ],
                [
                    7
                ],
                [
                    8
                ],
                [
                    9,
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    3
                ],
                [
                    1,
                    2
                ],
                [
                    6
                ],
                [
                    4,
                    5,
                    8
                ],
                [
                    7
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2467_862ff89b-f0b5-431c-acdb-d76c7ba2f3b2",
        "question_text": "How many in percent from cantons population in 2002 were Bosniak and Croat?",
        "split": "train",
        "decomposition": "return percent of cantons population in  2002 that were Bosniak ;return percent of cantons population in  2002 that were Croat ;return the  sum of #1 and  #2",
        "program": [
            "SELECT['percent of cantons population in 2002 that were Bosniak']",
            "SELECT['percent of cantons population in 2002 that were Croat']",
            "ARITHMETIC['sum', '#1', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT",
                "percent of cantons population in 2002 that were Bosniak"
            ],
            [
                "SELECT",
                "percent of cantons population in 2002 that were Croat"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent of cantons population in 2002 that were Bosniak)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent of cantons population in 2002 that were Croat)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent of cantons population in 2002 that were Bosniak)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent of cantons population in 2002 that were Croat)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    3,
                    8,
                    9,
                    11
                ],
                [
                    1,
                    5
                ],
                [
                    2,
                    4,
                    7
                ],
                [
                    6
                ],
                [
                    10
                ],
                [],
                [
                    12,
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "in",
                "percent",
                "from",
                "cantons",
                "population",
                "in",
                "2002",
                "were",
                "Bosniak",
                "and",
                "Croat",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    8,
                    11
                ],
                [],
                [
                    3
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    6,
                    9
                ],
                [],
                [],
                [],
                [
                    10
                ],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3
                ],
                [
                    8,
                    9,
                    11
                ],
                [],
                [
                    5,
                    6
                ],
                [],
                [],
                [],
                [],
                [
                    10
                ],
                [],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    12
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1455_599a58fb-b86e-4186-90b1-e14acaf1b71f",
        "question_text": "How many times did Arizona score in the first half?",
        "split": "train",
        "decomposition": "return times Arizona scores in  the  first half ;return the  number of  #1",
        "program": [
            "SELECT['times Arizona scores in the first half']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "times Arizona scores in the first half"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(times Arizona scores in the first half)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(times Arizona scores)"
                ],
                "GET_QUESTION_SPAN(in the first half)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    5,
                    6,
                    8,
                    9
                ],
                [
                    7
                ],
                [
                    4
                ],
                [
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "times",
                "did",
                "Arizona",
                "score",
                "in",
                "the",
                "first",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    5,
                    9
                ],
                [],
                [],
                [
                    4,
                    6
                ],
                [],
                [
                    8
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3
                ],
                [],
                [
                    5,
                    6,
                    8,
                    9
                ],
                [],
                [
                    4
                ],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_625_fed0d12a-f09e-47c0-a1b2-2be96fd05798",
        "question_text": "What event happened first,Treaty of Brest-Litovsk or the Treaty of Batum?",
        "split": "train",
        "decomposition": "return when  was  the  Treaty  of Brest-Litovsk ;return when  was  the  Treaty  of Batum ;return which was  first of #1 ,  #2",
        "program": [
            "SELECT['when was the Treaty of Brest-Litovsk']",
            "SELECT['when was the Treaty of Batum']",
            "COMPARISON['min', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "when was the Treaty of Brest-Litovsk"
            ],
            [
                "SELECT",
                "when was the Treaty of Batum"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the Treaty of Brest-Litovsk)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the Treaty of Batum)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the Treaty of Brest-Litovsk)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the Treaty of Batum)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    10,
                    12
                ],
                [
                    6,
                    7,
                    8
                ],
                [
                    9
                ],
                [
                    11,
                    13
                ],
                [
                    14,
                    15
                ]
            ],
            "question_tokens": [
                "What",
                "event",
                "happened",
                "first",
                ",",
                "Treaty",
                "of",
                "Brest",
                "-",
                "Litovsk",
                "or",
                "the",
                "Treaty",
                "of",
                "Batum",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [],
                [
                    6,
                    8
                ],
                [
                    7,
                    9
                ],
                [],
                [
                    10,
                    11
                ],
                [
                    12,
                    13
                ],
                [
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    4,
                    10
                ],
                [
                    1,
                    2,
                    3,
                    5,
                    12
                ],
                [
                    7,
                    8
                ],
                [
                    9
                ],
                [],
                [],
                [],
                [
                    14,
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    14
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    5,
                    14
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    14
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_500_51f50df0-0a74-4dfe-ad07-da5a20baf829",
        "question_text": "What important partner is larger: Poland or China?",
        "split": "train",
        "decomposition": "return how large is Poland ;return how large is China ;return which is larger of #1 ,  #2",
        "program": [
            "SELECT['how large is Poland']",
            "SELECT['how large is China']",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "how large is Poland"
            ],
            [
                "SELECT",
                "how large is China"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(how large is Poland)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(how large is China)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(how large is Poland)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(how large is China)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    3,
                    4,
                    5,
                    7
                ],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    6
                ],
                [
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "What",
                "important",
                "partner",
                "is",
                "larger",
                ":",
                "Poland",
                "or",
                "China",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    3,
                    4
                ],
                [
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [
                    5,
                    6
                ],
                [
                    7
                ],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    5,
                    7
                ],
                [
                    3,
                    4
                ],
                [],
                [
                    2,
                    6
                ],
                [],
                [],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_212_703b8a0f-92cf-442c-9904-812b5d011884",
        "question_text": "How many field goals longer than 40 yards did Rian Lindell kick?",
        "split": "train",
        "decomposition": "return yards of field goals of  Rian Lindell ;return #1 that are longer than 40 yards ;return the  number of  #2",
        "program": [
            "SELECT['yards of field goals of Rian Lindell']",
            "FILTER['#1', 'that are longer than 40 yards']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "yards of field goals of Rian Lindell"
                ],
                "that are longer than 40 yards"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals of Rian Lindell)"
                ],
                "GET_QUESTION_SPAN(that are longer than 40 yards)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_GT",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals of Rian Lindell)"
                ],
                "GET_QUESTION_NUMBER(40)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    8
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [
                    9
                ],
                [
                    12
                ],
                [
                    7,
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "field",
                "goals",
                "longer",
                "than",
                "40",
                "yards",
                "did",
                "Rian",
                "Lindell",
                "kick",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [
                    8
                ],
                [],
                [
                    9
                ],
                [
                    7,
                    11
                ],
                [
                    10
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    8
                ],
                [
                    2,
                    3
                ],
                [
                    4,
                    5,
                    6
                ],
                [],
                [
                    9,
                    10
                ],
                [
                    12
                ],
                [
                    7,
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    7
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1092_780fb70a-e971-4263-8765-04d91f908399",
        "question_text": "How many is the difference in the number of yards of the TD run by Rhodes and the number of yards of the TD pass to Harriosn?",
        "split": "train",
        "decomposition": "return yards  of   the  TD  run by Rhodes ;return yards  of   the  TD  pass to Harriosn ;return the  difference of   #1 and  #2",
        "program": [
            "SELECT['yards of the TD run by Rhodes']",
            "SELECT['yards of the TD pass to Harriosn']",
            "ARITHMETIC['difference', '#1', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "yards of the TD run by Rhodes"
            ],
            [
                "SELECT",
                "yards of the TD pass to Harriosn"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of the TD run by Rhodes)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of the TD pass to Harriosn)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of the TD run by Rhodes)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of the TD pass to Harriosn)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4,
                    9,
                    20
                ],
                [
                    7
                ],
                [
                    3,
                    5,
                    6,
                    8,
                    10,
                    11
                ],
                [
                    12,
                    13,
                    14
                ],
                [
                    15,
                    16,
                    18,
                    24,
                    25
                ],
                [
                    17,
                    19,
                    21,
                    22
                ],
                [
                    23,
                    26,
                    27
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "is",
                "the",
                "difference",
                "in",
                "the",
                "number",
                "of",
                "yards",
                "of",
                "the",
                "TD",
                "run",
                "by",
                "Rhodes",
                "and",
                "the",
                "number",
                "of",
                "yards",
                "of",
                "the",
                "TD",
                "pass",
                "to",
                "Harriosn",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    2
                ],
                [
                    0,
                    1,
                    4
                ],
                [],
                [
                    7,
                    9
                ],
                [],
                [],
                [
                    14
                ],
                [
                    13
                ],
                [
                    15
                ],
                [],
                [
                    16,
                    18,
                    20
                ],
                [],
                [],
                [],
                [
                    24
                ],
                [
                    26
                ],
                [
                    27
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    4,
                    9,
                    20
                ],
                [
                    12
                ],
                [
                    7,
                    13
                ],
                [],
                [
                    14,
                    15
                ],
                [],
                [
                    23
                ],
                [
                    16,
                    18,
                    24,
                    25
                ],
                [],
                [],
                [
                    26,
                    27
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    26
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    26
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    26
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    15
                ],
                [
                    6,
                    26
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    15
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    11,
                    15
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    15
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    18
                ],
                [
                    17,
                    26
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    19,
                    20
                ],
                [
                    20,
                    20
                ],
                [
                    21,
                    21
                ],
                [
                    21,
                    24
                ],
                [
                    22,
                    24
                ],
                [
                    22,
                    22
                ],
                [
                    23,
                    23
                ],
                [
                    24,
                    24
                ],
                [
                    25,
                    26
                ],
                [
                    25,
                    25
                ],
                [
                    26,
                    26
                ],
                [
                    27,
                    27
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_342_ad0fbb6f-ba96-47df-be06-abfe0ae307ea",
        "question_text": "What was the maximum year for him writing a monthly article in the Beo.ie?",
        "split": "train",
        "decomposition": "return the  years for him writing a monthly article in  the Beo.ie ;return maximum of #1",
        "program": [
            "SELECT['the years for him writing a monthly article in the Beo.ie']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "the years for him writing a monthly article in the Beo.ie"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the years for him writing a monthly article in the Beo.ie)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the years for him writing a monthly article in the Beo.ie)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    3,
                    7
                ],
                [
                    0,
                    2,
                    4,
                    5,
                    8,
                    9,
                    10,
                    11,
                    12
                ],
                [
                    6,
                    13,
                    14
                ]
            ],
            "question_tokens": [
                "What",
                "was",
                "the",
                "maximum",
                "year",
                "for",
                "him",
                "writing",
                "a",
                "monthly",
                "article",
                "in",
                "the",
                "Beo.ie",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    3
                ],
                [
                    4,
                    10
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    11,
                    12
                ],
                [
                    7,
                    9
                ],
                [
                    13,
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    4
                ],
                [
                    1,
                    3
                ],
                [
                    7,
                    9,
                    10
                ],
                [
                    2,
                    8,
                    11,
                    12
                ],
                [
                    5,
                    6
                ],
                [
                    13,
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    1,
                    13
                ],
                [
                    2,
                    13
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    13
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    13
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    13
                ],
                [
                    8,
                    13
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2749_29788094-9a5a-4f6a-b4d9-16aa479c2f82",
        "question_text": "How many field goal kicks were 40 yards or longer?",
        "split": "train",
        "decomposition": "return field goal kicks ;return yards of #1 ;return #1 where #2 is at least 40 ;return number of  #3",
        "program": [
            "SELECT['field goal kicks']",
            "PROJECT['yards of #REF', '#1']",
            "COMPARATIVE['#1', '#2', 'is at least 40']",
            "AGGREGATE['count', '#3']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "field goal kicks"
                ],
                [
                    "PROJECT",
                    "yards of #REF",
                    [
                        "SELECT",
                        "field goal kicks"
                    ]
                ],
                "is at least 40"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goal kicks)"
                ],
                [
                    "PARTIAL_GROUP_sum",
                    [
                        "PARTIAL_SELECT_NUM",
                        "GET_QUESTION_SPAN(yards of #REF)"
                    ]
                ],
                [
                    "CONDITION",
                    "GET_QUESTION_SPAN(is at least 40)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_GT_EQ",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goal kicks)"
                ],
                "GET_QUESTION_NUMBER(40)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "comparative",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    9
                ],
                [
                    2,
                    4,
                    6
                ],
                [],
                [
                    3,
                    8,
                    10
                ],
                [
                    5,
                    7
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "field",
                "goal",
                "kicks",
                "were",
                "40",
                "yards",
                "or",
                "longer",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    6
                ],
                [
                    4
                ],
                [],
                [
                    8
                ],
                [],
                [
                    5,
                    7
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3
                ],
                [
                    4
                ],
                [
                    2,
                    5,
                    9
                ],
                [
                    6,
                    8
                ],
                [],
                [],
                [
                    10
                ],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_3822_38352ed5-c55a-4efa-90a4-6ec354cf9050",
        "question_text": "How many of Millicent's parents and grandparents died during the month of May?",
        "split": "train",
        "decomposition": "return Millicent 's parents that died during the  month of May ;return Millicent 's grandparents that died during the  month of May ;return number of  #1 ;return number of  #2 ;return sum of #3 and  #4",
        "program": [
            "SELECT[\"Millicent 's parents that died during the month of May\"]",
            "SELECT[\"Millicent 's grandparents that died during the month of May\"]",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['sum', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "Millicent 's parents that died during the month of May"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "Millicent 's grandparents that died during the month of May"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Millicent 's parents that died during the month of May)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Millicent 's grandparents that died during the month of May)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Millicent 's parents that died during the month of May)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Millicent 's grandparents that died during the month of May)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    3,
                    6
                ],
                [
                    1,
                    4,
                    5
                ],
                [
                    2
                ],
                [
                    7,
                    8
                ],
                [
                    13
                ],
                [
                    9,
                    10,
                    11,
                    12
                ],
                [
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "of",
                "Millicent",
                "'s",
                "parents",
                "and",
                "grandparents",
                "died",
                "during",
                "the",
                "month",
                "of",
                "May",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    6
                ],
                [],
                [
                    4
                ],
                [
                    3,
                    5
                ],
                [],
                [],
                [],
                [
                    7
                ],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    9
                ],
                [],
                [
                    13
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3,
                    6
                ],
                [],
                [
                    4,
                    5
                ],
                [],
                [],
                [
                    7
                ],
                [],
                [],
                [
                    11
                ],
                [
                    13
                ],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    7
                ],
                [
                    3,
                    7
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    13
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    13
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2374_dcc0d948-4ced-4e67-8ba1-291f5227f59a",
        "question_text": "How many of the 320,640 whites that called the Bronx home were Hispanic?",
        "split": "train",
        "decomposition": "return the  320,640 whites that called the Bronx home ;return which of #1 were Hispanic ;return number of  #2",
        "program": [
            "SELECT['the 320 , 640 whites that called the Bronx home']",
            "PROJECT['which of #REF were Hispanic', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "which of #REF were Hispanic",
                [
                    "SELECT",
                    "the 320 , 640 whites that called the Bronx home"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(which of #REF were Hispanic)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the 320 , 640 whites that called the Bronx home)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(which of #REF were Hispanic)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the 320 , 640 whites that called the Bronx home)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    5,
                    11,
                    12
                ],
                [
                    3,
                    4,
                    6,
                    8
                ],
                [
                    7,
                    9,
                    10
                ],
                [
                    2
                ],
                [
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "of",
                "the",
                "320,640",
                "whites",
                "that",
                "called",
                "the",
                "Bronx",
                "home",
                "were",
                "Hispanic",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    5
                ],
                [],
                [
                    4,
                    6
                ],
                [
                    7
                ],
                [
                    9
                ],
                [
                    8
                ],
                [],
                [
                    10
                ],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    11
                ],
                [
                    5,
                    12
                ],
                [
                    4
                ],
                [
                    2,
                    3,
                    6,
                    8
                ],
                [],
                [
                    9
                ],
                [
                    7,
                    10
                ],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    10
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_346_60e0d6a5-11aa-43d1-ac80-5939a815ab29",
        "question_text": "How many soldiers did Martin Schenck have control of in Westphalia?",
        "split": "train",
        "decomposition": "return soldiers that Martin Schenck has control of in  Westphalia ;return the  number of  #1",
        "program": [
            "SELECT['soldiers that Martin Schenck has control of in Westphalia']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "soldiers that Martin Schenck has control of in Westphalia"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(soldiers that Martin Schenck has control of in Westphalia)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "SELECT",
                "GET_QUESTION_SPAN(soldiers that Martin Schenck has control of in Westphalia)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    5
                ],
                [
                    3,
                    4,
                    6,
                    7,
                    8,
                    9
                ],
                [
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "soldiers",
                "did",
                "Martin",
                "Schenck",
                "have",
                "control",
                "of",
                "in",
                "Westphalia",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    6,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3,
                    6
                ],
                [
                    2,
                    5
                ],
                [
                    4,
                    7,
                    8,
                    9
                ],
                [],
                [
                    10,
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_807_c408e5d3-d22e-4deb-8054-1fdda47dd37a",
        "question_text": "How many years was Zhu Yunwen a crown prince?",
        "split": "train",
        "decomposition": "return years that Zhu Yunwen was  a crown prince ;return number of  #1",
        "program": [
            "SELECT['years that Zhu Yunwen was a crown prince']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "years that Zhu Yunwen was a crown prince"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years that Zhu Yunwen was a crown prince)"
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Single_Event",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years that Zhu Yunwen was a crown prince)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4
                ],
                [
                    5,
                    6,
                    7
                ],
                [
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "was",
                "Zhu",
                "Yunwen",
                "a",
                "crown",
                "prince",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3
                ],
                [
                    4
                ],
                [
                    6
                ],
                [
                    5,
                    7,
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    6
                ],
                [
                    7,
                    8
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1442_ac4cd58e-31ae-4211-af18-e51b43137c71",
        "question_text": "Did a smaller number of prisoners die from bad camp conditions or from attempted escapes?",
        "split": "train",
        "decomposition": "return prisoners that die from bad camp conditions ;return number of  #1 ;return prisoners that die from attempted escapes ;return number of  #3 ;return which was lowest of  #2 , #4",
        "program": [
            "SELECT['prisoners that die from bad camp conditions']",
            "AGGREGATE['count', '#1']",
            "SELECT['prisoners that die from attempted escapes']",
            "AGGREGATE['count', '#3']",
            "COMPARISON['min', '#2', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "prisoners that die from bad camp conditions"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "prisoners that die from attempted escapes"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(prisoners that die from bad camp conditions)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(prisoners that die from attempted escapes)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(prisoners that die from bad camp conditions)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(prisoners that die from attempted escapes)"
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "select",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    7,
                    11,
                    12
                ],
                [
                    1,
                    4,
                    5
                ],
                [
                    3,
                    6,
                    8
                ],
                [
                    9,
                    10,
                    13
                ],
                [
                    14,
                    15
                ]
            ],
            "question_tokens": [
                "Did",
                "a",
                "smaller",
                "number",
                "of",
                "prisoners",
                "die",
                "from",
                "bad",
                "camp",
                "conditions",
                "or",
                "from",
                "attempted",
                "escapes",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    2,
                    7,
                    12
                ],
                [
                    3
                ],
                [
                    1,
                    4,
                    5
                ],
                [],
                [
                    6,
                    8
                ],
                [
                    10,
                    13
                ],
                [
                    9,
                    11
                ],
                [],
                [
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    10
                ],
                [
                    0,
                    1,
                    11
                ],
                [
                    2,
                    7,
                    12
                ],
                [
                    3,
                    5
                ],
                [
                    6,
                    8
                ],
                [],
                [
                    9,
                    13
                ],
                [],
                [
                    14,
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    3
                ],
                [
                    1,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    14
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_784_bcb78a8e-8966-427c-9774-c25de779797d",
        "question_text": "What event happened first, new forts being built, or measures being taken to undermine the traditional clan system?",
        "split": "train",
        "decomposition": "return when  was new forts being  built ;return when  was measures being  taken to undermine the traditional clan system ;return which was first of  #1 , #2",
        "program": [
            "SELECT['when was new forts being built']",
            "SELECT['when was measures being taken to undermine the traditional clan system']",
            "COMPARISON['min', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "when was new forts being built"
            ],
            [
                "SELECT",
                "when was measures being taken to undermine the traditional clan system"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was new forts being built)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was measures being taken to undermine the traditional clan system)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was new forts being built)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was measures being taken to undermine the traditional clan system)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    7,
                    9,
                    10,
                    12
                ],
                [
                    5,
                    6,
                    8
                ],
                [
                    11
                ],
                [
                    13,
                    14,
                    15,
                    16,
                    19
                ],
                [
                    17,
                    18,
                    20
                ]
            ],
            "question_tokens": [
                "What",
                "event",
                "happened",
                "first",
                ",",
                "new",
                "forts",
                "being",
                "built",
                ",",
                "or",
                "measures",
                "being",
                "taken",
                "to",
                "undermine",
                "the",
                "traditional",
                "clan",
                "system",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    7,
                    9,
                    12
                ],
                [],
                [
                    5,
                    6
                ],
                [
                    8,
                    10
                ],
                [],
                [
                    11
                ],
                [
                    13,
                    14
                ],
                [
                    16
                ],
                [
                    15,
                    17,
                    18,
                    19
                ],
                [
                    20
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    4,
                    6,
                    9,
                    10
                ],
                [
                    1,
                    2,
                    3,
                    7,
                    12
                ],
                [
                    5,
                    8
                ],
                [
                    11
                ],
                [],
                [
                    13,
                    14,
                    15
                ],
                [
                    17,
                    18
                ],
                [
                    19,
                    20
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    3
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    19
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    19
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    19
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    19
                ],
                [
                    15,
                    19
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    19
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    20,
                    20
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_365_4dda14f6-60f3-4d26-8b0d-fff5a09bded0",
        "question_text": "Which team had the ball less than 20 minutes?",
        "split": "train",
        "decomposition": "return teams ;return minutes #1 had the  ball ;return sum of #2 for each #1 ;return #1 where #3 is lower than 20",
        "program": [
            "SELECT['teams']",
            "PROJECT['minutes #REF had the ball', '#1']",
            "GROUP['sum', '#2', '#1']",
            "COMPARATIVE['#1', '#3', 'is lower than 20']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "teams"
            ],
            [
                "GROUP_sum",
                [
                    "PROJECT",
                    "minutes #REF had the ball",
                    [
                        "SELECT",
                        "teams"
                    ]
                ],
                [
                    "SELECT",
                    "teams"
                ]
            ],
            "is lower than 20"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(teams)"
            ],
            [
                "PARTIAL_GROUP_sum",
                [
                    "PARTIAL_SELECT_NUM",
                    "GET_QUESTION_SPAN(minutes #REF had the ball)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is lower than 20)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(teams)"
            ],
            [
                "PARTIAL_SELECT_SINGLE_NUM",
                "GET_QUESTION_SPAN(minutes #REF had the ball)"
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is lower than 20)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3
                ],
                [
                    4
                ],
                [
                    5
                ],
                [],
                [
                    6,
                    7,
                    8
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "Which",
                "team",
                "had",
                "the",
                "ball",
                "less",
                "than",
                "20",
                "minutes",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    2,
                    5
                ],
                [
                    4
                ],
                [],
                [],
                [
                    6,
                    7
                ],
                [],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [],
                [
                    4
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [
                    6,
                    7
                ],
                [
                    8,
                    9
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_604_6abd5b7a-0a9a-4903-b027-32680c8a659b",
        "question_text": "What happened first: British government gave land or Gist explored the Ohio territory?",
        "split": "train",
        "decomposition": "return when  did the  British government give land ;return when  did Gist explored the  Ohio territory ;return which is first of #1 ,  #2",
        "program": [
            "SELECT['when did the British government give land']",
            "SELECT['when did Gist explored the Ohio territory']",
            "COMPARISON['min', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "when did the British government give land"
            ],
            [
                "SELECT",
                "when did Gist explored the Ohio territory"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did the British government give land)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did Gist explored the Ohio territory)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did the British government give land)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did Gist explored the Ohio territory)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    6,
                    8
                ],
                [
                    4,
                    7
                ],
                [
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    12,
                    13,
                    14
                ]
            ],
            "question_tokens": [
                "What",
                "happened",
                "first",
                ":",
                "British",
                "government",
                "gave",
                "land",
                "or",
                "Gist",
                "explored",
                "the",
                "Ohio",
                "territory",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    4,
                    5,
                    6
                ],
                [
                    7
                ],
                [
                    9
                ],
                [],
                [
                    8,
                    10
                ],
                [
                    11,
                    12
                ],
                [
                    13
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    3,
                    8
                ],
                [
                    1,
                    2,
                    5,
                    6
                ],
                [],
                [
                    4,
                    7
                ],
                [
                    9
                ],
                [
                    10
                ],
                [],
                [
                    12,
                    13,
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    13
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    13
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2084_10b2eb54-21d5-4d9a-9c7d-da273df56429",
        "question_text": "Did Marino have more touchdowns or interceptions?",
        "split": "train",
        "decomposition": "return touchdowns of  Marino ;return interceptions of  Marino ;return the number of  #1 ;return the number of  #2 ;return which is  more of  #3 , #4",
        "program": [
            "SELECT['touchdowns of Marino']",
            "SELECT['interceptions of Marino']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdowns of Marino"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "interceptions of Marino"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdowns of Marino)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(interceptions of Marino)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdowns of Marino)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(interceptions of Marino)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    5,
                    6
                ],
                [
                    2
                ],
                [
                    4
                ],
                [],
                [
                    7
                ]
            ],
            "question_tokens": [
                "Did",
                "Marino",
                "have",
                "more",
                "touchdowns",
                "or",
                "interceptions",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [
                    4
                ],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0,
                    5
                ],
                [
                    1,
                    3,
                    4,
                    6
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_758_978fa30e-1755-4200-b3c8-98bcd33cfce2",
        "question_text": "How many touchdown runs of less than 10 yards were there?",
        "split": "train",
        "decomposition": "return touchdown runs ;return yards of #1 ;return #1 where #2 is less than 10 yards ;return the  number of  #3",
        "program": [
            "SELECT['touchdown runs']",
            "PROJECT['yards of #REF', '#1']",
            "COMPARATIVE['#1', '#2', 'is less than 10 yards']",
            "AGGREGATE['count', '#3']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "touchdown runs"
                ],
                [
                    "PROJECT",
                    "yards of #REF",
                    [
                        "SELECT",
                        "touchdown runs"
                    ]
                ],
                "is less than 10 yards"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown runs)"
                ],
                [
                    "PARTIAL_GROUP_sum",
                    [
                        "PARTIAL_SELECT_NUM",
                        "GET_QUESTION_SPAN(yards of #REF)"
                    ]
                ],
                [
                    "CONDITION",
                    "GET_QUESTION_SPAN(is less than 10 yards)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_LT",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown runs)"
                ],
                "GET_QUESTION_NUMBER(10)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "comparative",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    10
                ],
                [
                    3,
                    5,
                    6,
                    7,
                    9
                ],
                [
                    4
                ],
                [
                    2,
                    11
                ],
                [
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "touchdown",
                "runs",
                "of",
                "less",
                "than",
                "10",
                "yards",
                "were",
                "there",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [],
                [
                    5,
                    6
                ],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    7,
                    8,
                    9
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    10
                ],
                [
                    3
                ],
                [
                    2
                ],
                [
                    5,
                    6,
                    7,
                    9
                ],
                [],
                [],
                [
                    11
                ],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    0,
                    8
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2731_3b6d08ad-09fb-4abf-a4f2-80c6c37570d8",
        "question_text": "How long was the shortest touchdown pass?",
        "split": "train",
        "decomposition": "return touchdown passes ;return shortest of  #1 ;return how long was #2",
        "program": [
            "SELECT['touchdown passes']",
            "AGGREGATE['min', '#1']",
            "PROJECT['how long was #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "how long was #REF",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "touchdown passes"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(how long was #REF)",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(how long was #REF)",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [],
                [
                    2,
                    4,
                    5,
                    6
                ],
                [],
                [
                    7
                ]
            ],
            "question_tokens": [
                "How",
                "long",
                "was",
                "the",
                "shortest",
                "touchdown",
                "pass",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [],
                [
                    2,
                    4,
                    5,
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    3,
                    5
                ],
                [],
                [
                    2
                ],
                [
                    4,
                    6
                ],
                [],
                [],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_753_93351fb9-aa38-4453-9fd5-84334aab8631",
        "question_text": "How many years passed before Ferdinand and Innocent reconciled?",
        "split": "train",
        "decomposition": "return years when  Ferdinand and  Innocent did not  reconcile ;return the  year when  Ferdinand and  Innocent reconciled ;return the  lowest of #1 ;return the  difference of #2 and  #3",
        "program": [
            "SELECT['years when Ferdinand and Innocent did not reconcile']",
            "SELECT['the year when Ferdinand and Innocent reconciled']",
            "AGGREGATE['min', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "the year when Ferdinand and Innocent reconciled"
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "years when Ferdinand and Innocent did not reconcile"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the year when Ferdinand and Innocent reconciled)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(years when Ferdinand and Innocent did not reconcile)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Two_Events",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the year when Ferdinand and Innocent reconciled)"
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(years when Ferdinand and Innocent did not reconcile)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                ],
                [],
                [],
                [
                    8
                ],
                [],
                [
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "passed",
                "before",
                "Ferdinand",
                "and",
                "Innocent",
                "reconciled",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    4
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    5,
                    7
                ],
                [],
                [],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4
                ],
                [
                    5,
                    6,
                    7
                ],
                [],
                [],
                [],
                [],
                [
                    8
                ],
                [],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2565_752ccb9f-bb44-498a-90cb-61051eea869c",
        "question_text": "How many total yards did the two longest touchdowns combine for?",
        "split": "train",
        "decomposition": "return yards of touchdowns ;return two longest of #1 ;return sum of #2",
        "program": [
            "SELECT['yards of touchdowns']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['sum', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of touchdowns"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdowns)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdowns)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    8,
                    9
                ],
                [
                    6,
                    7
                ],
                [
                    5,
                    10
                ],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "total",
                "yards",
                "did",
                "the",
                "two",
                "longest",
                "touchdowns",
                "combine",
                "for",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    4,
                    8
                ],
                [],
                [
                    6,
                    7
                ],
                [],
                [],
                [
                    10
                ],
                [
                    9
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    8,
                    9
                ],
                [],
                [
                    6,
                    7
                ],
                [],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_87_5b942259-9b57-4a77-95ee-f82bbd018fd7",
        "question_text": "Which did speedtest.net use last, Adobe Flash or HTML5?",
        "split": "train",
        "decomposition": "return when  speedtest.net use Adobe Flash ;return when  speedtest.net use HTML5 ;return which is  the highest of  #1 , #2",
        "program": [
            "SELECT['when speedtest.net use Adobe Flash']",
            "SELECT['when speedtest.net use HTML5']",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "when speedtest.net use Adobe Flash"
            ],
            [
                "SELECT",
                "when speedtest.net use HTML5"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when speedtest.net use Adobe Flash)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when speedtest.net use HTML5)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when speedtest.net use Adobe Flash)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when speedtest.net use HTML5)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    4,
                    5,
                    8
                ],
                [
                    1,
                    3
                ],
                [
                    6,
                    7
                ],
                [],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "Which",
                "did",
                "speedtest.net",
                "use",
                "last",
                ",",
                "Adobe",
                "Flash",
                "or",
                "HTML5",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    2,
                    4,
                    5
                ],
                [
                    1
                ],
                [
                    3
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    8
                ],
                [
                    7,
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    5,
                    8
                ],
                [
                    2,
                    4
                ],
                [
                    3
                ],
                [
                    6
                ],
                [],
                [],
                [
                    7,
                    9
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    9
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2725_f6fdd594-c3d2-4f0f-a501-30a3005569d2",
        "question_text": "How many field goals of less than 30 yards did Hauschka kick?",
        "split": "train",
        "decomposition": "return yards of field goals that Hauschka kick ;return #1 that was  less that  30 yards ;return number of  #2",
        "program": [
            "SELECT['yards of field goals that Hauschka kick']",
            "FILTER['#1', 'that was less that 30 yards']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "yards of field goals that Hauschka kick"
                ],
                "that was less that 30 yards"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals that Hauschka kick)"
                ],
                "GET_QUESTION_SPAN(that was less that 30 yards)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals that Hauschka kick)"
                ],
                "GET_QUESTION_SPAN(that was less that 30 yards)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    9
                ],
                [
                    5,
                    6,
                    7,
                    8,
                    10,
                    11
                ],
                [
                    4
                ],
                [],
                [
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "field",
                "goals",
                "of",
                "less",
                "than",
                "30",
                "yards",
                "did",
                "Hauschka",
                "kick",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    5,
                    11
                ],
                [
                    8
                ],
                [
                    9
                ],
                [
                    7
                ],
                [],
                [],
                [
                    10
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    6,
                    8
                ],
                [
                    3,
                    7,
                    9
                ],
                [
                    2,
                    5,
                    10
                ],
                [
                    11
                ],
                [],
                [],
                [],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    0,
                    8
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_302_f073cdd8-08f4-47e9-abba-0a68655ba125",
        "question_text": "Who scored first in the first quarter?",
        "split": "train",
        "decomposition": "return who  scored first in  the  first  quarter",
        "program": [
            "SELECT['who scored first in the first quarter']"
        ],
        "nested_expression": [
            "SELECT",
            "who scored first in the first quarter"
        ],
        "typed_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(who scored first in the first quarter)"
        ],
        "drop_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(who scored first)"
            ],
            "GET_QUESTION_SPAN(in the first quarter)"
        ],
        "operators": [
            "select"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    2,
                    3,
                    5,
                    6
                ],
                [
                    0,
                    4
                ],
                [],
                [
                    7
                ]
            ],
            "question_tokens": [
                "Who",
                "scored",
                "first",
                "in",
                "the",
                "first",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    6
                ],
                [],
                [],
                [
                    3,
                    4,
                    5
                ],
                [],
                [],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [],
                [],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1622_22814fde-2e89-4cea-930d-e6886f21d157",
        "question_text": "How many 41-yard field goals did Sebastian Janikowski kick?",
        "split": "train",
        "decomposition": "return field goals that Sebastian Janikowski kick ;return #1 that are  41-yard ;return number of  #2",
        "program": [
            "SELECT['field goals that Sebastian Janikowski kick']",
            "FILTER['#1', 'that are 41-yard']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "field goals that Sebastian Janikowski kick"
                ],
                "that are 41-yard"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that Sebastian Janikowski kick)"
                ],
                "GET_QUESTION_SPAN(that are 41-yard)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_EQ",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that Sebastian Janikowski kick)"
                ],
                "GET_QUESTION_NUMBER(41)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    5
                ],
                [
                    2,
                    3,
                    4
                ],
                [
                    6
                ],
                [
                    9
                ],
                [
                    7,
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "41-yard",
                "field",
                "goals",
                "did",
                "Sebastian",
                "Janikowski",
                "kick",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4
                ],
                [],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [
                    7,
                    8
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    6
                ],
                [
                    5,
                    7
                ],
                [
                    3
                ],
                [
                    2,
                    4
                ],
                [],
                [],
                [
                    9
                ],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1316_20e698e1-9c93-4524-a5fd-08c7cc9b51a8",
        "question_text": "How many years did the Russo-Swedish war go on?",
        "split": "dev",
        "decomposition": "return years that the  Russo-Swedish war did go on ;return number of  #1",
        "program": [
            "SELECT['years that the Russo-Swedish war did go on']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "years that the Russo-Swedish war did go on"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years that the Russo-Swedish war did go on)"
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Single_Event",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years that the Russo-Swedish war did go on)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    4,
                    5,
                    6,
                    7,
                    9,
                    10
                ],
                [
                    8,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "did",
                "the",
                "Russo",
                "-",
                "Swedish",
                "war",
                "go",
                "on",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3
                ],
                [],
                [
                    4,
                    5,
                    6,
                    7
                ],
                [
                    8,
                    9,
                    10
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3
                ],
                [
                    5,
                    6
                ],
                [
                    4,
                    7,
                    9,
                    10
                ],
                [
                    8
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3436_5c7a0f22-1ac3-4bfe-9ba5-eab1c04f6eb8",
        "question_text": "How many yards was Green's shortest touchdown catch?",
        "split": "train",
        "decomposition": "return yards of touchdown catches of  Green ;return the  shortest of #1",
        "program": [
            "SELECT['yards of touchdown catches of Green']",
            "AGGREGATE['min', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "yards of touchdown catches of Green"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdown catches of Green)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdown catches of Green)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                ],
                [],
                [
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "Green",
                "'s",
                "shortest",
                "touchdown",
                "catch",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    5,
                    6,
                    7
                ],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    8
                ],
                [],
                [
                    2,
                    3,
                    5,
                    7
                ],
                [
                    6
                ],
                [
                    4
                ],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_405_8254901e-b3c5-413a-ab11-a78a2d7774a4",
        "question_text": "How many points did the Titans score in the first half?",
        "split": "train",
        "decomposition": "return first half points of the  Titans ;return sum of #1",
        "program": [
            "SELECT['first half points of the Titans']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "first half points of the Titans"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(first half points of the Titans)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "SELECT",
                "GET_QUESTION_SPAN(first half points of the Titans)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4,
                    5,
                    6,
                    7,
                    8
                ],
                [
                    9,
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "points",
                "did",
                "the",
                "Titans",
                "score",
                "in",
                "the",
                "first",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    3
                ],
                [
                    4,
                    5,
                    6
                ],
                [
                    7,
                    8,
                    9
                ],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3
                ],
                [],
                [
                    4,
                    5,
                    6,
                    7,
                    8
                ],
                [],
                [
                    9,
                    10,
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1732_71311266-919b-4ade-8743-468db2fc8a75",
        "question_text": "what did billy cundiff's 26 and 39-yard field goals get them?",
        "split": "train",
        "decomposition": "return what  did billy cundiff 's 26 and  39-yard field goals get them",
        "program": [
            "SELECT[\"what did billy cundiff 's 26 and 39-yard field goals get them\"]"
        ],
        "nested_expression": [
            "SELECT",
            "what did billy cundiff 's 26 and 39-yard field goals get them"
        ],
        "typed_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(what did billy cundiff 's 26 and 39-yard field goals get them)"
        ],
        "drop_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(what did billy cundiff 's 26 and 39-yard field goals get them)"
        ],
        "operators": [
            "select"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    7,
                    10
                ],
                [
                    6,
                    8,
                    9,
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "what",
                "did",
                "billy",
                "cundiff",
                "'s",
                "26",
                "and",
                "39-yard",
                "field",
                "goals",
                "get",
                "them",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    4,
                    6,
                    7
                ],
                [
                    5,
                    8,
                    9,
                    10
                ],
                [
                    11,
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4,
                    5,
                    7,
                    8,
                    9
                ],
                [
                    6,
                    10
                ],
                [
                    11,
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    11
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2548_b5b87a2c-edea-4b0a-8d28-530dcf0c9a9b",
        "question_text": "How many total yards of field goals did Walsh kick?",
        "split": "train",
        "decomposition": "return yards of field goals of  Walsh ;return the  sum of #1",
        "program": [
            "SELECT['yards of field goals of Walsh']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "yards of field goals of Walsh"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals of Walsh)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals of Walsh)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    6,
                    7,
                    8,
                    9
                ],
                [
                    4
                ],
                [
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "total",
                "yards",
                "of",
                "field",
                "goals",
                "did",
                "Walsh",
                "kick",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    5,
                    6
                ],
                [],
                [
                    4,
                    7
                ],
                [],
                [
                    8,
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    5
                ],
                [
                    2,
                    3,
                    6,
                    7,
                    8,
                    9
                ],
                [
                    4
                ],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1504_85a4092c-397b-43f7-ae2c-5f04806b403a",
        "question_text": "How many knights and supporters all together were there?",
        "split": "train",
        "decomposition": "return knights ;return supporters ;return number of  #1 ;return number of  #2 ;return sum of #3 and  #4",
        "program": [
            "SELECT['knights']",
            "SELECT['supporters']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['sum', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "knights"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "supporters"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(knights)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(supporters)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(knights)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(supporters)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    3,
                    7
                ],
                [
                    1,
                    2,
                    4
                ],
                [
                    5
                ],
                [],
                [
                    6,
                    8
                ],
                [],
                [
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "knights",
                "and",
                "supporters",
                "all",
                "together",
                "were",
                "there",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    2
                ],
                [
                    6
                ],
                [
                    4,
                    5
                ],
                [
                    7,
                    8
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3,
                    7
                ],
                [],
                [
                    2
                ],
                [
                    4
                ],
                [],
                [],
                [
                    5
                ],
                [
                    6,
                    8
                ],
                [],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1683_10039d5d-e723-4830-b2d7-c0d74147c1d3",
        "question_text": "How many years did conscription last?",
        "split": "train",
        "decomposition": "return years that the  conscription did last ;return number of  #1",
        "program": [
            "SELECT['years that the conscription did last']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "years that the conscription did last"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years that the conscription did last)"
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Single_Event",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years that the conscription did last)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5
                ],
                [
                    4
                ],
                [
                    6
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "did",
                "conscription",
                "last",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [
                    4,
                    5
                ],
                [
                    6
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    5
                ],
                [
                    4
                ],
                [],
                [
                    6
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1262_78202813-efcb-4714-a80a-650f2087bfa2",
        "question_text": "Which player scored the most points in the first quarter?",
        "split": "train",
        "decomposition": "return players ;return first quarter points of #1 ;return sum of #2 for each #1 ;return #1 where #3 is highest",
        "program": [
            "SELECT['players']",
            "PROJECT['first quarter points of #REF', '#1']",
            "GROUP['sum', '#2', '#1']",
            "SUPERLATIVE['max', '#1', '#3']"
        ],
        "nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "players"
            ],
            [
                "GROUP_sum",
                [
                    "PROJECT",
                    "first quarter points of #REF",
                    [
                        "SELECT",
                        "players"
                    ]
                ],
                [
                    "SELECT",
                    "players"
                ]
            ]
        ],
        "typed_nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(players)"
            ],
            [
                "PARTIAL_GROUP_sum",
                [
                    "PARTIAL_SELECT_NUM",
                    "GET_QUESTION_SPAN(first quarter points of #REF)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(players)"
            ],
            [
                "PARTIAL_SELECT_SINGLE_NUM",
                "GET_QUESTION_SPAN(first quarter points of #REF)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "superlative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4,
                    9
                ],
                [
                    3,
                    6,
                    7
                ],
                [],
                [
                    5
                ],
                [
                    8,
                    10
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "scored",
                "the",
                "most",
                "points",
                "in",
                "the",
                "first",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [
                    6
                ],
                [],
                [],
                [
                    4,
                    5
                ],
                [
                    8
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0,
                    1
                ],
                [
                    2,
                    4,
                    9
                ],
                [],
                [],
                [
                    8
                ],
                [
                    5
                ],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    9
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1133_3002a59c-ddb1-4bef-8352-a1badf3cc245",
        "question_text": "How many years after Zrinski was executed did his son die?",
        "split": "train",
        "decomposition": "return the  year that Zrinski was  executed ;return the  year that son of Zrinski die ;return difference of #2 and  #1",
        "program": [
            "SELECT['the year that Zrinski was executed']",
            "SELECT['the year that son of Zrinski die']",
            "ARITHMETIC['difference', '#2', '#1']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "the year that son of Zrinski die"
            ],
            [
                "SELECT",
                "the year that Zrinski was executed"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the year that son of Zrinski die)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the year that Zrinski was executed)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Two_Events",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the year that son of Zrinski die)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(the year that Zrinski was executed)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    9
                ],
                [
                    4,
                    5,
                    6
                ],
                [],
                [
                    7,
                    8
                ],
                [
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "after",
                "Zrinski",
                "was",
                "executed",
                "did",
                "his",
                "son",
                "die",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    9
                ],
                [],
                [],
                [],
                [
                    4
                ],
                [
                    5,
                    7
                ],
                [
                    6
                ],
                [],
                [
                    8,
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3
                ],
                [
                    5,
                    9
                ],
                [
                    4,
                    6
                ],
                [],
                [],
                [
                    8
                ],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_263_2926afa2-3a3a-48c0-952b-318f296b010b",
        "question_text": "How many years longer is a fixed term in Parliment now than it was under the Triennial Act 1694?",
        "split": "train",
        "decomposition": "return years of a fixed term in  Parliment now ;return years of a fixed term in  Parliment under the  Triennial Act 1694 ;return number of  #1 ;return number of  #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['years of a fixed term in Parliment now']",
            "SELECT['years of a fixed term in Parliment under the Triennial Act 1694']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "years of a fixed term in Parliment now"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "years of a fixed term in Parliment under the Triennial Act 1694"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(years of a fixed term in Parliment now)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(years of a fixed term in Parliment under the Triennial Act 1694)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(years of a fixed term in Parliment now)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(years of a fixed term in Parliment under the Triennial Act 1694)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    4
                ],
                [],
                [
                    5,
                    6,
                    7,
                    8,
                    10
                ],
                [
                    9
                ],
                [
                    11,
                    12
                ],
                [
                    13,
                    14,
                    15,
                    16
                ],
                [
                    17,
                    18,
                    19
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "longer",
                "is",
                "a",
                "fixed",
                "term",
                "in",
                "Parliment",
                "now",
                "than",
                "it",
                "was",
                "under",
                "the",
                "Triennial",
                "Act",
                "1694",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [
                    2
                ],
                [],
                [
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    7,
                    8
                ],
                [
                    9
                ],
                [
                    10
                ],
                [],
                [
                    11
                ],
                [
                    13
                ],
                [
                    14
                ],
                [],
                [
                    16,
                    17
                ],
                [
                    18
                ],
                [
                    19
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3,
                    4,
                    13
                ],
                [],
                [],
                [
                    6,
                    7
                ],
                [
                    10
                ],
                [
                    9
                ],
                [
                    12
                ],
                [
                    11,
                    16
                ],
                [],
                [
                    17
                ],
                [
                    18,
                    19
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    18
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    18
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    18
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    18
                ],
                [
                    14,
                    18
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    18
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_432_504fa5fd-d14f-4003-9093-a387a6763eb5",
        "question_text": "Who kicked the shortest field goal?",
        "split": "train",
        "decomposition": "return field goals ;return the  shortest of #1 ;return who  kicked #2",
        "program": [
            "SELECT['field goals']",
            "AGGREGATE['min', '#1']",
            "PROJECT['who kicked #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "who kicked #REF",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "field goals"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who kicked #REF)",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who kicked #REF)",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4,
                    5
                ],
                [],
                [
                    6
                ]
            ],
            "question_tokens": [
                "Who",
                "kicked",
                "the",
                "shortest",
                "field",
                "goal",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    3,
                    4,
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    6
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    2
                ],
                [],
                [],
                [
                    3,
                    4,
                    5
                ],
                [],
                [],
                [
                    6
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1431_adea92b1-14eb-40fe-aab0-16ca7218aae6",
        "question_text": "Which player kicked the longer field goal in the first two quarters?",
        "split": "train",
        "decomposition": "return the  field goals in  the first two quarters ;return the  longer of #1 ;return which player kicked #2",
        "program": [
            "SELECT['the field goals in the first two quarters']",
            "PROJECT['the longer of #REF', '#1']",
            "PROJECT['which player kicked #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "which player kicked #REF",
            [
                "PROJECT",
                "the longer of #REF",
                [
                    "SELECT",
                    "the field goals in the first two quarters"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(which player kicked #REF)",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(the longer of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the field goals in the first two quarters)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(which player kicked #REF)",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(the longer of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the field goals in the first two quarters)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    4,
                    5,
                    6,
                    8,
                    10,
                    11
                ],
                [
                    9
                ],
                [
                    7
                ],
                [
                    12
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "kicked",
                "the",
                "longer",
                "field",
                "goal",
                "in",
                "the",
                "first",
                "two",
                "quarters",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    4
                ],
                [
                    10
                ],
                [
                    7
                ],
                [],
                [],
                [
                    9
                ],
                [],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    4
                ],
                [],
                [
                    11
                ],
                [
                    5,
                    6,
                    8,
                    9,
                    10
                ],
                [],
                [],
                [],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    11
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_877_5ac3e49b-839e-4011-b3d1-7e32cebaea56",
        "question_text": "How many yards was Chad Johnson's shortest touchdown catch?",
        "split": "train",
        "decomposition": "return yards of touchdown catches of  Chad Johnson ;return shortest of #1",
        "program": [
            "SELECT['yards of touchdown catches of Chad Johnson']",
            "AGGREGATE['min', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "yards of touchdown catches of Chad Johnson"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdown catches of Chad Johnson)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdown catches of Chad Johnson)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8
                ],
                [],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "Chad",
                "Johnson",
                "'s",
                "shortest",
                "touchdown",
                "catch",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    6,
                    7,
                    8
                ],
                [
                    4
                ],
                [],
                [
                    5
                ],
                [],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    9
                ],
                [],
                [
                    2,
                    3,
                    4,
                    6,
                    8
                ],
                [
                    7
                ],
                [
                    5
                ],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1044_06f5edca-be48-43d1-8763-e3f440828243",
        "question_text": "How many yards longer was Maurice Jones-Drew's longest touchdown run than his shortest?",
        "split": "train",
        "decomposition": "return yards of touchdown runs of  Maurice Jones-Drew ;return longest of #1 ;return shortest of #1 ;return difference of #2 and  #3",
        "program": [
            "SELECT['yards of touchdown runs of Maurice Jones-Drew']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['min', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of touchdown runs of Maurice Jones-Drew"
                ]
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of touchdown runs of Maurice Jones-Drew"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown runs of Maurice Jones-Drew)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown runs of Maurice Jones-Drew)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown runs of Maurice Jones-Drew)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown runs of Maurice Jones-Drew)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    5
                ],
                [
                    2,
                    3,
                    4,
                    9,
                    10
                ],
                [
                    7
                ],
                [
                    8
                ],
                [
                    13
                ],
                [
                    6,
                    11,
                    12,
                    14,
                    15
                ],
                [],
                [
                    16
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "Maurice",
                "Jones",
                "-",
                "Drew",
                "'s",
                "longest",
                "touchdown",
                "run",
                "than",
                "his",
                "shortest",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    10
                ],
                [
                    5
                ],
                [],
                [
                    6,
                    8
                ],
                [],
                [],
                [],
                [],
                [
                    13
                ],
                [],
                [
                    9,
                    11,
                    12,
                    14,
                    15
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [
                    5
                ],
                [
                    2,
                    4,
                    6
                ],
                [
                    9,
                    10
                ],
                [],
                [],
                [
                    8
                ],
                [],
                [
                    13
                ],
                [
                    11
                ],
                [
                    12,
                    14,
                    15
                ],
                [],
                [],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    12
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    15
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    15
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2071_eff0af68-c099-4061-a52b-74c8657a054f",
        "question_text": "Which player had more field goals over 30 yards, Jay Feely or Shane Andrus",
        "split": "train",
        "decomposition": "return yards of field goals of  Jay Feely that are over 30 yard ;return yards of field goals of  Shane Andrus that are over 30 yard ;return the  number of  #1 ;return the  number of  #2 ;return which is more of #3 ,  #4",
        "program": [
            "SELECT['yards of field goals of Jay Feely that are over 30 yard']",
            "SELECT['yards of field goals of Shane Andrus that are over 30 yard']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "yards of field goals of Jay Feely that are over 30 yard"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "yards of field goals of Shane Andrus that are over 30 yard"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals of Jay Feely that are over 30 yard)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals of Shane Andrus that are over 30 yard)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals of Jay Feely that are over 30 yard)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals of Shane Andrus that are over 30 yard)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    9,
                    12
                ],
                [
                    8
                ],
                [
                    6,
                    7
                ],
                [
                    10,
                    11
                ],
                [
                    13,
                    14
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "had",
                "more",
                "field",
                "goals",
                "over",
                "30",
                "yards",
                ",",
                "Jay",
                "Feely",
                "or",
                "Shane",
                "Andrus"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [],
                [
                    6,
                    7
                ],
                [],
                [
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    12
                ],
                [
                    11,
                    13
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    8
                ],
                [
                    2,
                    9,
                    12
                ],
                [
                    1,
                    3,
                    4,
                    5,
                    10
                ],
                [
                    7
                ],
                [],
                [],
                [],
                [
                    11
                ],
                [
                    13,
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    8
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_895_2313e748-9230-4834-bc90-8a304b707a3f",
        "question_text": "How many yards shorter was Jason Campbell's second touchdown pass compared to his first?",
        "split": "train",
        "decomposition": "return yards of touchdown passes of  Jason Campbell ;return second of #1 ;return first of #1 ;return difference of #2 and  #3",
        "program": [
            "SELECT['yards of touchdown passes of Jason Campbell']",
            "PROJECT['second of #REF', '#1']",
            "AGGREGATE['min', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "PROJECT",
                "second of #REF",
                [
                    "SELECT",
                    "yards of touchdown passes of Jason Campbell"
                ]
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of touchdown passes of Jason Campbell"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(second of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes of Jason Campbell)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes of Jason Campbell)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(second of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes of Jason Campbell)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes of Jason Campbell)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [],
                [],
                [],
                [
                    5,
                    6
                ],
                [],
                [
                    11,
                    12
                ],
                [
                    2,
                    4,
                    7,
                    8,
                    9,
                    10,
                    13,
                    14
                ],
                [],
                [
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "shorter",
                "was",
                "Jason",
                "Campbell",
                "'s",
                "second",
                "touchdown",
                "pass",
                "compared",
                "to",
                "his",
                "first",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3
                ],
                [],
                [],
                [],
                [],
                [
                    5,
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    4,
                    7,
                    9,
                    10,
                    13
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [
                    5
                ],
                [],
                [],
                [
                    9
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [
                    11,
                    12
                ],
                [
                    2,
                    4,
                    7,
                    8,
                    10
                ],
                [
                    13,
                    14
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    14
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_2036_3f07deb2-a1da-4e29-b03e-af353da5fccf",
        "question_text": "Which kicker had fewer total yards, Carpenter or Reed?",
        "split": "dev",
        "decomposition": "return yards of Carpenter ;return yards of Reed ;return sum of #1 ;return sum of #2 ;return which is lowest of #3 ,  #4",
        "program": [
            "SELECT['yards of Carpenter']",
            "SELECT['yards of Reed']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "COMPARISON['min', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of Carpenter"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of Reed"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_sum_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of Carpenter)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of Reed)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_sum_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of Carpenter)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of Reed)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4
                ],
                [
                    5
                ],
                [
                    7
                ],
                [
                    6,
                    9
                ],
                [
                    8,
                    10
                ]
            ],
            "question_tokens": [
                "Which",
                "kicker",
                "had",
                "fewer",
                "total",
                "yards",
                ",",
                "Carpenter",
                "or",
                "Reed",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3
                ],
                [
                    4
                ],
                [],
                [],
                [
                    7
                ],
                [
                    5
                ],
                [
                    6
                ],
                [
                    8
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    1,
                    2,
                    3,
                    4
                ],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    9
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1489_bb903da0-caac-4395-bb55-53540c03b017",
        "question_text": "How many touchdowns of over 35 yards were there in the second half?",
        "split": "train",
        "decomposition": "return yards of touchdowns that were there  in  the  second half ;return #1 that were over 35 yards ;return number of  #2",
        "program": [
            "SELECT['yards of touchdowns that were there in the second half']",
            "FILTER['#1', 'that were over 35 yards']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "yards of touchdowns that were there in the second half"
                ],
                "that were over 35 yards"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdowns that were there in the second half)"
                ],
                "GET_QUESTION_SPAN(that were over 35 yards)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_GT",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdowns that were there)"
                    ],
                    "GET_QUESTION_SPAN(in the second half)"
                ],
                "GET_QUESTION_NUMBER(35)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    8
                ],
                [
                    4,
                    5
                ],
                [
                    9,
                    11,
                    12
                ],
                [
                    3,
                    10
                ],
                [],
                [
                    13
                ],
                [
                    6,
                    7
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "touchdowns",
                "of",
                "over",
                "35",
                "yards",
                "were",
                "there",
                "in",
                "the",
                "second",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    4
                ],
                [],
                [
                    12
                ],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [
                    11
                ],
                [
                    5,
                    6,
                    7
                ],
                [],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    8
                ],
                [
                    2
                ],
                [
                    7
                ],
                [
                    4,
                    5
                ],
                [],
                [
                    9,
                    11,
                    12
                ],
                [],
                [],
                [],
                [
                    13
                ],
                [
                    6
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_14_cfc387e7-51d6-47e8-a75a-cc0da68fedb1",
        "question_text": "How many years did the 1st Squadron, 10th Cavalry with the 4th Division participate in Exercise Reforger?",
        "split": "train",
        "decomposition": "return years that the  1st Squadron ,  10th Cavalry with the 4th Division participate in  Exercise Reforger ;return number of  #1",
        "program": [
            "SELECT['years that the 1st Squadron , 10th Cavalry with the 4th Division participate in Exercise Reforger']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "years that the 1st Squadron , 10th Cavalry with the 4th Division participate in Exercise Reforger"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years that the 1st Squadron , 10th Cavalry with the 4th Division participate in Exercise Reforger)"
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Single_Event",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years that the 1st Squadron , 10th Cavalry with the 4th Division participate in Exercise Reforger)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    6,
                    8
                ],
                [
                    4,
                    7,
                    9,
                    11,
                    14,
                    15
                ],
                [
                    10,
                    12,
                    13,
                    16,
                    17,
                    18
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "did",
                "the",
                "1st",
                "Squadron",
                ",",
                "10th",
                "Cavalry",
                "with",
                "the",
                "4th",
                "Division",
                "participate",
                "in",
                "Exercise",
                "Reforger",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    5,
                    8
                ],
                [
                    6
                ],
                [
                    7,
                    9,
                    11
                ],
                [
                    10,
                    12,
                    13,
                    14,
                    15
                ],
                [
                    16
                ],
                [
                    17,
                    18
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    5,
                    6,
                    8
                ],
                [],
                [
                    4,
                    7,
                    9,
                    11,
                    14,
                    15
                ],
                [
                    10,
                    12,
                    13
                ],
                [
                    16,
                    17,
                    18
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    17
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    13
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    17
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    17
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    17
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2868_c73a25d9-ec63-428a-ad4c-ed8b06a03183",
        "question_text": "How many more millions is the hobby game market compared to the estimate market in the U.S and Canada?",
        "split": "train",
        "decomposition": "return the  millions of the   hobby game market  in  the U.S ;return the  millions of the   hobby game market  in  Canada ;return the  millions of the   estimate market  in  the U.S ;return the  millions of the   estimate market  in  Canada ;return the  sum of #1 and  #2 ;return the  sum of #3 and  #4 ;return the  difference of #5 and  #6",
        "program": [
            "SELECT['the millions of the hobby game market in the U.S']",
            "SELECT['the millions of the hobby game market in Canada']",
            "SELECT['the millions of the estimate market in the U.S']",
            "SELECT['the millions of the estimate market in Canada']",
            "ARITHMETIC['sum', '#1', '#2']",
            "ARITHMETIC['sum', '#3', '#4']",
            "ARITHMETIC['difference', '#5', '#6']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "ARITHMETIC_sum",
                [
                    "SELECT",
                    "the millions of the hobby game market in the U.S"
                ],
                [
                    "SELECT",
                    "the millions of the hobby game market in Canada"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT",
                    "the millions of the estimate market in the U.S"
                ],
                [
                    "SELECT",
                    "the millions of the estimate market in Canada"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the millions of the hobby game market in the U.S)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the millions of the hobby game market in Canada)"
                    ]
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the millions of the estimate market in the U.S)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the millions of the estimate market in Canada)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the millions of the hobby game market in the U.S)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the millions of the hobby game market in Canada)"
                    ]
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the millions of the estimate market in the U.S)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the millions of the estimate market in Canada)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "select",
            "arithmetic",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4
                ],
                [],
                [],
                [],
                [
                    7
                ],
                [
                    6,
                    9
                ],
                [],
                [],
                [
                    8,
                    12,
                    13,
                    17
                ],
                [],
                [],
                [],
                [
                    16,
                    18
                ],
                [],
                [
                    19
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "millions",
                "is",
                "the",
                "hobby",
                "game",
                "market",
                "compared",
                "to",
                "the",
                "estimate",
                "market",
                "in",
                "the",
                "U.S",
                "and",
                "Canada",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [],
                [],
                [],
                [
                    8,
                    13,
                    17
                ],
                [],
                [
                    9
                ],
                [
                    12
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    16
                ],
                [
                    18
                ],
                [],
                [
                    19
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4
                ],
                [],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [],
                [],
                [],
                [],
                [
                    8,
                    13,
                    17
                ],
                [],
                [
                    12
                ],
                [],
                [],
                [],
                [],
                [
                    16,
                    18
                ],
                [],
                [],
                [
                    19
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    18
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    18
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    18
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    18
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    18
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    18
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    16
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_2187_9cfda451-d4d6-4191-bd43-ee0f38711cb5",
        "question_text": "How many percent of people were not German?",
        "split": "dev",
        "decomposition": "return percent of people that were German ;return difference of 100 and  #1",
        "program": [
            "SELECT['percent of people that were German']",
            "PROJECT['difference of 100 and #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "difference of 100 and #REF",
            [
                "SELECT",
                "percent of people that were German"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(difference of 100 and #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(percent of people that were German)"
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            "SELECT_IMPLICIT_NUM(100)",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent of people that were German)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [],
                [
                    7,
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "percent",
                "of",
                "people",
                "were",
                "not",
                "German",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    6
                ],
                [],
                [
                    4,
                    5
                ],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [],
                [],
                [],
                [
                    7,
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_3094_e8eda338-b8f5-47df-b3a1-6539475a8385",
        "question_text": "How many voters in Vallejo are not Republican?",
        "split": "train",
        "decomposition": "return voters in  Vallejo ;return #1 that are Republican ;return #1 besides  #2 ;return the  number of  #3",
        "program": [
            "SELECT['voters in Vallejo']",
            "FILTER['#1', 'that are Republican']",
            "DISCARD['#1', '#2']",
            "AGGREGATE['count', '#3']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "DISCARD",
                [
                    "SELECT",
                    "voters in Vallejo"
                ],
                [
                    "FILTER",
                    [
                        "SELECT",
                        "voters in Vallejo"
                    ],
                    "that are Republican"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "DISCARD",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(voters in Vallejo)"
                ],
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(voters in Vallejo)"
                    ],
                    "GET_QUESTION_SPAN(that are Republican)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "DISCARD",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(voters in Vallejo)"
                ],
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(voters in Vallejo)"
                    ],
                    "GET_QUESTION_SPAN(that are Republican)"
                ]
            ]
        ],
        "operators": [
            "select",
            "filter",
            "discard",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    6
                ],
                [],
                [],
                [
                    3,
                    4
                ],
                [
                    5
                ],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "voters",
                "in",
                "Vallejo",
                "are",
                "not",
                "Republican",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    6
                ],
                [
                    2
                ],
                [],
                [],
                [],
                [
                    4
                ],
                [
                    3
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    7
                ],
                [],
                [],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    5
                ],
                [],
                [],
                [
                    2,
                    6
                ],
                [],
                [],
                [
                    4
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2547_4ec90945-e0b5-4653-99f9-a8fa878239c4",
        "question_text": "How many years did John Schal serve as Athletic director?",
        "split": "train",
        "decomposition": "return the  years that John Schal serve as Athletic director ;return number of  #1",
        "program": [
            "SELECT['the years that John Schal serve as Athletic director']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "the years that John Schal serve as Athletic director"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the years that John Schal serve as Athletic director)"
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Single_Event",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the years that John Schal serve as Athletic director)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    6,
                    7
                ],
                [
                    4
                ],
                [
                    8,
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "did",
                "John",
                "Schal",
                "serve",
                "as",
                "Athletic",
                "director",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    6
                ],
                [],
                [
                    4,
                    5
                ],
                [
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    5,
                    6,
                    7
                ],
                [
                    4
                ],
                [
                    8,
                    9
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_948_d431957a-1314-4fcc-82e1-12133e48ca1d",
        "question_text": "How many yards longer was Marshawn Lynch's longest touchdown compared to his shortest?",
        "split": "train",
        "decomposition": "return yards of touchdowns of  Marshawn Lynch ;return highest of #1 ;return lowest of #1 ;return difference of #2 and  #3",
        "program": [
            "SELECT['yards of touchdowns of Marshawn Lynch']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['min', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of touchdowns of Marshawn Lynch"
                ]
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of touchdowns of Marshawn Lynch"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdowns of Marshawn Lynch)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdowns of Marshawn Lynch)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdowns of Marshawn Lynch)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdowns of Marshawn Lynch)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    7,
                    8
                ],
                [
                    6
                ],
                [],
                [
                    10,
                    11
                ],
                [
                    9,
                    12,
                    13
                ],
                [],
                [
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "Marshawn",
                "Lynch",
                "'s",
                "longest",
                "touchdown",
                "compared",
                "to",
                "his",
                "shortest",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    8
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    6
                ],
                [
                    10
                ],
                [],
                [
                    7,
                    9,
                    12,
                    13
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    2,
                    4,
                    5
                ],
                [
                    7,
                    8
                ],
                [],
                [],
                [],
                [
                    6
                ],
                [
                    10,
                    11
                ],
                [
                    9
                ],
                [
                    12,
                    13
                ],
                [],
                [],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    13
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    13
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1882_8f04ec66-10f8-4457-9d57-74a52956dcd1",
        "question_text": "How many people, in terms of percentage, were either of German, Irish, or American ancestry?",
        "split": "train",
        "decomposition": "return percentage of people that were of  German ancestry ;return percentage of people that were of  Irish ancestry ;return percentage of people that were of  American ancestry ;return sum of #1 and  #2 ;return sum of #3 and  #4",
        "program": [
            "SELECT['percentage of people that were of German ancestry']",
            "SELECT['percentage of people that were of Irish ancestry']",
            "SELECT['percentage of people that were of American ancestry']",
            "ARITHMETIC['sum', '#1', '#2']",
            "ARITHMETIC['sum', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT",
                "percentage of people that were of American ancestry"
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT",
                    "percentage of people that were of German ancestry"
                ],
                [
                    "SELECT",
                    "percentage of people that were of Irish ancestry"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percentage of people that were of American ancestry)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percentage of people that were of German ancestry)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percentage of people that were of Irish ancestry)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percentage of people that were of American ancestry)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percentage of people that were of German ancestry)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percentage of people that were of Irish ancestry)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    3
                ],
                [
                    1
                ],
                [],
                [],
                [
                    5,
                    8,
                    9,
                    10,
                    12,
                    13,
                    15,
                    17
                ],
                [
                    7
                ],
                [],
                [
                    14,
                    16
                ],
                [],
                [],
                [
                    18,
                    19
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "people",
                ",",
                "in",
                "terms",
                "of",
                "percentage",
                ",",
                "were",
                "either",
                "of",
                "German",
                ",",
                "Irish",
                ",",
                "or",
                "American",
                "ancestry",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    5,
                    8,
                    9,
                    10,
                    17
                ],
                [],
                [
                    7
                ],
                [],
                [],
                [],
                [],
                [
                    12
                ],
                [],
                [],
                [],
                [],
                [
                    16
                ],
                [],
                [],
                [
                    18
                ],
                [
                    19
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [
                    8,
                    9,
                    10,
                    12,
                    13,
                    15,
                    17
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    16
                ],
                [
                    19
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    18
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    18
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    18
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    18
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_616_aec3fa61-3475-4b86-9c98-33354f0b819a",
        "question_text": "What was the longest TD pass in the third quarter?",
        "split": "train",
        "decomposition": "return TD passes of the  third quarter ;return longest of #1",
        "program": [
            "SELECT['TD passes of the third quarter']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "TD passes of the third quarter"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(TD passes of the third quarter)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(TD passes of the third quarter)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    3,
                    4,
                    5
                ],
                [
                    0,
                    2,
                    6,
                    7
                ],
                [
                    8,
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "What",
                "was",
                "the",
                "longest",
                "TD",
                "pass",
                "in",
                "the",
                "third",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    3,
                    4,
                    5
                ],
                [],
                [],
                [
                    6,
                    7,
                    8
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    3,
                    4,
                    5
                ],
                [
                    2,
                    6,
                    7
                ],
                [],
                [
                    8,
                    9,
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    9
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_444_c5955041-d188-46cf-aaf6-7f1692362c98",
        "question_text": "Which European power were the Dutch attempting to take territory from before launching their assault on Spanish territory?",
        "split": "train",
        "decomposition": "return the  European power the Dutch were attempting to take territory from  ;return #1 before the  Dutch launch their assault on Spanish territory",
        "program": [
            "SELECT['the European power the Dutch were attempting to take territory from']",
            "FILTER['#1', 'before the Dutch launch their assault on Spanish territory']"
        ],
        "nested_expression": [
            "FILTER",
            [
                "SELECT",
                "the European power the Dutch were attempting to take territory from"
            ],
            "before the Dutch launch their assault on Spanish territory"
        ],
        "typed_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the European power the Dutch were attempting to take territory from)"
            ],
            "GET_QUESTION_SPAN(before the Dutch launch their assault on Spanish territory)"
        ],
        "drop_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the European power the Dutch were attempting to take territory from)"
            ],
            "GET_QUESTION_SPAN(before the Dutch launch their assault on Spanish territory)"
        ],
        "operators": [
            "select",
            "filter"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    3,
                    6,
                    11
                ],
                [
                    4,
                    5,
                    7,
                    8,
                    10,
                    12,
                    15,
                    16
                ],
                [
                    1,
                    2,
                    9,
                    13,
                    14
                ],
                [
                    17,
                    18
                ]
            ],
            "question_tokens": [
                "Which",
                "European",
                "power",
                "were",
                "the",
                "Dutch",
                "attempting",
                "to",
                "take",
                "territory",
                "from",
                "before",
                "launching",
                "their",
                "assault",
                "on",
                "Spanish",
                "territory",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    1,
                    2
                ],
                [
                    0,
                    3
                ],
                [],
                [
                    5,
                    7,
                    8
                ],
                [
                    6,
                    9,
                    10,
                    11,
                    12,
                    13
                ],
                [
                    14
                ],
                [
                    15,
                    16
                ],
                [
                    17,
                    18
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    3
                ],
                [
                    4,
                    6,
                    11
                ],
                [
                    2,
                    5,
                    7,
                    8,
                    10,
                    12,
                    15,
                    16
                ],
                [
                    13
                ],
                [
                    1,
                    9,
                    14
                ],
                [
                    17,
                    18
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    17
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    17
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    17
                ],
                [
                    8,
                    17
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    17
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    17
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    17
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    17
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    17
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    17
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2018_0ca3638a-d9df-402e-b0e5-4c7d3d4cd65a",
        "question_text": "How many yards difference exists between Michael Vick's longest TD pass and his shortest?",
        "split": "train",
        "decomposition": "return yards of TD passes of  Michael Vick ;return the  longest of #1 ;return the  shortest of #1 ;return the  difference of #2 and  #3",
        "program": [
            "SELECT['yards of TD passes of Michael Vick']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['min', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of TD passes of Michael Vick"
                ]
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of TD passes of Michael Vick"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of TD passes of Michael Vick)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of TD passes of Michael Vick)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of TD passes of Michael Vick)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of TD passes of Michael Vick)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [
                    5
                ],
                [
                    2,
                    4,
                    8,
                    9,
                    10,
                    11
                ],
                [
                    6,
                    7
                ],
                [],
                [
                    12
                ],
                [
                    13,
                    14
                ],
                [],
                [
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "difference",
                "exists",
                "between",
                "Michael",
                "Vick",
                "'s",
                "longest",
                "TD",
                "pass",
                "and",
                "his",
                "shortest",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    5
                ],
                [],
                [
                    2,
                    3,
                    4,
                    9
                ],
                [],
                [
                    6
                ],
                [
                    7
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    8,
                    10,
                    11,
                    13,
                    14
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3,
                    5
                ],
                [],
                [],
                [
                    2,
                    4
                ],
                [
                    8,
                    9,
                    10,
                    11
                ],
                [
                    6
                ],
                [
                    7
                ],
                [],
                [],
                [
                    12
                ],
                [],
                [
                    13,
                    14
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    14
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    14
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    14
                ],
                [
                    6,
                    11
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1783_89057432-c561-4fe7-8f0c-5694b7ca32c9",
        "question_text": "Which area had the lowest percentage of people who were considered poor relative to the total population?",
        "split": "train",
        "decomposition": "return percentages of people who  were considered poor relative to the  total population ;return the  lowest of #1 ;return the  area that had #2",
        "program": [
            "SELECT['percentages of people who were considered poor relative to the total population']",
            "AGGREGATE['min', '#1']",
            "PROJECT['the area that had #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "the area that had #REF",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "percentages of people who were considered poor relative to the total population"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the area that had #REF)",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percentages of people who were considered poor relative to the total population)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the area that had #REF)",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percentages of people who were considered poor relative to the total population)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    9,
                    14
                ],
                [],
                [
                    4,
                    10,
                    11,
                    12
                ],
                [
                    5,
                    6,
                    7,
                    8,
                    13,
                    15
                ],
                [
                    16,
                    17
                ]
            ],
            "question_tokens": [
                "Which",
                "area",
                "had",
                "the",
                "lowest",
                "percentage",
                "of",
                "people",
                "who",
                "were",
                "considered",
                "poor",
                "relative",
                "to",
                "the",
                "total",
                "population",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    3,
                    6
                ],
                [
                    5,
                    7
                ],
                [
                    4
                ],
                [
                    8,
                    9,
                    11,
                    15
                ],
                [],
                [
                    10,
                    13,
                    16
                ],
                [
                    12
                ],
                [],
                [
                    17
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    5,
                    8
                ],
                [
                    2,
                    9
                ],
                [
                    3,
                    6,
                    14
                ],
                [],
                [
                    12
                ],
                [
                    4,
                    11
                ],
                [
                    13
                ],
                [
                    10
                ],
                [
                    16,
                    17
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    16
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    16
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    16
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    16
                ],
                [
                    8,
                    16
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    16
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    16
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    16
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    16
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    16
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3278_12f06a41-c6b0-4be9-9ee6-990c92a92170",
        "question_text": "Did the Ravens score fewer points in the first or second quarter?",
        "split": "train",
        "decomposition": "return points Ravens score in  the first quarter ;return points Ravens score in  the second quarter ;return which is  fewer of  #1 , #2",
        "program": [
            "SELECT['points Ravens score in the first quarter']",
            "SELECT['points Ravens score in the second quarter']",
            "COMPARISON['min', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "points Ravens score in the first quarter"
            ],
            [
                "SELECT",
                "points Ravens score in the second quarter"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(points Ravens score in the first quarter)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(points Ravens score in the second quarter)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(points Ravens score in the first quarter)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(points Ravens score in the second quarter)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    4,
                    9
                ],
                [
                    1,
                    3,
                    5,
                    6
                ],
                [
                    2,
                    8
                ],
                [
                    7
                ],
                [
                    10,
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "Did",
                "the",
                "Ravens",
                "score",
                "fewer",
                "points",
                "in",
                "the",
                "first",
                "or",
                "second",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    4
                ],
                [],
                [
                    3
                ],
                [
                    2,
                    6
                ],
                [],
                [
                    5
                ],
                [
                    9
                ],
                [
                    8,
                    10
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    5
                ],
                [
                    0,
                    8,
                    9
                ],
                [
                    4
                ],
                [
                    2,
                    3,
                    6
                ],
                [],
                [],
                [],
                [],
                [
                    10,
                    11,
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    11
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    11
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    }
]