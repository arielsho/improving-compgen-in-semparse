[
    {
        "question_id": "DROP_train_history_2115_f3b4a29b-5976-47e8-9a55-6e95e9b1edcc",
        "question_text": "How many more points did the Pittsburgh Steelers score than the Washington Redskins in 2008?",
        "split": "train",
        "decomposition": "return points of Pittsburgh Steelers in  2008 ;return points of the  Washington Redskins in  2008 ;return difference of #1 and  #2",
        "program": [
            "SELECT['points of Pittsburgh Steelers in 2008']",
            "SELECT['points of the Washington Redskins in 2008']",
            "ARITHMETIC['difference', '#1', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "points of Pittsburgh Steelers in 2008"
            ],
            [
                "SELECT",
                "points of the Washington Redskins in 2008"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points of Pittsburgh Steelers in 2008)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points of the Washington Redskins in 2008)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points of Pittsburgh Steelers in 2008)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points of the Washington Redskins in 2008)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3
                ],
                [
                    4,
                    5,
                    6,
                    7,
                    8
                ],
                [],
                [
                    9,
                    14
                ],
                [
                    10,
                    11,
                    12,
                    13
                ],
                [
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "points",
                "did",
                "the",
                "Pittsburgh",
                "Steelers",
                "score",
                "than",
                "the",
                "Washington",
                "Redskins",
                "in",
                "2008",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [
                    4
                ],
                [
                    6,
                    7
                ],
                [
                    8
                ],
                [],
                [],
                [],
                [
                    9
                ],
                [],
                [
                    11,
                    12
                ],
                [
                    13
                ],
                [],
                [
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    3,
                    4
                ],
                [],
                [
                    6,
                    7
                ],
                [],
                [],
                [],
                [
                    9,
                    14
                ],
                [
                    11,
                    12
                ],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    14
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2137_1b1d5cd8-463f-42db-a507-b4d0c84bc7b0",
        "question_text": "Who scored more field goals, David Akers or Graham Gano?",
        "split": "train",
        "decomposition": "return field goals from  David Akers ;return field goals from  Graham Gano ;return the  number of  #1 ;return the  number of  #2 ;return which is more of #3 ,  #4",
        "program": [
            "SELECT['field goals from David Akers']",
            "SELECT['field goals from Graham Gano']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals from David Akers"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals from Graham Gano"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals from David Akers)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals from Graham Gano)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals from David Akers)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals from Graham Gano)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    8
                ],
                [
                    6
                ],
                [],
                [
                    7,
                    9,
                    10
                ],
                [
                    11
                ]
            ],
            "question_tokens": [
                "Who",
                "scored",
                "more",
                "field",
                "goals",
                ",",
                "David",
                "Akers",
                "or",
                "Graham",
                "Gano",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    4
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    6,
                    8
                ],
                [
                    7,
                    9
                ],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    5,
                    8
                ],
                [
                    1,
                    2,
                    3,
                    4
                ],
                [
                    6
                ],
                [
                    7
                ],
                [],
                [],
                [
                    9,
                    10
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    1,
                    10
                ],
                [
                    2,
                    10
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2988_85b4645a-c4e6-4827-8e8a-19d404a4718b",
        "question_text": "Which year had a lower GDP surplus, 2006 or 2008?",
        "split": "train",
        "decomposition": "return the  GDP surplus of 2006 ;return the  GDP surplus of 2008 ;return which is lower of #1 ,  #2",
        "program": [
            "SELECT['the GDP surplus of 2006']",
            "SELECT['the GDP surplus of 2008']",
            "COMPARISON['min', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "the GDP surplus of 2006"
            ],
            [
                "SELECT",
                "the GDP surplus of 2008"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the GDP surplus of 2006)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(the GDP surplus of 2008)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the GDP surplus of 2006)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(the GDP surplus of 2008)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4,
                    5,
                    7,
                    9
                ],
                [
                    3
                ],
                [
                    6,
                    8
                ],
                [],
                [
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "Which",
                "year",
                "had",
                "a",
                "lower",
                "GDP",
                "surplus",
                ",",
                "2006",
                "or",
                "2008",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    4,
                    5
                ],
                [],
                [
                    3
                ],
                [],
                [
                    6
                ],
                [],
                [
                    7
                ],
                [
                    9
                ],
                [
                    8,
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    7,
                    9
                ],
                [
                    4,
                    5
                ],
                [],
                [
                    6
                ],
                [
                    8
                ],
                [],
                [],
                [
                    10,
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    10
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_435_1c56ca5b-80fd-42dd-bab9-d5cebeca53f4",
        "question_text": "How many field goals did Matt Stover make that were longer than Neil Rackers shortest?",
        "split": "train",
        "decomposition": "return field goals that Neil Rackers make ;return the  shortest of #1 ;return field goals that Matt Stover make ;return #3 that are longer than #2 ;return the  number of  #4",
        "program": [
            "SELECT['field goals that Neil Rackers make']",
            "AGGREGATE['min', '#1']",
            "SELECT['field goals that Matt Stover make']",
            "FILTER['#3', 'that are longer than #2']",
            "AGGREGATE['count', '#4']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "field goals that Matt Stover make"
                ],
                "that are longer than #2"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that Matt Stover make)"
                ],
                "GET_QUESTION_SPAN(that are longer than #2)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that Matt Stover make)"
                ],
                "GET_QUESTION_SPAN(that are longer than #2)"
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    7,
                    9
                ],
                [
                    5,
                    6,
                    8,
                    10,
                    12
                ],
                [],
                [
                    11,
                    13
                ],
                [
                    14,
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "field",
                "goals",
                "did",
                "Matt",
                "Stover",
                "make",
                "that",
                "were",
                "longer",
                "than",
                "Neil",
                "Rackers",
                "shortest",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    4
                ],
                [],
                [
                    3,
                    6
                ],
                [
                    9,
                    10
                ],
                [
                    8
                ],
                [],
                [
                    7,
                    11
                ],
                [
                    12,
                    13
                ],
                [
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    9,
                    10,
                    11,
                    14
                ],
                [
                    3,
                    4,
                    5,
                    7
                ],
                [
                    2,
                    6
                ],
                [
                    8,
                    12
                ],
                [],
                [
                    13
                ],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    14
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    14
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    14
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_473_0a8629c6-487f-4046-af53-bb1f22ad862f",
        "question_text": "How many TD passes of at least 30 yards did Manning throw?",
        "split": "train",
        "decomposition": "return yards of TD passes that Manning did throw ;return #1 that was  at least 30 yards ;return number of  #2",
        "program": [
            "SELECT['yards of TD passes that Manning did throw']",
            "FILTER['#1', 'that was at least 30 yards']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "yards of TD passes that Manning did throw"
                ],
                "that was at least 30 yards"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of TD passes that Manning did throw)"
                ],
                "GET_QUESTION_SPAN(that was at least 30 yards)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_GT_EQ",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of TD passes that Manning did throw)"
                ],
                "GET_QUESTION_NUMBER(30)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    9,
                    10
                ],
                [
                    4,
                    5,
                    6,
                    7
                ],
                [],
                [
                    12
                ],
                [
                    8,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "TD",
                "passes",
                "of",
                "at",
                "least",
                "30",
                "yards",
                "did",
                "Manning",
                "throw",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    4,
                    5,
                    6
                ],
                [],
                [
                    9
                ],
                [],
                [],
                [
                    7,
                    8,
                    11
                ],
                [
                    10
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    9,
                    10,
                    11
                ],
                [
                    2,
                    3
                ],
                [
                    4,
                    5,
                    6,
                    7
                ],
                [],
                [],
                [
                    12
                ],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    0,
                    8
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2792_210ef53d-dee9-4b60-91c6-661ea2fed1a6",
        "question_text": "How had more completed passes, Tom Brady or Derek Carr?`",
        "split": "train",
        "decomposition": "return passes that Tom Brady completed ;return passes that Derek Carr completed ;return the  number of  #1 ;return the  number of  #2 ;return which is more of #3 ,  #4",
        "program": [
            "SELECT['passes that Tom Brady completed']",
            "SELECT['passes that Derek Carr completed']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "passes that Tom Brady completed"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "passes that Derek Carr completed"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(passes that Tom Brady completed)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(passes that Derek Carr completed)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(passes that Tom Brady completed)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(passes that Derek Carr completed)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    2,
                    4,
                    5,
                    8
                ],
                [
                    6
                ],
                [
                    3
                ],
                [
                    7,
                    9,
                    10
                ],
                [
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "had",
                "more",
                "completed",
                "passes",
                ",",
                "Tom",
                "Brady",
                "or",
                "Derek",
                "Carr",
                "?",
                "`"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    4
                ],
                [],
                [
                    5
                ],
                [
                    3
                ],
                [],
                [
                    6
                ],
                [
                    7,
                    8
                ],
                [],
                [
                    9,
                    10,
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    5,
                    8
                ],
                [
                    2,
                    4
                ],
                [
                    6
                ],
                [],
                [
                    3
                ],
                [
                    7,
                    9
                ],
                [
                    10
                ],
                [
                    11,
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    10
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    4
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_651_1b6d8be7-6af6-4a29-aea7-a62d2a8c9e37",
        "question_text": "How many more field goals did Adam Vinatieri make over Dave Rayner?",
        "split": "train",
        "decomposition": "return field goals of Adam Vinatieri ;return number of  #1 ;return field goals of Dave Rayner ;return number of  #3 ;return difference of #2 and  #4",
        "program": [
            "SELECT['field goals of Adam Vinatieri']",
            "AGGREGATE['count', '#1']",
            "SELECT['field goals of Dave Rayner']",
            "AGGREGATE['count', '#3']",
            "ARITHMETIC['difference', '#2', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals of Adam Vinatieri"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals of Dave Rayner"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Adam Vinatieri)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Dave Rayner)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Adam Vinatieri)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Dave Rayner)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "select",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4,
                    5
                ],
                [],
                [
                    9
                ],
                [
                    6,
                    7,
                    8
                ],
                [],
                [
                    10,
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "field",
                "goals",
                "did",
                "Adam",
                "Vinatieri",
                "make",
                "over",
                "Dave",
                "Rayner",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4
                ],
                [],
                [],
                [],
                [],
                [
                    6,
                    7,
                    8
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [
                    11
                ],
                [
                    10
                ],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [],
                [],
                [
                    9
                ],
                [
                    7,
                    8
                ],
                [],
                [
                    10,
                    11
                ],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1542_fe492d92-0945-4627-9f1f-c48eee07da55",
        "question_text": "Who died later, Amangkurat I or Amangkurat II?",
        "split": "dev",
        "decomposition": "return when  did Amangkurat  I die ;return when  did Amangkurat  II die ;return which is the  highest of #1 ,  #2",
        "program": [
            "SELECT['when did Amangkurat I die']",
            "SELECT['when did Amangkurat II die']",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "when did Amangkurat I die"
            ],
            [
                "SELECT",
                "when did Amangkurat II die"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did Amangkurat I die)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did Amangkurat II die)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did Amangkurat I die)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did Amangkurat II die)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    6,
                    7
                ],
                [],
                [
                    5
                ],
                [],
                [
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "Who",
                "died",
                "later",
                ",",
                "Amangkurat",
                "I",
                "or",
                "Amangkurat",
                "II",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3
                ],
                [],
                [
                    4
                ],
                [],
                [],
                [],
                [
                    5,
                    6,
                    7
                ],
                [
                    8
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    3,
                    6
                ],
                [
                    1,
                    2,
                    4,
                    7
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    8
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_3578_83aa8940-5943-484c-8f6f-e21f2aaa768c",
        "question_text": "How many average passengers could fit in each section of the cabin proposed by Space Habitation Design Associates?",
        "split": "train",
        "decomposition": "return the  cabin proposed by Space Habitation Design Associates ;return the  sections of #1 ;return the  average passengers that could fit in  each #2",
        "program": [
            "SELECT['the cabin proposed by Space Habitation Design Associates']",
            "PROJECT['the sections of #REF', '#1']",
            "PROJECT['the average passengers that could fit in each #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "the average passengers that could fit in each #REF",
            [
                "PROJECT",
                "the sections of #REF",
                [
                    "SELECT",
                    "the cabin proposed by Space Habitation Design Associates"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the average passengers that could fit in each #REF)",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(the sections of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the cabin proposed by Space Habitation Design Associates)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the average passengers that could fit in each #REF)",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(the sections of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the cabin proposed by Space Habitation Design Associates)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    3,
                    4,
                    5
                ],
                [
                    2
                ],
                [
                    7,
                    8,
                    10,
                    11
                ],
                [
                    12,
                    13,
                    14
                ],
                [
                    6,
                    9
                ],
                [
                    15,
                    16,
                    17,
                    18
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "average",
                "passengers",
                "could",
                "fit",
                "in",
                "each",
                "section",
                "of",
                "the",
                "cabin",
                "proposed",
                "by",
                "Space",
                "Habitation",
                "Design",
                "Associates",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4
                ],
                [
                    6
                ],
                [],
                [
                    5,
                    7,
                    8
                ],
                [
                    9
                ],
                [],
                [],
                [
                    11,
                    13
                ],
                [
                    12,
                    14,
                    15
                ],
                [
                    16,
                    17
                ],
                [
                    18
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3,
                    4
                ],
                [
                    5,
                    7
                ],
                [],
                [
                    8
                ],
                [
                    9,
                    10,
                    11
                ],
                [
                    12,
                    14,
                    15
                ],
                [
                    2
                ],
                [
                    13
                ],
                [
                    16,
                    17,
                    18
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    17
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    17
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    17
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    7,
                    17
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    17
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    17
                ],
                [
                    14,
                    17
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_745_b3e759d6-7cfc-46ea-a9dc-5f2c2f41abb7",
        "question_text": "Which quarter were there no points?",
        "split": "train",
        "decomposition": "return quarters ;return points in  #1 ;return sum of #2 for each #1 ;return #1 where #3 is zero",
        "program": [
            "SELECT['quarters']",
            "PROJECT['points in #REF', '#1']",
            "GROUP['sum', '#2', '#1']",
            "COMPARATIVE['#1', '#3', 'is zero']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "quarters"
            ],
            [
                "GROUP_sum",
                [
                    "PROJECT",
                    "points in #REF",
                    [
                        "SELECT",
                        "quarters"
                    ]
                ],
                [
                    "SELECT",
                    "quarters"
                ]
            ],
            "is zero"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(quarters)"
            ],
            [
                "PARTIAL_GROUP_sum",
                [
                    "PARTIAL_SELECT_NUM",
                    "GET_QUESTION_SPAN(points in #REF)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is zero)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(quarters)"
            ],
            [
                "PARTIAL_SELECT_SINGLE_NUM",
                "GET_QUESTION_SPAN(points in #REF)"
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is zero)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0
                ],
                [
                    2
                ],
                [
                    1
                ],
                [
                    4,
                    5
                ],
                [],
                [],
                [
                    6
                ]
            ],
            "question_tokens": [
                "Which",
                "quarter",
                "were",
                "there",
                "no",
                "points",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [],
                [],
                [],
                [
                    1
                ],
                [
                    2
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    6
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0
                ],
                [],
                [],
                [],
                [
                    1
                ],
                [
                    5
                ],
                [
                    4
                ],
                [],
                [],
                [
                    6
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_373_eca0a640-20a2-4a86-b58a-1d6585f467ed",
        "question_text": "Who had more yards in touchdowns, Shaun Alexander or Vincent Jackson?",
        "split": "train",
        "decomposition": "return yards of touchdowns of  Shaun Alexander ;return yards of touchdowns of  Vincent Jackson ;return sum of #1 ;return sum of #2 ;return which is highest of #3 ,  #4",
        "program": [
            "SELECT['yards of touchdowns of Shaun Alexander']",
            "SELECT['yards of touchdowns of Vincent Jackson']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of touchdowns of Shaun Alexander"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of touchdowns of Vincent Jackson"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_sum_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdowns of Shaun Alexander)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdowns of Vincent Jackson)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_sum_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdowns of Shaun Alexander)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdowns of Vincent Jackson)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    6
                ],
                [
                    4
                ],
                [
                    5,
                    7,
                    9
                ],
                [
                    8,
                    11
                ],
                [
                    10,
                    12
                ]
            ],
            "question_tokens": [
                "Who",
                "had",
                "more",
                "yards",
                "in",
                "touchdowns",
                ",",
                "Shaun",
                "Alexander",
                "or",
                "Vincent",
                "Jackson",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    6
                ],
                [
                    4,
                    5
                ],
                [],
                [
                    7
                ],
                [
                    8,
                    9,
                    11
                ],
                [],
                [
                    10
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    6,
                    9
                ],
                [
                    1,
                    2,
                    3
                ],
                [
                    4
                ],
                [
                    7
                ],
                [],
                [
                    8,
                    11
                ],
                [
                    10
                ],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    11
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    11
                ],
                [
                    2,
                    3
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1838_2f70aca0-fbe1-43e1-8f0e-a448c3326430",
        "question_text": "How many yards difference was Matt Prater\u2019s first field goal compared to his second?",
        "split": "dev",
        "decomposition": "return yards of field goals of  Matt Prater ;return first of #1 ;return second of #1 ;return difference of #2 and  #3",
        "program": [
            "SELECT['yards of field goals of Matt Prater']",
            "AGGREGATE['min', '#1']",
            "PROJECT['second of #REF', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of field goals of Matt Prater"
                ]
            ],
            [
                "PROJECT",
                "second of #REF",
                [
                    "SELECT",
                    "yards of field goals of Matt Prater"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Matt Prater)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(second of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Matt Prater)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Matt Prater)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(second of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Matt Prater)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [],
                [
                    2,
                    4,
                    5,
                    8,
                    9,
                    10,
                    13,
                    14
                ],
                [
                    6
                ],
                [],
                [
                    7,
                    11,
                    12
                ],
                [],
                [],
                [],
                [
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "difference",
                "was",
                "Matt",
                "Prater",
                "\u2019s",
                "first",
                "field",
                "goal",
                "compared",
                "to",
                "his",
                "second",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [],
                [],
                [],
                [
                    2,
                    4,
                    9,
                    10,
                    13
                ],
                [],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [
                    7,
                    11
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    14
                ],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    2,
                    4,
                    14
                ],
                [
                    5,
                    8,
                    9,
                    10,
                    13
                ],
                [],
                [],
                [],
                [
                    6
                ],
                [
                    7,
                    11,
                    12
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    14
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    10
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3098_914a6cce-d742-4fe7-955d-5239797be8fc",
        "question_text": "How long were each of Andrew Luck' touchdowns?",
        "split": "train",
        "decomposition": "return touchdowns of Andrew Luck ;return How long were #1",
        "program": [
            "SELECT['touchdowns of Andrew Luck']",
            "PROJECT['How long were #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "How long were #REF",
            [
                "SELECT",
                "touchdowns of Andrew Luck"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(How long were #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdowns of Andrew Luck)"
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(How long were #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdowns of Andrew Luck)"
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    8
                ],
                [
                    5,
                    6
                ],
                [
                    4,
                    7
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "long",
                "were",
                "each",
                "of",
                "Andrew",
                "Luck",
                "'",
                "touchdowns",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    2
                ],
                [
                    1,
                    3
                ],
                [
                    4
                ],
                [],
                [
                    5
                ],
                [
                    6,
                    7,
                    8
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    4,
                    5,
                    8
                ],
                [],
                [
                    7
                ],
                [
                    6
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2559_bebb9557-f47b-4d0e-83fe-af51a50557b8",
        "question_text": "How many days did Brett's 30-game hitting streak last?",
        "split": "train",
        "decomposition": "return Brett 's 30-game hitting streak ;return days that #1 did last ;return number of  #2",
        "program": [
            "SELECT[\"Brett 's 30-game hitting streak\"]",
            "PROJECT['days that #REF did last', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "days that #REF did last",
                [
                    "SELECT",
                    "Brett 's 30-game hitting streak"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(days that #REF did last)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Brett 's 30-game hitting streak)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(days that #REF did last)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Brett 's 30-game hitting streak)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    5,
                    8
                ],
                [
                    9
                ],
                [
                    4,
                    6
                ],
                [
                    3,
                    7
                ],
                [
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "days",
                "did",
                "Brett",
                "'s",
                "30-game",
                "hitting",
                "streak",
                "last",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3
                ],
                [],
                [
                    4,
                    5
                ],
                [],
                [
                    7
                ],
                [
                    6
                ],
                [
                    8
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3
                ],
                [],
                [],
                [
                    5,
                    6,
                    9
                ],
                [
                    4,
                    8
                ],
                [
                    7
                ],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_799_2d73a870-57a6-4186-be9b-fb6c3a0ae3f1",
        "question_text": "How many years did the Japanese leaders use invasions to reinforce the justification for their annexation of korea?",
        "split": "train",
        "decomposition": "return years when  the  Japanese leaders use invasions to reinforce the justification for their annexation of korea ;return the  number of  #1",
        "program": [
            "SELECT['years when the Japanese leaders use invasions to reinforce the justification for their annexation of korea']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "years when the Japanese leaders use invasions to reinforce the justification for their annexation of korea"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years when the Japanese leaders use invasions to reinforce the justification for their annexation of korea)"
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Single_Event",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years when the Japanese leaders use invasions to reinforce the justification for their annexation of korea)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    6,
                    7,
                    8,
                    10,
                    13
                ],
                [
                    4,
                    5,
                    9,
                    11,
                    12,
                    14,
                    15,
                    16
                ],
                [
                    17,
                    18
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "did",
                "the",
                "Japanese",
                "leaders",
                "use",
                "invasions",
                "to",
                "reinforce",
                "the",
                "justification",
                "for",
                "their",
                "annexation",
                "of",
                "korea",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    6,
                    7
                ],
                [],
                [
                    5,
                    8,
                    9,
                    10,
                    11,
                    15
                ],
                [
                    12,
                    13,
                    14,
                    16
                ],
                [],
                [
                    17,
                    18
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    6
                ],
                [
                    7,
                    8,
                    10,
                    12,
                    13
                ],
                [
                    4,
                    9,
                    11,
                    15,
                    16
                ],
                [
                    5,
                    14
                ],
                [
                    17,
                    18
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    17
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    17
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    17
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    17
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    11,
                    17
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    17
                ],
                [
                    14,
                    17
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    15
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    17
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1904_91e15a40-7efa-49dd-a07b-57b9b831fb7e",
        "question_text": "How many more field goals did Janikowsk kick compared to Ryan Succop?",
        "split": "train",
        "decomposition": "return field goals that Janikowsk did kick ;return field goals that Ryan Succop did kick ;return number of  #1 ;return number of  #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['field goals that Janikowsk did kick']",
            "SELECT['field goals that Ryan Succop did kick']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals that Janikowsk did kick"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals that Ryan Succop did kick"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that Janikowsk did kick)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that Ryan Succop did kick)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that Janikowsk did kick)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that Ryan Succop did kick)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    8
                ],
                [
                    3,
                    4,
                    5
                ],
                [],
                [],
                [
                    6,
                    7
                ],
                [
                    9,
                    10,
                    11
                ],
                [
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "field",
                "goals",
                "did",
                "Janikowsk",
                "kick",
                "compared",
                "to",
                "Ryan",
                "Succop",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4
                ],
                [],
                [],
                [],
                [],
                [
                    6
                ],
                [],
                [
                    5,
                    7
                ],
                [],
                [
                    10
                ],
                [],
                [],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [],
                [],
                [
                    8,
                    10
                ],
                [
                    7
                ],
                [
                    11
                ],
                [],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2155_492069aa-1b9d-416a-b911-4775f816ff1d",
        "question_text": "Who booted highest total yards of field goals?",
        "split": "train",
        "decomposition": "return who  booted field goals ;return yards of field goals of  #1 ;return the  sum of #2 for each #1 ;return #1 where #3 is the  highest",
        "program": [
            "SELECT['who booted field goals']",
            "PROJECT['yards of field goals of #REF', '#1']",
            "GROUP['sum', '#2', '#1']",
            "COMPARATIVE['#1', '#3', 'is the highest']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "who booted field goals"
            ],
            [
                "GROUP_sum",
                [
                    "PROJECT",
                    "yards of field goals of #REF",
                    [
                        "SELECT",
                        "who booted field goals"
                    ]
                ],
                [
                    "SELECT",
                    "who booted field goals"
                ]
            ],
            "is the highest"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(who booted field goals)"
            ],
            [
                "PARTIAL_GROUP_sum",
                [
                    "PARTIAL_SELECT_NUM",
                    "GET_QUESTION_SPAN(yards of field goals of #REF)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is the highest)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(who booted field goals)"
            ],
            [
                "PARTIAL_GROUP_sum",
                [
                    "PARTIAL_SELECT_NUM",
                    "GET_QUESTION_SPAN(yards of field goals of #REF)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is the highest)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    3
                ],
                [
                    4
                ],
                [],
                [
                    5,
                    7
                ],
                [
                    8
                ]
            ],
            "question_tokens": [
                "Who",
                "booted",
                "highest",
                "total",
                "yards",
                "of",
                "field",
                "goals",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [
                    3
                ],
                [],
                [
                    4
                ],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [],
                [],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [],
                [
                    1
                ],
                [],
                [],
                [],
                [],
                [
                    3
                ],
                [
                    4
                ],
                [],
                [],
                [
                    7
                ],
                [
                    8
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    1,
                    7
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3219_ad6ab509-ecf6-4aa6-a19c-8eb65e7ca3e1",
        "question_text": "How many field goals that were shorter than 20 yards were scored in the game?",
        "split": "train",
        "decomposition": "return yards of field goals that were scored in  the  game ;return #1 that are less than 20 yards ;return the  number of  #2",
        "program": [
            "SELECT['yards of field goals that were scored in the game']",
            "FILTER['#1', 'that are less than 20 yards']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "yards of field goals that were scored in the game"
                ],
                "that are less than 20 yards"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals that were scored in the game)"
                ],
                "GET_QUESTION_SPAN(that are less than 20 yards)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_LT",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals that were scored in the game)"
                ],
                "GET_QUESTION_NUMBER(20)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    4,
                    5,
                    6,
                    7,
                    10
                ],
                [
                    12,
                    13
                ],
                [
                    15
                ],
                [
                    8,
                    9,
                    11,
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "field",
                "goals",
                "that",
                "were",
                "shorter",
                "than",
                "20",
                "yards",
                "were",
                "scored",
                "in",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    4,
                    5,
                    6,
                    7
                ],
                [],
                [],
                [
                    12
                ],
                [],
                [
                    8,
                    9,
                    10,
                    11
                ],
                [
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    8
                ],
                [
                    4,
                    5,
                    6,
                    7,
                    10,
                    11
                ],
                [
                    12
                ],
                [],
                [
                    15
                ],
                [
                    9,
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    9
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    14
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1220_dd0656a4-c92f-4f3b-a744-63208599223f",
        "question_text": "How many 17-yard touchdowns were scored in the game?",
        "split": "train",
        "decomposition": "return touchdowns in  the  game ;return #1 that were 17-yard ;return number of  #2",
        "program": [
            "SELECT['touchdowns in the game']",
            "FILTER['#1', 'that were 17-yard']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "touchdowns in the game"
                ],
                "that were 17-yard"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns in the game)"
                ],
                "GET_QUESTION_SPAN(that were 17-yard)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_EQ",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns in the game)"
                ],
                "GET_QUESTION_NUMBER(17)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [
                    2
                ],
                [
                    6,
                    7
                ],
                [
                    9
                ],
                [
                    4,
                    5,
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "17-yard",
                "touchdowns",
                "were",
                "scored",
                "in",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [],
                [
                    2
                ],
                [
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [
                    4
                ],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [
                    2,
                    4
                ],
                [],
                [
                    6
                ],
                [],
                [
                    9
                ],
                [
                    5,
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2803_7a632d2c-72f4-4035-be8b-217291abe1b3",
        "question_text": "How many yards was Ryan Tannehill's longest touchdown pass?",
        "split": "train",
        "decomposition": "return yards of touchdown passes of  Ryan Tannehill ;return longest of #1",
        "program": [
            "SELECT['yards of touchdown passes of Ryan Tannehill']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "yards of touchdown passes of Ryan Tannehill"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdown passes of Ryan Tannehill)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdown passes of Ryan Tannehill)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9
                ],
                [],
                [
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "Ryan",
                "Tannehill",
                "'s",
                "longest",
                "touchdown",
                "pass",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    6,
                    7,
                    8,
                    9
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    5
                ],
                [
                    6,
                    7,
                    8,
                    9
                ],
                [],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1904_0d5c6719-e2c9-44b4-bbe7-c2d48d6031c0",
        "question_text": "What player kicked the least field goals?",
        "split": "train",
        "decomposition": "return field goals ;return players who  kicked #1 ;return the  number of  #1 for each #2 ;return #2 where #3 is the  lowest",
        "program": [
            "SELECT['field goals']",
            "PROJECT['players who kicked #REF', '#1']",
            "GROUP['count', '#1', '#2']",
            "COMPARATIVE['#2', '#3', 'is the lowest']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "PROJECT",
                "players who kicked #REF",
                [
                    "SELECT",
                    "field goals"
                ]
            ],
            [
                "GROUP_count",
                [
                    "SELECT",
                    "field goals"
                ],
                [
                    "PROJECT",
                    "players who kicked #REF",
                    [
                        "SELECT",
                        "field goals"
                    ]
                ]
            ],
            "is the lowest"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(players who kicked #REF)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(field goals)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is the lowest)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(players who kicked #REF)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(field goals)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is the lowest)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0
                ],
                [],
                [],
                [
                    1,
                    2
                ],
                [
                    4,
                    5,
                    6
                ],
                [],
                [],
                [
                    7
                ]
            ],
            "question_tokens": [
                "What",
                "player",
                "kicked",
                "the",
                "least",
                "field",
                "goals",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    1,
                    2
                ],
                [],
                [
                    4,
                    5,
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [],
                [
                    1
                ],
                [],
                [],
                [],
                [
                    2
                ],
                [
                    4,
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    7
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2174_b9d8733a-3c3c-453e-a064-bc9184476fa9",
        "question_text": "How many yards was the games longest field goal?",
        "split": "train",
        "decomposition": "return yards of field goals in  the  game ;return the  longest of #1",
        "program": [
            "SELECT['yards of field goals in the game']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "yards of field goals in the game"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals in the game)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals in the game)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    5
                ],
                [
                    2,
                    3,
                    6,
                    7,
                    8
                ],
                [
                    4
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "the",
                "games",
                "longest",
                "field",
                "goal",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    5
                ],
                [],
                [
                    2,
                    3,
                    6,
                    7,
                    8
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    5
                ],
                [],
                [
                    2,
                    3,
                    8
                ],
                [
                    6,
                    7
                ],
                [],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_744_3b73177f-950b-483c-9291-67cbe93b3fe7",
        "question_text": "How many percent of seats did Sinn Fein not win outside of Ulster?",
        "split": "train",
        "decomposition": "return percent of seats that Sinn Fein win outside of  Ulster ;return the  difference of 100 percent and  #1",
        "program": [
            "SELECT['percent of seats that Sinn Fein win outside of Ulster']",
            "PROJECT['the difference of 100 percent and #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "the difference of 100 percent and #REF",
            [
                "SELECT",
                "percent of seats that Sinn Fein win outside of Ulster"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the difference of 100 percent and #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(percent of seats that Sinn Fein win outside of Ulster)"
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            "SELECT_IMPLICIT_NUM(100)",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent of seats that Sinn Fein win outside of Ulster)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    6,
                    7,
                    8,
                    10,
                    11
                ],
                [
                    4
                ],
                [
                    5
                ],
                [
                    9,
                    12,
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "percent",
                "of",
                "seats",
                "did",
                "Sinn",
                "Fein",
                "not",
                "win",
                "outside",
                "of",
                "Ulster",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    8
                ],
                [
                    5
                ],
                [
                    4
                ],
                [
                    6,
                    7
                ],
                [],
                [
                    9,
                    11
                ],
                [
                    10
                ],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    6,
                    7,
                    8,
                    11
                ],
                [
                    4,
                    5
                ],
                [
                    10
                ],
                [],
                [
                    9
                ],
                [
                    12,
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    4
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    12
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1182_d671d33c-ea80-49ee-9288-dd102f3de789",
        "question_text": "What happened first, resolution 2758 being passed, or United Nationals General Assembly Resolution 505 being passed?",
        "split": "train",
        "decomposition": "return when  was  resolution 2758 passed ;return when  was  United Nationals General Assembly Resolution 505 passed ;return which is the  lowest of #1 ,  #2",
        "program": [
            "SELECT['when was resolution 2758 passed']",
            "SELECT['when was United Nationals General Assembly Resolution 505 passed']",
            "COMPARISON['min', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "when was resolution 2758 passed"
            ],
            [
                "SELECT",
                "when was United Nationals General Assembly Resolution 505 passed"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was resolution 2758 passed)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was United Nationals General Assembly Resolution 505 passed)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was resolution 2758 passed)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was United Nationals General Assembly Resolution 505 passed)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    8,
                    9,
                    16
                ],
                [
                    7,
                    10
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    14,
                    15,
                    17
                ],
                [
                    18
                ]
            ],
            "question_tokens": [
                "What",
                "happened",
                "first",
                ",",
                "resolution",
                "2758",
                "being",
                "passed",
                ",",
                "or",
                "United",
                "Nationals",
                "General",
                "Assembly",
                "Resolution",
                "505",
                "being",
                "passed",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    6,
                    8,
                    16
                ],
                [
                    4,
                    7
                ],
                [
                    5
                ],
                [
                    9
                ],
                [],
                [
                    10,
                    11,
                    17
                ],
                [
                    12
                ],
                [],
                [
                    13,
                    14,
                    15
                ],
                [
                    18
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    3,
                    8,
                    9,
                    10
                ],
                [
                    1,
                    2,
                    4,
                    5,
                    6,
                    16
                ],
                [],
                [],
                [
                    11
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    15
                ],
                [
                    18
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    15
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    17
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_871_5bb69d8f-a3b3-41f7-8c0a-9b22e9fbea73",
        "question_text": "How many years passed between the National Labor Union foundation and the dissolvation of the Union?",
        "split": "train",
        "decomposition": "return year of the  foundation of  the   National Labor Union ;return year of the  dissolvation of  the   National Labor Union ;return the  difference of #2 and  #1",
        "program": [
            "SELECT['year of the foundation of the National Labor Union']",
            "SELECT['year of the dissolvation of the National Labor Union']",
            "ARITHMETIC['difference', '#2', '#1']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "year of the dissolvation of the National Labor Union"
            ],
            [
                "SELECT",
                "year of the foundation of the National Labor Union"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year of the dissolvation of the National Labor Union)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year of the foundation of the National Labor Union)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Two_Events",
            [
                "SELECT",
                "GET_QUESTION_SPAN(year of the dissolvation of the National Labor Union)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(year of the foundation of the National Labor Union)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    10
                ],
                [
                    5,
                    6,
                    7,
                    9
                ],
                [
                    8
                ],
                [
                    11,
                    12,
                    13,
                    14
                ],
                [
                    15,
                    16
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "passed",
                "between",
                "the",
                "National",
                "Labor",
                "Union",
                "foundation",
                "and",
                "the",
                "dissolvation",
                "of",
                "the",
                "Union",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    4
                ],
                [],
                [
                    5,
                    6
                ],
                [],
                [
                    7,
                    8
                ],
                [
                    9
                ],
                [
                    11
                ],
                [
                    13,
                    14
                ],
                [
                    12,
                    15
                ],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4
                ],
                [
                    10,
                    13
                ],
                [
                    9
                ],
                [
                    6,
                    7
                ],
                [
                    8
                ],
                [
                    12
                ],
                [],
                [
                    15,
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    15
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    15
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    15
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    11,
                    15
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    15
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    15
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_650_400d399f-2c7c-42b6-bb13-336ea9262e48",
        "question_text": "Which player scored more field goals, Dave Rayner or Jason Elam?",
        "split": "train",
        "decomposition": "return field goals of Dave Rayner ;return field goals of Jason Elam ;return number of  #1 ;return number of  #2 ;return which is highest of #3 ,  #4",
        "program": [
            "SELECT['field goals of Dave Rayner']",
            "SELECT['field goals of Jason Elam']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals of Dave Rayner"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals of Jason Elam"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals of Dave Rayner)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals of Jason Elam)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals of Dave Rayner)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals of Jason Elam)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    9
                ],
                [],
                [
                    7,
                    8
                ],
                [
                    10,
                    11
                ],
                [
                    12
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "scored",
                "more",
                "field",
                "goals",
                ",",
                "Dave",
                "Rayner",
                "or",
                "Jason",
                "Elam",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [
                    7
                ],
                [],
                [
                    9,
                    10
                ],
                [
                    8
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    6,
                    9
                ],
                [
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [
                    7,
                    8
                ],
                [],
                [
                    10,
                    11
                ],
                [],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2761_cf02f056-835d-4777-b3be-e8b228ef1f09",
        "question_text": "How many touchdowns were between the range of 1-yard and 5-yards?",
        "split": "train",
        "decomposition": "return touchdowns that were at least 1-yard ;return #1 that were at most 5-yards ;return the  number of  #2",
        "program": [
            "SELECT['touchdowns that were at least 1-yard']",
            "FILTER['#1', 'that were at most 5-yards']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "touchdowns that were at least 1-yard"
                ],
                "that were at most 5-yards"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns that were at least 1-yard)"
                ],
                "GET_QUESTION_SPAN(that were at most 5-yards)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_LT_EQ",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns that were at least 1-yard)"
                ],
                "GET_QUESTION_NUMBER(5)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    8
                ],
                [
                    2,
                    4,
                    6,
                    9
                ],
                [
                    5,
                    7
                ],
                [
                    11
                ],
                [
                    3,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "touchdowns",
                "were",
                "between",
                "the",
                "range",
                "of",
                "1-yard",
                "and",
                "5-yards",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    4
                ],
                [
                    6
                ],
                [],
                [
                    7,
                    8
                ],
                [],
                [
                    3,
                    10
                ],
                [
                    9
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    8
                ],
                [
                    3
                ],
                [
                    4,
                    6,
                    9
                ],
                [],
                [],
                [
                    11
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2560_e8f91b67-ce5d-416a-b9b1-3d7940d1c55d",
        "question_text": "How many 40+ yard field goals were made in the game?",
        "split": "train",
        "decomposition": "return field goals that were made in  the game ;return #1 that were 40+ yard ;return number of  #2",
        "program": [
            "SELECT['field goals that were made in the game']",
            "FILTER['#1', 'that were 40+ yard']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "field goals that were made in the game"
                ],
                "that were 40+ yard"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that were made in the game)"
                ],
                "GET_QUESTION_SPAN(that were 40+ yard)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_GT",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that were made in the game)"
                ],
                "GET_QUESTION_NUMBER(40+)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [
                    9,
                    10
                ],
                [
                    12
                ],
                [
                    7,
                    8,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "40",
                "+",
                "yard",
                "field",
                "goals",
                "were",
                "made",
                "in",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [],
                [
                    9
                ],
                [],
                [
                    7,
                    8
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    4,
                    5,
                    6,
                    7
                ],
                [
                    2,
                    3,
                    8
                ],
                [
                    9
                ],
                [],
                [
                    12
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2987_30c4ab7b-3aff-4a7d-8281-2c3839aec3e0",
        "question_text": "How many yards difference exists between Gostkowski's longest and shortest field goal?",
        "split": "train",
        "decomposition": "return yards of field goals of  Gostkowski ;return longest of #1 ;return shortest of #1 ;return difference of #2 and  #3",
        "program": [
            "SELECT['yards of field goals of Gostkowski']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['min', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of field goals of Gostkowski"
                ]
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of field goals of Gostkowski"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Gostkowski)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Gostkowski)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Gostkowski)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Gostkowski)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [
                    5
                ],
                [
                    2,
                    4,
                    7,
                    8
                ],
                [
                    6
                ],
                [],
                [
                    9
                ],
                [
                    10,
                    11,
                    12
                ],
                [],
                [
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "difference",
                "exists",
                "between",
                "Gostkowski",
                "'s",
                "longest",
                "and",
                "shortest",
                "field",
                "goal",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    8
                ],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [
                    5,
                    9
                ],
                [],
                [
                    7,
                    10,
                    11,
                    12
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3,
                    5
                ],
                [],
                [],
                [
                    2,
                    4
                ],
                [
                    7,
                    8
                ],
                [],
                [],
                [],
                [
                    6
                ],
                [
                    9
                ],
                [],
                [
                    10,
                    11,
                    12
                ],
                [],
                [],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    12
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    12
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_183_ef898458-df88-4143-bd76-c9908cdaac4e",
        "question_text": "Which quarterback threw for fewer passing yards?",
        "split": "train",
        "decomposition": "return quarterbacks ;return passing yards of #1 ;return the  sum of #2 for each #1 ;return #1 where #3 is the  lowest",
        "program": [
            "SELECT['quarterbacks']",
            "PROJECT['passing yards of #REF', '#1']",
            "GROUP['sum', '#2', '#1']",
            "COMPARATIVE['#1', '#3', 'is the lowest']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "quarterbacks"
            ],
            [
                "GROUP_sum",
                [
                    "PROJECT",
                    "passing yards of #REF",
                    [
                        "SELECT",
                        "quarterbacks"
                    ]
                ],
                [
                    "SELECT",
                    "quarterbacks"
                ]
            ],
            "is the lowest"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(quarterbacks)"
            ],
            [
                "PARTIAL_GROUP_sum",
                [
                    "PARTIAL_SELECT_NUM",
                    "GET_QUESTION_SPAN(passing yards of #REF)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is the lowest)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(quarterbacks)"
            ],
            [
                "PARTIAL_SELECT_SINGLE_NUM",
                "GET_QUESTION_SPAN(passing yards of #REF)"
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is the lowest)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3
                ],
                [],
                [
                    4,
                    5
                ],
                [],
                [
                    6
                ],
                [
                    7
                ]
            ],
            "question_tokens": [
                "Which",
                "quarterback",
                "threw",
                "for",
                "fewer",
                "passing",
                "yards",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [],
                [],
                [
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [
                    4,
                    5
                ],
                [
                    6
                ],
                [],
                [],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [
                    4
                ],
                [],
                [],
                [],
                [
                    6,
                    7
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1454_e37fc969-eb1e-44bb-8a67-0cc2b92f58e2",
        "question_text": "How many yards was Willis McGahee's longest touchdown run?",
        "split": "dev",
        "decomposition": "return yards of touchdown runs of  Willis McGahee ;return the  longest of #1",
        "program": [
            "SELECT['yards of touchdown runs of Willis McGahee']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "yards of touchdown runs of Willis McGahee"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdown runs of Willis McGahee)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdown runs of Willis McGahee)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9
                ],
                [],
                [
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "Willis",
                "McGahee",
                "'s",
                "longest",
                "touchdown",
                "run",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    6,
                    7,
                    8
                ],
                [
                    4,
                    5
                ],
                [],
                [],
                [],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    9
                ],
                [
                    6,
                    7,
                    8
                ],
                [],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1960_f3d3ea78-99d0-41e6-93f9-990022f3d756",
        "question_text": "Which groups are at least 10000 through 35000 in size?",
        "split": "train",
        "decomposition": "return groups ;return #1 where the  size is 10000 through 35000",
        "program": [
            "SELECT['groups']",
            "FILTER['#1', 'where the size is 10000 through 35000']"
        ],
        "nested_expression": [
            "FILTER",
            [
                "SELECT",
                "groups"
            ],
            "where the size is 10000 through 35000"
        ],
        "typed_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(groups)"
            ],
            "GET_QUESTION_SPAN(where the size is 10000 through 35000)"
        ],
        "drop_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(groups)"
            ],
            "GET_QUESTION_SPAN(where the size is 10000 through 35000)"
        ],
        "operators": [
            "select",
            "filter"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    4,
                    8
                ],
                [
                    2,
                    3,
                    5,
                    6
                ],
                [
                    7
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "Which",
                "groups",
                "are",
                "at",
                "least",
                "10000",
                "through",
                "35000",
                "in",
                "size",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [],
                [
                    3,
                    4,
                    5,
                    6,
                    7
                ],
                [],
                [
                    8
                ],
                [
                    9,
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    2
                ],
                [
                    1
                ],
                [
                    4,
                    5,
                    8
                ],
                [
                    6
                ],
                [
                    3
                ],
                [
                    7,
                    9
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_882_08dfd977-1128-4a04-aa07-94849a78178b",
        "question_text": "Did the Redskins score in the final two minutes of the game?",
        "split": "train",
        "decomposition": "return score of the final two minutes of  the   game ;return if the   Redskins score in  #1",
        "program": [
            "SELECT['score of the final two minutes of the game']",
            "BOOLEAN['#1', 'if the Redskins score in #REF']"
        ],
        "nested_expression": [
            "BOOLEAN",
            [
                "SELECT",
                "score of the final two minutes of the game"
            ],
            "if the Redskins score in #REF"
        ],
        "typed_nested_expression": [
            "BOOLEAN",
            [
                "SELECT",
                "GET_QUESTION_SPAN(score of the final two minutes of the game)"
            ],
            "GET_QUESTION_SPAN(if the Redskins score in #REF)"
        ],
        "drop_nested_expression": [
            "BOOLEAN",
            [
                "SELECT",
                "GET_QUESTION_SPAN(score of the final two minutes of the game)"
            ],
            "GET_QUESTION_SPAN(if the Redskins score in #REF)"
        ],
        "operators": [
            "select",
            "boolean"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2
                ],
                [
                    1,
                    3,
                    4,
                    5,
                    7,
                    9,
                    10
                ],
                [
                    6,
                    8
                ],
                [
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "Did",
                "the",
                "Redskins",
                "score",
                "in",
                "the",
                "final",
                "two",
                "minutes",
                "of",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    2
                ],
                [],
                [
                    3,
                    5
                ],
                [
                    4,
                    6,
                    7
                ],
                [
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    11,
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    9
                ],
                [],
                [
                    3,
                    4,
                    5,
                    7,
                    10
                ],
                [],
                [
                    6,
                    8,
                    11
                ],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    11
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    11
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_3799_fe889d86-f79d-4cf1-b14a-bb2c064e7720",
        "question_text": "Which candidates in the primary did not make it to the runoff?",
        "split": "train",
        "decomposition": "return the  candidates in  the primary ;return #1 that make it to the  runoff ;return #1 besides  #2",
        "program": [
            "SELECT['the candidates in the primary']",
            "FILTER['#1', 'that make it to the runoff']",
            "DISCARD['#1', '#2']"
        ],
        "nested_expression": [
            "DISCARD",
            [
                "SELECT",
                "the candidates in the primary"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "the candidates in the primary"
                ],
                "that make it to the runoff"
            ]
        ],
        "typed_nested_expression": [
            "DISCARD",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the candidates in the primary)"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the candidates in the primary)"
                ],
                "GET_QUESTION_SPAN(that make it to the runoff)"
            ]
        ],
        "drop_nested_expression": [
            "DISCARD",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the candidates in the primary)"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the candidates in the primary)"
                ],
                "GET_QUESTION_SPAN(that make it to the runoff)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "discard"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    6
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    7
                ],
                [
                    0,
                    2
                ],
                [
                    8,
                    9,
                    10
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "question_tokens": [
                "Which",
                "candidates",
                "in",
                "the",
                "primary",
                "did",
                "not",
                "make",
                "it",
                "to",
                "the",
                "runoff",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    6
                ],
                [],
                [],
                [
                    2
                ],
                [
                    4
                ],
                [
                    5
                ],
                [],
                [
                    8
                ],
                [],
                [
                    9
                ],
                [
                    7
                ],
                [],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [],
                [
                    1,
                    6
                ],
                [],
                [
                    7
                ],
                [
                    4
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    4
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1970_7ce533cd-f0a4-4591-9937-491449557357",
        "question_text": "Were there fewer White people of African American people?",
        "split": "train",
        "decomposition": "return White people ;return number of  #1 ;return African American people ;return number of  #3 ;return which was  lowest of #2 ,  #4",
        "program": [
            "SELECT['White people']",
            "AGGREGATE['count', '#1']",
            "SELECT['African American people']",
            "AGGREGATE['count', '#3']",
            "COMPARISON['min', '#2', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "White people"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "African American people"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(White people)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(African American people)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(White people)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(African American people)"
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "select",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4,
                    8
                ],
                [
                    3,
                    5
                ],
                [
                    7
                ],
                [
                    6
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "Were",
                "there",
                "fewer",
                "White",
                "people",
                "of",
                "African",
                "American",
                "people",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [
                    6
                ],
                [
                    4,
                    8
                ],
                [
                    5
                ],
                [],
                [
                    7
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0,
                    1
                ],
                [
                    2,
                    4,
                    8
                ],
                [
                    3
                ],
                [
                    6
                ],
                [],
                [],
                [
                    7
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    4
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1507_6eeec172-1369-48e5-8b84-95e0c0f3cfc2",
        "question_text": "How many yards longer was Ryan Longwell's longest field goal compared to Steven Hauschka's only successful field goal?",
        "split": "train",
        "decomposition": "return yards of field goals of  Ryan Longwell ;return longest of #1 ;return yards of Steven Hauschka 's  only successful field goal  ;return difference of #2 and  #3",
        "program": [
            "SELECT['yards of field goals of Ryan Longwell']",
            "AGGREGATE['max', '#1']",
            "SELECT[\"yards of Steven Hauschka 's only successful field goal\"]",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of field goals of Ryan Longwell"
                ]
            ],
            [
                "SELECT",
                "yards of Steven Hauschka 's only successful field goal"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Ryan Longwell)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of Steven Hauschka 's only successful field goal)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Ryan Longwell)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of Steven Hauschka 's only successful field goal)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    15,
                    18,
                    19
                ],
                [
                    13
                ],
                [
                    14
                ],
                [
                    11,
                    12
                ],
                [
                    16,
                    17
                ],
                [
                    20
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "Ryan",
                "Longwell",
                "'s",
                "longest",
                "field",
                "goal",
                "compared",
                "to",
                "Steven",
                "Hauschka",
                "'s",
                "only",
                "successful",
                "field",
                "goal",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    15,
                    19
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [
                    14
                ],
                [
                    13
                ],
                [
                    16,
                    17
                ],
                [],
                [],
                [
                    20
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    2,
                    4,
                    5,
                    10,
                    19
                ],
                [
                    6,
                    7,
                    8,
                    9,
                    15,
                    18
                ],
                [
                    13
                ],
                [],
                [
                    14
                ],
                [],
                [
                    11,
                    12
                ],
                [
                    16
                ],
                [
                    17
                ],
                [
                    20
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    19
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    19
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    15
                ],
                [
                    13,
                    19
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    20,
                    20
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_817_470c4420-4273-4f4c-a048-f123887d0ad8",
        "question_text": "How were Palaris' advisers executed?",
        "split": "train",
        "decomposition": "return advisers of Palaris ;return How were #1 executed",
        "program": [
            "SELECT['advisers of Palaris']",
            "PROJECT['How were #REF executed', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "How were #REF executed",
            [
                "SELECT",
                "advisers of Palaris"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(How were #REF executed)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(advisers of Palaris)"
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(How were #REF executed)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(advisers of Palaris)"
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4,
                    5
                ],
                [
                    6
                ]
            ],
            "question_tokens": [
                "How",
                "were",
                "Palaris",
                "'",
                "advisers",
                "executed",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2
                ],
                [
                    3
                ],
                [
                    4
                ],
                [
                    5
                ],
                [
                    6
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    2
                ],
                [],
                [
                    3,
                    4,
                    5
                ],
                [],
                [
                    6
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    3
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1847_127c65e3-6f4e-48ca-9d32-8d1ab041e82e",
        "question_text": "How many total yards were all the field goals in the first quarter?",
        "split": "train",
        "decomposition": "return yards of first quarter field goals ;return sum of #1",
        "program": [
            "SELECT['yards of first quarter field goals']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "yards of first quarter field goals"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of first quarter field goals)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of first quarter field goals)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    7,
                    8
                ],
                [
                    6,
                    9,
                    10
                ],
                [
                    11,
                    12,
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "total",
                "yards",
                "were",
                "all",
                "the",
                "field",
                "goals",
                "in",
                "the",
                "first",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    5,
                    7,
                    8
                ],
                [
                    4
                ],
                [
                    6
                ],
                [
                    9,
                    10,
                    11
                ],
                [],
                [
                    12,
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    4,
                    7
                ],
                [
                    2,
                    3,
                    5,
                    8
                ],
                [
                    6,
                    9,
                    10
                ],
                [],
                [
                    11,
                    12,
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    12
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    12
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_904_9c31509e-124f-449c-a490-d1471afa235e",
        "question_text": "How many yards was the longest touch down of the first two quarters?",
        "split": "train",
        "decomposition": "return yards of touch down of  the  first two quarters ;return longest of #1",
        "program": [
            "SELECT['yards of touch down of the first two quarters']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "yards of touch down of the first two quarters"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touch down of the first two quarters)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touch down of the first two quarters)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    5,
                    6,
                    11
                ],
                [
                    4,
                    8,
                    9
                ],
                [
                    7,
                    10,
                    12,
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "the",
                "longest",
                "touch",
                "down",
                "of",
                "the",
                "first",
                "two",
                "quarters",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    5,
                    11
                ],
                [],
                [
                    8
                ],
                [
                    6,
                    7,
                    9,
                    10
                ],
                [],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    6
                ],
                [],
                [
                    2,
                    3
                ],
                [
                    5,
                    11
                ],
                [
                    8
                ],
                [
                    7
                ],
                [
                    10,
                    12,
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    12
                ],
                [
                    4,
                    12
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    12
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1959_b510bfa4-0657-4787-9881-eb26c4411d88",
        "question_text": "How many percent of people were not Hispanic of any race?",
        "split": "dev",
        "decomposition": "return percent of people that were Hispanic of  any race ;return difference of 100 and  #1",
        "program": [
            "SELECT['percent of people that were Hispanic of any race']",
            "PROJECT['difference of 100 and #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "difference of 100 and #REF",
            [
                "SELECT",
                "percent of people that were Hispanic of any race"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(difference of 100 and #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(percent of people that were Hispanic of any race)"
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            "SELECT_IMPLICIT_NUM(100)",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent of people that were Hispanic of any race)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8
                ],
                [
                    10
                ],
                [],
                [
                    9,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "percent",
                "of",
                "people",
                "were",
                "not",
                "Hispanic",
                "of",
                "any",
                "race",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    6
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [
                    8,
                    9
                ],
                [
                    7
                ],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    8
                ],
                [],
                [
                    7,
                    10
                ],
                [],
                [],
                [
                    9,
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3417_c72f5217-5162-456e-9d82-8254f95377a2",
        "question_text": "Which team had the shorter touchdown pass in the second quarter?",
        "split": "train",
        "decomposition": "return touchdown passes in  the  second quarter ;return the  shorter of #1 ;return which team had #2",
        "program": [
            "SELECT['touchdown passes in the second quarter']",
            "PROJECT['the shorter of #REF', '#1']",
            "PROJECT['which team had #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "which team had #REF",
            [
                "PROJECT",
                "the shorter of #REF",
                [
                    "SELECT",
                    "touchdown passes in the second quarter"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(which team had #REF)",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(the shorter of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes in the second quarter)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(which team had #REF)",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(the shorter of #REF)",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(touchdown passes)"
                    ],
                    "GET_QUESTION_SPAN(in the second quarter)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2
                ],
                [],
                [
                    3,
                    4,
                    5,
                    6,
                    8
                ],
                [],
                [
                    1,
                    7,
                    9,
                    10
                ],
                [],
                [],
                [
                    11
                ]
            ],
            "question_tokens": [
                "Which",
                "team",
                "had",
                "the",
                "shorter",
                "touchdown",
                "pass",
                "in",
                "the",
                "second",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [],
                [],
                [
                    2,
                    5
                ],
                [],
                [
                    4
                ],
                [
                    1,
                    10
                ],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    9
                ],
                [],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [],
                [],
                [],
                [
                    4,
                    5,
                    6
                ],
                [],
                [],
                [
                    7,
                    9,
                    10
                ],
                [],
                [],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    10
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2069_5434c7fa-2984-49cf-8606-e8ef4546ebbc",
        "question_text": "How many yards were ran in for touchdowns from all the players combined.",
        "split": "train",
        "decomposition": "return yards ran in  for touchdowns ;return sum of #1",
        "program": [
            "SELECT['yards ran in for touchdowns']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "yards ran in for touchdowns"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards ran in for touchdowns)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards ran in for touchdowns)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    7,
                    9,
                    12
                ],
                [
                    4,
                    5,
                    6,
                    8,
                    10,
                    11
                ],
                [
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "were",
                "ran",
                "in",
                "for",
                "touchdowns",
                "from",
                "all",
                "the",
                "players",
                "combined",
                "."
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    3
                ],
                [
                    1,
                    2,
                    7,
                    9,
                    12
                ],
                [
                    4,
                    11
                ],
                [
                    6
                ],
                [
                    5,
                    8,
                    10
                ],
                [],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3
                ],
                [
                    2,
                    7,
                    9,
                    12
                ],
                [
                    4,
                    5,
                    8,
                    10
                ],
                [
                    6
                ],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    12
                ],
                [
                    4,
                    12
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    12
                ],
                [
                    7,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    12
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1062_e3fc046c-7fb2-4bfe-9667-259b9ed658cd",
        "question_text": "What battle started last: Battle of Tsushima or Battle of Jutland?",
        "split": "train",
        "decomposition": "return when  the Battle of Tsushima started ;return when  the Battle of Jutland started ;return which  battle started last of #1 , #2",
        "program": [
            "SELECT['when the Battle of Tsushima started']",
            "SELECT['when the Battle of Jutland started']",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "when the Battle of Tsushima started"
            ],
            [
                "SELECT",
                "when the Battle of Jutland started"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when the Battle of Tsushima started)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when the Battle of Jutland started)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when the Battle of Tsushima started)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when the Battle of Jutland started)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    8,
                    9
                ],
                [
                    6
                ],
                [
                    7
                ],
                [
                    10
                ],
                [
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "What",
                "battle",
                "started",
                "last",
                ":",
                "Battle",
                "of",
                "Tsushima",
                "or",
                "Battle",
                "of",
                "Jutland",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    4
                ],
                [],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    10
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    8
                ],
                [
                    1,
                    2,
                    3,
                    4,
                    5,
                    9
                ],
                [],
                [
                    7
                ],
                [],
                [],
                [],
                [
                    11,
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    3
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    11
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2800_8eceb198-4d5f-4152-a192-7bf89a0bbfea",
        "question_text": "How many yards was the longest field goal attempt of the game?",
        "split": "train",
        "decomposition": "return yards of field goal attempts of  the  game ;return longest of #1",
        "program": [
            "SELECT['yards of field goal attempts of the game']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "yards of field goal attempts of the game"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goal attempts of the game)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goal attempts of the game)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    5,
                    6,
                    7
                ],
                [
                    4,
                    9,
                    10
                ],
                [
                    8,
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "the",
                "longest",
                "field",
                "goal",
                "attempt",
                "of",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    5,
                    6,
                    7
                ],
                [],
                [],
                [
                    8,
                    9
                ],
                [],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    6,
                    7
                ],
                [
                    5
                ],
                [
                    9
                ],
                [
                    8
                ],
                [
                    11,
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    11
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    11
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_38_76668357-aace-44ad-8057-a768e6779b11",
        "question_text": "How many passes did Steve McNair not complete?",
        "split": "train",
        "decomposition": "return passes of Steve McNair ;return passes that Steve McNair complete ;return the  number of  #1 ;return the  number of  #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['passes of Steve McNair']",
            "SELECT['passes that Steve McNair complete']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "passes of Steve McNair"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "passes that Steve McNair complete"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(passes of Steve McNair)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(passes that Steve McNair complete)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(passes of Steve McNair)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(passes that Steve McNair complete)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    4
                ],
                [],
                [
                    7
                ],
                [
                    5,
                    6
                ],
                [
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "passes",
                "did",
                "Steve",
                "McNair",
                "not",
                "complete",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [],
                [
                    1,
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    4
                ],
                [
                    3
                ],
                [
                    5
                ],
                [],
                [
                    6
                ],
                [
                    7
                ],
                [],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3
                ],
                [],
                [],
                [],
                [
                    4,
                    5
                ],
                [
                    7
                ],
                [],
                [],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    7
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2475_a0003abd-0825-4775-90d5-5d05a4154249",
        "question_text": "Which players mentioned to have scored at least 1 touchdown scored over 10 touchdowns?",
        "split": "train",
        "decomposition": "return players mentioned to have scored  at least 1 touchdown ;return #1 that scored  over 10 touchdowns",
        "program": [
            "SELECT['players mentioned to have scored at least 1 touchdown']",
            "FILTER['#1', 'that scored over 10 touchdowns']"
        ],
        "nested_expression": [
            "FILTER",
            [
                "SELECT",
                "players mentioned to have scored at least 1 touchdown"
            ],
            "that scored over 10 touchdowns"
        ],
        "typed_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(players mentioned to have scored at least 1 touchdown)"
            ],
            "GET_QUESTION_SPAN(that scored over 10 touchdowns)"
        ],
        "drop_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(players mentioned to have scored at least 1 touchdown)"
            ],
            "GET_QUESTION_SPAN(that scored over 10 touchdowns)"
        ],
        "operators": [
            "select",
            "filter"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    5,
                    7,
                    8,
                    10,
                    13
                ],
                [
                    3,
                    4,
                    6
                ],
                [
                    9,
                    11,
                    12
                ],
                [
                    14
                ]
            ],
            "question_tokens": [
                "Which",
                "players",
                "mentioned",
                "to",
                "have",
                "scored",
                "at",
                "least",
                "1",
                "touchdown",
                "scored",
                "over",
                "10",
                "touchdowns",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    5,
                    10,
                    13
                ],
                [],
                [
                    3,
                    4
                ],
                [
                    6,
                    7,
                    8,
                    9
                ],
                [],
                [
                    11,
                    12
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2,
                    5,
                    10,
                    13
                ],
                [
                    4,
                    7,
                    8
                ],
                [
                    3,
                    11
                ],
                [
                    6
                ],
                [
                    9,
                    12
                ],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    9
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1636_6d04dda9-f33a-482c-bda4-33bea21c62bc",
        "question_text": "Who gave homage to the king first, Blanche or Theobald IV?",
        "split": "train",
        "decomposition": "return when  Blanche gave homage to the  king ;return when  Theobald IV gave homage to the  king ;return which is the  lowest of #1 ,  #2",
        "program": [
            "SELECT['when Blanche gave homage to the king']",
            "SELECT['when Theobald IV gave homage to the king']",
            "COMPARISON['min', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "when Blanche gave homage to the king"
            ],
            [
                "SELECT",
                "when Theobald IV gave homage to the king"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when Blanche gave homage to the king)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when Theobald IV gave homage to the king)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when Blanche gave homage to the king)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when Theobald IV gave homage to the king)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    2,
                    6,
                    7,
                    9
                ],
                [
                    0,
                    3,
                    4
                ],
                [
                    5,
                    8
                ],
                [
                    10,
                    11
                ],
                [
                    12
                ]
            ],
            "question_tokens": [
                "Who",
                "gave",
                "homage",
                "to",
                "the",
                "king",
                "first",
                ",",
                "Blanche",
                "or",
                "Theobald",
                "IV",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    2,
                    6,
                    7
                ],
                [],
                [
                    3,
                    4
                ],
                [
                    5
                ],
                [],
                [],
                [
                    8,
                    9
                ],
                [
                    11
                ],
                [
                    10
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    7,
                    9
                ],
                [
                    1,
                    2,
                    6
                ],
                [
                    3
                ],
                [
                    5
                ],
                [
                    8
                ],
                [],
                [
                    10,
                    11
                ],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    11
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1889_08038371-0926-4d54-8183-ab5fc2923bb7",
        "question_text": "How many percentages of the ancestry were American and English combined?",
        "split": "train",
        "decomposition": "return percentage of the  ancestry that was  American ;return percentage of the  ancestry that was  English ;return sum of #1 and  #2",
        "program": [
            "SELECT['percentage of the ancestry that was American']",
            "SELECT['percentage of the ancestry that was English']",
            "ARITHMETIC['sum', '#1', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT",
                "percentage of the ancestry that was American"
            ],
            [
                "SELECT",
                "percentage of the ancestry that was English"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percentage of the ancestry that was American)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percentage of the ancestry that was English)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percentage of the ancestry that was American)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percentage of the ancestry that was English)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    6,
                    7,
                    8,
                    10
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    4
                ],
                [
                    5
                ],
                [],
                [],
                [
                    9,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "percentages",
                "of",
                "the",
                "ancestry",
                "were",
                "American",
                "and",
                "English",
                "combined",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    7,
                    8,
                    10
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [],
                [
                    5
                ],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [
                    9
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    6,
                    7,
                    8,
                    10
                ],
                [],
                [],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    9
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2204_85fd0af3-fff2-4adc-af76-092524720edb",
        "question_text": "How long were each of Dez Bryant's touchdown catches?",
        "split": "train",
        "decomposition": "return Dez Bryant 's touchdown catches ;return how long were each of  #1",
        "program": [
            "SELECT[\"Dez Bryant 's touchdown catches\"]",
            "PROJECT['how long were each of #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "how long were each of #REF",
            [
                "SELECT",
                "Dez Bryant 's touchdown catches"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(how long were each of #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(Dez Bryant 's touchdown catches)"
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(how long were each of #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(Dez Bryant 's touchdown catches)"
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    8
                ],
                [
                    5,
                    6
                ],
                [
                    4,
                    7
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "long",
                "were",
                "each",
                "of",
                "Dez",
                "Bryant",
                "'s",
                "touchdown",
                "catches",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    2
                ],
                [
                    1,
                    3
                ],
                [
                    4
                ],
                [
                    5,
                    9
                ],
                [],
                [
                    6,
                    7,
                    8
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    4,
                    7,
                    8
                ],
                [
                    5,
                    6
                ],
                [],
                [],
                [
                    9,
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2375_b84b65a8-6406-424d-b02f-c89e879c9fb5",
        "question_text": "How many total yards are the top two longest field goals combined?",
        "split": "train",
        "decomposition": "return yards of field goals ;return two longest of #1 ;return sum of #2",
        "program": [
            "SELECT['yards of field goals']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['sum', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of field goals"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    10,
                    11
                ],
                [
                    4,
                    6,
                    7,
                    8,
                    9
                ],
                [
                    5
                ],
                [
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "total",
                "yards",
                "are",
                "the",
                "top",
                "two",
                "longest",
                "field",
                "goals",
                "combined",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    10,
                    11
                ],
                [
                    4
                ],
                [
                    6,
                    7,
                    8,
                    9
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    10,
                    11
                ],
                [
                    4
                ],
                [
                    6,
                    7,
                    8,
                    9
                ],
                [],
                [],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    11
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2223_385f1a97-d579-44cb-bedd-bc8567e4d577",
        "question_text": "Which age distribution groups in percent are larger than 20%?",
        "split": "train",
        "decomposition": "return age distribution groups ;return percent of #1 ;return #1 where #2 is higher than 20 %",
        "program": [
            "SELECT['age distribution groups']",
            "PROJECT['percent of #REF', '#1']",
            "COMPARATIVE['#1', '#2', 'is higher than 20 %']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "age distribution groups"
            ],
            [
                "PROJECT",
                "percent of #REF",
                [
                    "SELECT",
                    "age distribution groups"
                ]
            ],
            "is higher than 20 %"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(age distribution groups)"
            ],
            [
                "PARTIAL_GROUP_sum",
                [
                    "PARTIAL_SELECT_NUM",
                    "GET_QUESTION_SPAN(percent of #REF)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is higher than 20 %)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(age distribution groups)"
            ],
            [
                "PARTIAL_SELECT_SINGLE_NUM",
                "GET_QUESTION_SPAN(percent of #REF)"
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is higher than 20 %)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [],
                [
                    6,
                    7
                ],
                [],
                [
                    4,
                    8,
                    9,
                    10
                ],
                [
                    11
                ]
            ],
            "question_tokens": [
                "Which",
                "age",
                "distribution",
                "groups",
                "in",
                "percent",
                "are",
                "larger",
                "than",
                "20",
                "%",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [],
                [
                    4
                ],
                [],
                [
                    5
                ],
                [
                    6
                ],
                [
                    7
                ],
                [],
                [],
                [
                    8,
                    9,
                    10
                ],
                [],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    5
                ],
                [
                    0,
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    7
                ],
                [],
                [],
                [
                    6
                ],
                [
                    10
                ],
                [],
                [
                    4,
                    8,
                    9
                ],
                [
                    11
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_871_55b80ae3-46e9-413d-8000-991ee50a5b11",
        "question_text": "In which quarter didTampa Bay not score?",
        "split": "train",
        "decomposition": "return quarters ;return #1 in  which Tampa Bay scores ;return #1 besides  #2",
        "program": [
            "SELECT['quarters']",
            "FILTER['#1', 'in which Tampa Bay scores']",
            "DISCARD['#1', '#2']"
        ],
        "nested_expression": [
            "DISCARD",
            [
                "SELECT",
                "quarters"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "quarters"
                ],
                "in which Tampa Bay scores"
            ]
        ],
        "typed_nested_expression": [
            "DISCARD",
            [
                "SELECT",
                "GET_QUESTION_SPAN(quarters)"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(quarters)"
                ],
                "GET_QUESTION_SPAN(in which Tampa Bay scores)"
            ]
        ],
        "drop_nested_expression": [
            "DISCARD",
            [
                "SELECT",
                "GET_QUESTION_SPAN(quarters)"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(quarters)"
                ],
                "GET_QUESTION_SPAN(in which Tampa Bay scores)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "discard"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    5,
                    6
                ],
                [],
                [
                    4
                ],
                [
                    2,
                    3
                ],
                [],
                [],
                [
                    7
                ]
            ],
            "question_tokens": [
                "In",
                "which",
                "quarter",
                "didTampa",
                "Bay",
                "not",
                "score",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    5
                ],
                [],
                [],
                [],
                [],
                [
                    3
                ],
                [
                    2,
                    6
                ],
                [],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [],
                [],
                [
                    0,
                    1,
                    5,
                    6
                ],
                [],
                [
                    4
                ],
                [],
                [
                    3
                ],
                [
                    2
                ],
                [],
                [],
                [],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1570_8ab1e32d-0542-49f9-b35d-841275e229ea",
        "question_text": "How many more yards in touchdowns did Ted Ginn, Jr. have compared to the total yards in field goals kicked?",
        "split": "train",
        "decomposition": "return yards  in  touchdowns of Ted Ginn Jr. ;return yards  of field goals kicked ;return sum of #1 ;return sum of #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['yards in touchdowns of Ted Ginn Jr.']",
            "SELECT['yards of field goals kicked']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards in touchdowns of Ted Ginn Jr."
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of field goals kicked"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards in touchdowns of Ted Ginn Jr.)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals kicked)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards in touchdowns of Ted Ginn Jr.)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals kicked)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    12
                ],
                [
                    3,
                    5,
                    6,
                    7,
                    8,
                    10
                ],
                [
                    4,
                    9,
                    13
                ],
                [],
                [
                    11,
                    15,
                    16,
                    18,
                    19
                ],
                [
                    14,
                    17,
                    20
                ],
                [
                    21
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "yards",
                "in",
                "touchdowns",
                "did",
                "Ted",
                "Ginn",
                ",",
                "Jr.",
                "have",
                "compared",
                "to",
                "the",
                "total",
                "yards",
                "in",
                "field",
                "goals",
                "kicked",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    5,
                    6
                ],
                [
                    7,
                    8
                ],
                [],
                [],
                [
                    10
                ],
                [],
                [],
                [
                    15,
                    16,
                    18,
                    19
                ],
                [],
                [],
                [
                    17,
                    20
                ],
                [],
                [],
                [
                    21
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [
                    3,
                    5,
                    6,
                    7,
                    8,
                    10
                ],
                [],
                [],
                [],
                [
                    11,
                    12,
                    18
                ],
                [
                    15,
                    16,
                    19,
                    20
                ],
                [],
                [],
                [
                    21
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    20
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    20
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    20
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    20
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    19
                ],
                [
                    14,
                    20
                ],
                [
                    14,
                    16
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    19
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    19
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    20,
                    20
                ],
                [
                    21,
                    21
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1157_a5b377d5-44c4-4c3a-87fc-1ff1ac2229fb",
        "question_text": "How many more field goals did Gostkowski make compared with Feely?",
        "split": "train",
        "decomposition": "return field goals that Gostkowski make ;return field goals that Feely make ;return number of  #1 ;return number of  #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['field goals that Gostkowski make']",
            "SELECT['field goals that Feely make']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals that Gostkowski make"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals that Feely make"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that Gostkowski make)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that Feely make)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that Gostkowski make)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that Feely make)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    8
                ],
                [
                    3,
                    4,
                    5
                ],
                [],
                [],
                [
                    6,
                    7
                ],
                [
                    10
                ],
                [
                    9,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "field",
                "goals",
                "did",
                "Gostkowski",
                "make",
                "compared",
                "with",
                "Feely",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4
                ],
                [],
                [],
                [
                    6
                ],
                [],
                [
                    7
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [
                    9
                ],
                [],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [
                    3,
                    4,
                    5
                ],
                [],
                [],
                [],
                [
                    8
                ],
                [
                    6,
                    7
                ],
                [],
                [
                    9,
                    10
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_950_f5f43ef2-11ab-407a-acf7-738eb38ead1b",
        "question_text": "Which kicker made the longest field goal of the game?",
        "split": "train",
        "decomposition": "return longest field goal of the  game ;return kicker that made #1",
        "program": [
            "SELECT['longest field goal of the game']",
            "PROJECT['kicker that made #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "kicker that made #REF",
            [
                "SELECT",
                "longest field goal of the game"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(kicker that made #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(longest field goal of the game)"
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(kicker that made #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(longest field goal of the game)"
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    8
                ],
                [],
                [
                    7
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "Which",
                "kicker",
                "made",
                "the",
                "longest",
                "field",
                "goal",
                "of",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    4
                ],
                [
                    3
                ],
                [
                    5
                ],
                [],
                [
                    7,
                    8
                ],
                [
                    6,
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    4,
                    5,
                    6,
                    7,
                    8
                ],
                [],
                [],
                [],
                [
                    9,
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1235_38d0e403-f62d-4cc4-bbcf-ce6ca1de6c2f",
        "question_text": "How many years after the Constitution of Ireland was adopted was the Good Friday Agreement?",
        "split": "train",
        "decomposition": "return year the  Constitution of Ireland was  adopted ;return year the  Good Friday Agreement was  adopted ;return difference of #1 and  #2",
        "program": [
            "SELECT['year the Constitution of Ireland was adopted']",
            "SELECT['year the Good Friday Agreement was adopted']",
            "ARITHMETIC['difference', '#1', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "year the Constitution of Ireland was adopted"
            ],
            [
                "SELECT",
                "year the Good Friday Agreement was adopted"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year the Constitution of Ireland was adopted)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year the Good Friday Agreement was adopted)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Two_Events",
            [
                "SELECT",
                "GET_QUESTION_SPAN(year the Constitution of Ireland was adopted)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(year the Good Friday Agreement was adopted)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5
                ],
                [
                    4,
                    6,
                    7,
                    8
                ],
                [
                    9
                ],
                [
                    10,
                    11,
                    12
                ],
                [
                    13,
                    14,
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "after",
                "the",
                "Constitution",
                "of",
                "Ireland",
                "was",
                "adopted",
                "was",
                "the",
                "Good",
                "Friday",
                "Agreement",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3
                ],
                [],
                [
                    4,
                    5,
                    7
                ],
                [
                    6
                ],
                [],
                [
                    8,
                    10
                ],
                [
                    9,
                    11
                ],
                [],
                [
                    12,
                    13,
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3
                ],
                [
                    5,
                    6,
                    8,
                    10
                ],
                [
                    7
                ],
                [
                    9
                ],
                [],
                [],
                [
                    12,
                    13
                ],
                [
                    14,
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    9
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    14
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_398_5a73ee89-6d82-4807-b01a-5e0ff0d649be",
        "question_text": "How many of the officers killed at at Ashitla were not found mutilated the next day?",
        "split": "train",
        "decomposition": "return officers killed at  Ashitla ;return #1 who  were found mutilated the  next day ;return #1 besides  #2 ;return number of  #3",
        "program": [
            "SELECT['officers killed at Ashitla']",
            "FILTER['#1', 'who were found mutilated the next day']",
            "DISCARD['#1', '#2']",
            "AGGREGATE['count', '#3']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "DISCARD",
                [
                    "SELECT",
                    "officers killed at Ashitla"
                ],
                [
                    "FILTER",
                    [
                        "SELECT",
                        "officers killed at Ashitla"
                    ],
                    "who were found mutilated the next day"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "DISCARD",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(officers killed at Ashitla)"
                ],
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(officers killed at Ashitla)"
                    ],
                    "GET_QUESTION_SPAN(who were found mutilated the next day)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "DISCARD",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(officers killed at Ashitla)"
                ],
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(officers killed at Ashitla)"
                    ],
                    "GET_QUESTION_SPAN(who were found mutilated the next day)"
                ]
            ]
        ],
        "operators": [
            "select",
            "filter",
            "discard",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    9
                ],
                [
                    4,
                    10
                ],
                [
                    2,
                    6,
                    7
                ],
                [
                    5
                ],
                [
                    8
                ],
                [
                    11,
                    15
                ],
                [
                    12,
                    14
                ],
                [
                    16
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "of",
                "the",
                "officers",
                "killed",
                "at",
                "at",
                "Ashitla",
                "were",
                "not",
                "found",
                "mutilated",
                "the",
                "next",
                "day",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    10
                ],
                [
                    4
                ],
                [],
                [
                    5,
                    6,
                    7
                ],
                [],
                [
                    8
                ],
                [],
                [],
                [],
                [
                    11
                ],
                [
                    12
                ],
                [],
                [
                    14
                ],
                [
                    15
                ],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    4,
                    9
                ],
                [],
                [],
                [
                    8,
                    10
                ],
                [],
                [
                    5,
                    6,
                    7
                ],
                [],
                [],
                [
                    12
                ],
                [],
                [
                    11,
                    14
                ],
                [
                    15
                ],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    8
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    15
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    15
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    15
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2607_84d017bd-4efe-4073-875c-a075351d17b2",
        "question_text": "How many points did the Jaguars score?",
        "split": "train",
        "decomposition": "return points the  Jaguars did score ;return sum of #1",
        "program": [
            "SELECT['points the Jaguars did score']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "points the Jaguars did score"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(points the Jaguars did score)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "SELECT",
                "GET_QUESTION_SPAN(points the Jaguars did score)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4,
                    5,
                    6
                ],
                [
                    7
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "points",
                "did",
                "the",
                "Jaguars",
                "score",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [],
                [
                    3,
                    4
                ],
                [
                    5,
                    6
                ],
                [],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3
                ],
                [],
                [
                    4,
                    6
                ],
                [
                    5
                ],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1752_3bd0db6d-4ccd-4eed-999a-4d65a638af47",
        "question_text": "Who served as Prime Minister for a less amount of time,  Elbegdorj or Rinchinnyamyn Amarjargal?",
        "split": "train",
        "decomposition": "return amount of time that  Elbegdorj served as Prime Minister ;return amount of time that  Rinchinnyamyn Amarjargal served as Prime Minister ;return which  is  less of #1 ,  #2",
        "program": [
            "SELECT['amount of time that Elbegdorj served as Prime Minister']",
            "SELECT['amount of time that Rinchinnyamyn Amarjargal served as Prime Minister']",
            "COMPARISON['min', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "amount of time that Elbegdorj served as Prime Minister"
            ],
            [
                "SELECT",
                "amount of time that Rinchinnyamyn Amarjargal served as Prime Minister"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(amount of time that Elbegdorj served as Prime Minister)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(amount of time that Rinchinnyamyn Amarjargal served as Prime Minister)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(amount of time that Elbegdorj served as Prime Minister)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(amount of time that Rinchinnyamyn Amarjargal served as Prime Minister)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    3,
                    7,
                    8,
                    10,
                    11,
                    13
                ],
                [
                    0,
                    2,
                    5,
                    6,
                    9
                ],
                [
                    4
                ],
                [
                    12
                ],
                [
                    14,
                    15,
                    16
                ]
            ],
            "question_tokens": [
                "Who",
                "served",
                "as",
                "Prime",
                "Minister",
                "for",
                "a",
                "less",
                "amount",
                "of",
                "time",
                ",",
                "Elbegdorj",
                "or",
                "Rinchinnyamyn",
                "Amarjargal",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    7,
                    8
                ],
                [],
                [
                    2,
                    5
                ],
                [
                    3,
                    4,
                    6,
                    9
                ],
                [],
                [],
                [
                    10,
                    11
                ],
                [
                    13
                ],
                [
                    12,
                    14,
                    15
                ],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    6,
                    11,
                    13
                ],
                [
                    7,
                    8
                ],
                [
                    2
                ],
                [
                    3,
                    4,
                    5
                ],
                [
                    10
                ],
                [
                    12
                ],
                [
                    14
                ],
                [
                    15,
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    15
                ],
                [
                    1,
                    10
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    10
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    15
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    15
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_659_6d5a37d9-209c-411c-894e-30ae06f4d322",
        "question_text": "Which player scored more field goals, Nick Folk or Jay Feely?",
        "split": "train",
        "decomposition": "return field goals that Nick Folk scored ;return field goals that Jay Feely scored ;return the  number of  #1 ;return the  number of  #2 ;return which is more of #3 ,  #4",
        "program": [
            "SELECT['field goals that Nick Folk scored']",
            "SELECT['field goals that Jay Feely scored']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals that Nick Folk scored"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals that Jay Feely scored"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals that Nick Folk scored)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals that Jay Feely scored)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals that Nick Folk scored)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals that Jay Feely scored)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    9
                ],
                [],
                [
                    8
                ],
                [
                    7,
                    10,
                    11
                ],
                [
                    12
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "scored",
                "more",
                "field",
                "goals",
                ",",
                "Nick",
                "Folk",
                "or",
                "Jay",
                "Feely",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [
                    7,
                    8
                ],
                [],
                [
                    9
                ],
                [
                    10
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    6,
                    9
                ],
                [
                    1,
                    2,
                    3,
                    4,
                    5,
                    10
                ],
                [],
                [
                    8
                ],
                [],
                [
                    7
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1476_a2dd3a99-5eca-49a3-8497-f9dd9b477f68",
        "question_text": "How many more yards of fieldgoals did Stover score compared to Brown?",
        "split": "dev",
        "decomposition": "return yards of fieldgoals of  Stover ;return yards of fieldgoals of  Brown ;return sum of #1 ;return sum of #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['yards of fieldgoals of Stover']",
            "SELECT['yards of fieldgoals of Brown']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of fieldgoals of Stover"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of fieldgoals of Brown"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of fieldgoals of Stover)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of fieldgoals of Brown)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of fieldgoals of Stover)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of fieldgoals of Brown)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    9
                ],
                [
                    3,
                    5
                ],
                [
                    4
                ],
                [],
                [
                    6,
                    7
                ],
                [
                    8,
                    10,
                    11
                ],
                [
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "yards",
                "of",
                "fieldgoals",
                "did",
                "Stover",
                "score",
                "compared",
                "to",
                "Brown",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [
                    5
                ],
                [
                    7
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    8,
                    10
                ],
                [],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [
                    3,
                    5,
                    6
                ],
                [],
                [],
                [],
                [
                    9,
                    11
                ],
                [
                    7
                ],
                [],
                [],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    11
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2979_56ca38f6-7616-4a78-b826-11a9c113cafa",
        "question_text": "Which yard line did both teams score a touchdown from?",
        "split": "train",
        "decomposition": "return yard line of touchdowns ;return teams that score touchdown from  #1 ;return the  number of  #2 for each #1 ;return #1 where #3 is two",
        "program": [
            "SELECT['yard line of touchdowns']",
            "PROJECT['teams that score touchdown from #REF', '#1']",
            "GROUP['count', '#2', '#1']",
            "COMPARATIVE['#1', '#3', 'is two']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "yard line of touchdowns"
            ],
            [
                "GROUP_count",
                [
                    "PROJECT",
                    "teams that score touchdown from #REF",
                    [
                        "SELECT",
                        "yard line of touchdowns"
                    ]
                ],
                [
                    "SELECT",
                    "yard line of touchdowns"
                ]
            ],
            "is two"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yard line of touchdowns)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(teams that score touchdown from #REF)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is two)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yard line of touchdowns)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(teams that score touchdown from #REF)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is two)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0
                ],
                [
                    1,
                    3,
                    5,
                    7
                ],
                [
                    2
                ],
                [
                    4
                ],
                [
                    8
                ],
                [],
                [
                    6,
                    9
                ],
                [
                    10
                ]
            ],
            "question_tokens": [
                "Which",
                "yard",
                "line",
                "did",
                "both",
                "teams",
                "score",
                "a",
                "touchdown",
                "from",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [],
                [
                    1
                ],
                [],
                [
                    2
                ],
                [
                    3
                ],
                [],
                [
                    5
                ],
                [
                    8
                ],
                [
                    6,
                    7
                ],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    1,
                    5
                ],
                [
                    0
                ],
                [],
                [],
                [],
                [
                    2
                ],
                [
                    4
                ],
                [],
                [],
                [
                    8
                ],
                [],
                [
                    6
                ],
                [
                    9,
                    10
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1820_3b0f558c-6d57-45f6-9901-d3a3169c0329",
        "question_text": "Who threw the most touchdown passes?",
        "split": "train",
        "decomposition": "return touchdown passes ;return who  threw #1 ;return the  number of  #1 for each #2 ;return #2 where #3 is the  most",
        "program": [
            "SELECT['touchdown passes']",
            "PROJECT['who threw #REF', '#1']",
            "GROUP['count', '#1', '#2']",
            "COMPARATIVE['#2', '#3', 'is the most']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "PROJECT",
                "who threw #REF",
                [
                    "SELECT",
                    "touchdown passes"
                ]
            ],
            [
                "GROUP_count",
                [
                    "SELECT",
                    "touchdown passes"
                ],
                [
                    "PROJECT",
                    "who threw #REF",
                    [
                        "SELECT",
                        "touchdown passes"
                    ]
                ]
            ],
            "is the most"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(who threw #REF)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(touchdown passes)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is the most)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(who threw #REF)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(touchdown passes)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is the most)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0
                ],
                [],
                [],
                [
                    1,
                    3
                ],
                [
                    4,
                    5
                ],
                [],
                [],
                [
                    6
                ]
            ],
            "question_tokens": [
                "Who",
                "threw",
                "the",
                "most",
                "touchdown",
                "passes",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    1
                ],
                [],
                [
                    3,
                    4,
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    6
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    1
                ],
                [
                    3
                ],
                [],
                [
                    4,
                    5
                ],
                [],
                [],
                [
                    6
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2275_36ba3c43-c0b7-4e32-8114-8e6059772cae",
        "question_text": "Which group of jobs in the tertiary sector is smaller: health care or information industry?",
        "split": "train",
        "decomposition": "return health care jobs there  are ;return information industry jobs there  are ;return the  number of  #1 ;return the  number of  #2 ;return which is smaller of #3 ,  #4",
        "program": [
            "SELECT['health care jobs there are']",
            "SELECT['information industry jobs there are']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['min', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "health care jobs there are"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "information industry jobs there are"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(health care jobs there are)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(information industry jobs there are)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(health care jobs there are)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(information industry jobs there are)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    7,
                    8,
                    9,
                    10,
                    11,
                    13
                ],
                [
                    2,
                    4,
                    5,
                    6
                ],
                [],
                [
                    12,
                    15
                ],
                [
                    14,
                    16
                ]
            ],
            "question_tokens": [
                "Which",
                "group",
                "of",
                "jobs",
                "in",
                "the",
                "tertiary",
                "sector",
                "is",
                "smaller",
                ":",
                "health",
                "care",
                "or",
                "information",
                "industry",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    7,
                    8,
                    9,
                    10
                ],
                [
                    3,
                    6
                ],
                [
                    2,
                    5
                ],
                [
                    4
                ],
                [],
                [],
                [
                    11
                ],
                [
                    13
                ],
                [
                    12,
                    14,
                    15
                ],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    3,
                    7,
                    13
                ],
                [
                    1,
                    8,
                    9,
                    10,
                    11
                ],
                [
                    4,
                    6
                ],
                [],
                [],
                [],
                [
                    12,
                    14,
                    15
                ],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    9
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    7
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    11,
                    15
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    15
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1252_2499b47a-37dc-49d6-a940-6978ffbff032",
        "question_text": "How many yards did Babineaux intercept?",
        "split": "train",
        "decomposition": "return yards that Babineaux intercept",
        "program": [
            "SELECT['yards that Babineaux intercept']"
        ],
        "nested_expression": [
            "SELECT",
            "yards that Babineaux intercept"
        ],
        "typed_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(yards that Babineaux intercept)"
        ],
        "drop_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(yards that Babineaux intercept)"
        ],
        "operators": [
            "select"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4
                ],
                [
                    5,
                    6
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "did",
                "Babineaux",
                "intercept",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    6
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    4,
                    5
                ],
                [
                    6
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_227_bea1a14c-cfcc-405c-b465-e8e0962ca148",
        "question_text": "Which quarter saw the most field goals?",
        "split": "dev",
        "decomposition": "return quarters ;return field goals in  #1 ;return number of  #2 for each #1 ;return #1 where #3 is highest",
        "program": [
            "SELECT['quarters']",
            "PROJECT['field goals in #REF', '#1']",
            "GROUP['count', '#2', '#1']",
            "SUPERLATIVE['max', '#1', '#3']"
        ],
        "nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "quarters"
            ],
            [
                "GROUP_count",
                [
                    "PROJECT",
                    "field goals in #REF",
                    [
                        "SELECT",
                        "quarters"
                    ]
                ],
                [
                    "SELECT",
                    "quarters"
                ]
            ]
        ],
        "typed_nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(quarters)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(field goals in #REF)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(quarters)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(field goals in #REF)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "superlative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0
                ],
                [
                    2,
                    3
                ],
                [],
                [
                    4
                ],
                [
                    1,
                    5,
                    6
                ],
                [
                    7
                ]
            ],
            "question_tokens": [
                "Which",
                "quarter",
                "saw",
                "the",
                "most",
                "field",
                "goals",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [],
                [],
                [],
                [],
                [
                    2
                ],
                [],
                [],
                [
                    1,
                    4,
                    5,
                    6
                ],
                [],
                [],
                [],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    2
                ],
                [
                    0
                ],
                [
                    4
                ],
                [],
                [],
                [],
                [],
                [
                    5
                ],
                [],
                [
                    1,
                    6
                ],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_734_ea1fe538-b8dc-474e-b6d8-717c3eb5f128",
        "question_text": "What happened second: Catholic gentry raised militia forces or 4,000 Protestants were massacred?",
        "split": "train",
        "decomposition": "return when  the Catholic gentry raised militia forces ;return when  4,000 Protestants were massacred ;return which is  the highest of  #1 , #2",
        "program": [
            "SELECT['when the Catholic gentry raised militia forces']",
            "SELECT['when 4 , 000 Protestants were massacred']",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "when the Catholic gentry raised militia forces"
            ],
            [
                "SELECT",
                "when 4 , 000 Protestants were massacred"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when the Catholic gentry raised militia forces)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when 4 , 000 Protestants were massacred)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when the Catholic gentry raised militia forces)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when 4 , 000 Protestants were massacred)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    9
                ],
                [],
                [
                    4,
                    6,
                    7,
                    8,
                    11
                ],
                [
                    10,
                    12
                ],
                [
                    13,
                    14
                ]
            ],
            "question_tokens": [
                "What",
                "happened",
                "second",
                ":",
                "Catholic",
                "gentry",
                "raised",
                "militia",
                "forces",
                "or",
                "4,000",
                "Protestants",
                "were",
                "massacred",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    5
                ],
                [
                    6
                ],
                [
                    4,
                    7
                ],
                [
                    12
                ],
                [
                    8,
                    9,
                    10
                ],
                [
                    11
                ],
                [
                    13
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    9
                ],
                [
                    1,
                    2,
                    3,
                    5
                ],
                [
                    6
                ],
                [
                    4,
                    7,
                    8
                ],
                [],
                [
                    10
                ],
                [
                    11
                ],
                [
                    13,
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    13
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    11
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1355_f3c9269f-2fae-4211-9bee-f7b85688ca63",
        "question_text": "How many yards separated the two shortest touchdown runs?",
        "split": "train",
        "decomposition": "return yards of touchdown runs ;return the  two shortest of #1 ;return the  difference of #2",
        "program": [
            "SELECT['yards of touchdown runs']",
            "AGGREGATE['min', '#1']",
            "PROJECT['the difference of #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "the difference of #REF",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of touchdown runs"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the difference of #REF)",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdown runs)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the difference of #REF)",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdown runs)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    4,
                    5
                ],
                [
                    3
                ],
                [
                    2,
                    6,
                    7
                ],
                [],
                [
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "separated",
                "the",
                "two",
                "shortest",
                "touchdown",
                "runs",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    3
                ],
                [
                    2,
                    5,
                    6,
                    7
                ],
                [],
                [],
                [],
                [],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    4,
                    5,
                    7
                ],
                [],
                [
                    2,
                    3
                ],
                [
                    6
                ],
                [],
                [],
                [
                    8,
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_684_b19d826d-0b34-4f9a-95c0-f76cbbeead90",
        "question_text": "How many yards were the TD runs combined for both teams in the second quarter?",
        "split": "train",
        "decomposition": "return yards of second quarter TD runs ;return sum of #1",
        "program": [
            "SELECT['yards of second quarter TD runs']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "yards of second quarter TD runs"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of second quarter TD runs)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of second quarter TD runs)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    7,
                    9,
                    10
                ],
                [
                    4,
                    8,
                    11,
                    12
                ],
                [
                    5,
                    6,
                    13,
                    14,
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "were",
                "the",
                "TD",
                "runs",
                "combined",
                "for",
                "both",
                "teams",
                "in",
                "the",
                "second",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    3
                ],
                [
                    1,
                    2,
                    7
                ],
                [
                    5
                ],
                [
                    4,
                    6,
                    8,
                    9,
                    10
                ],
                [
                    11,
                    12
                ],
                [
                    13
                ],
                [
                    14,
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3,
                    5,
                    9
                ],
                [
                    2,
                    7,
                    10
                ],
                [
                    4,
                    11,
                    12
                ],
                [
                    8
                ],
                [
                    6,
                    13,
                    14,
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    14
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    14
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1962_f23cef01-ea02-4fcb-9abc-c0a487a075f2",
        "question_text": "How many field goals over 40-yards in length did Garret Hartley make?",
        "split": "dev",
        "decomposition": "return field goals of Garret Hartley ;return #1 over 40-yards in  length ;return number of  #2",
        "program": [
            "SELECT['field goals of Garret Hartley']",
            "FILTER['#1', 'over 40-yards in length']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "field goals of Garret Hartley"
                ],
                "over 40-yards in length"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Garret Hartley)"
                ],
                "GET_QUESTION_SPAN(over 40-yards in length)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_GT",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Garret Hartley)"
                ],
                "GET_QUESTION_NUMBER(40)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    8
                ],
                [
                    2,
                    3,
                    4
                ],
                [
                    6,
                    10
                ],
                [
                    12
                ],
                [
                    5,
                    7,
                    9,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "field",
                "goals",
                "over",
                "40-yards",
                "in",
                "length",
                "did",
                "Garret",
                "Hartley",
                "make",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4
                ],
                [],
                [
                    8
                ],
                [
                    6,
                    10
                ],
                [],
                [
                    5,
                    7,
                    9,
                    11
                ],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    8,
                    10
                ],
                [
                    2,
                    3,
                    5
                ],
                [
                    4
                ],
                [],
                [
                    9
                ],
                [
                    12
                ],
                [
                    7,
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    7
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_2054_80ccf374-c566-4a56-860c-9692fba51584",
        "question_text": "How many yards was Neil Rackers' shortest field goal?",
        "split": "dev",
        "decomposition": "return yards of field goals of  Neil Rackers ;return shortest of #1",
        "program": [
            "SELECT['yards of field goals of Neil Rackers']",
            "AGGREGATE['min', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "yards of field goals of Neil Rackers"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals of Neil Rackers)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals of Neil Rackers)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    6,
                    7,
                    8,
                    9
                ],
                [],
                [
                    5,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "Neil",
                "Rackers",
                "'",
                "shortest",
                "field",
                "goal",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    7,
                    8,
                    9
                ],
                [],
                [
                    6
                ],
                [
                    4,
                    5
                ],
                [],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    6
                ],
                [
                    2,
                    3
                ],
                [
                    7,
                    8,
                    9
                ],
                [
                    4
                ],
                [
                    5
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_931_d6bff01c-e940-47c8-91b4-d07c4b4915ba",
        "question_text": "How many years after the death of Martin Luther did the Schmalkaldic War start out as a conflict between two German Lutheran rulers?",
        "split": "train",
        "decomposition": "return year of the  death of  Martin Luther ;return year when  the  Schmalkaldic War start out as a conflict between two German Lutheran rulers ;return the  difference of #2 and  #1",
        "program": [
            "SELECT['year of the death of Martin Luther']",
            "SELECT['year when the Schmalkaldic War start out as a conflict between two German Lutheran rulers']",
            "ARITHMETIC['difference', '#2', '#1']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "year when the Schmalkaldic War start out as a conflict between two German Lutheran rulers"
            ],
            [
                "SELECT",
                "year of the death of Martin Luther"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year when the Schmalkaldic War start out as a conflict between two German Lutheran rulers)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year of the death of Martin Luther)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Two_Events",
            [
                "SELECT",
                "GET_QUESTION_SPAN(year when the Schmalkaldic War start out as a conflict between two German Lutheran rulers)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(year of the death of Martin Luther)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    13,
                    18
                ],
                [
                    4,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11
                ],
                [
                    12
                ],
                [
                    14,
                    15,
                    16,
                    17,
                    19
                ],
                [
                    20,
                    21,
                    22,
                    23
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "after",
                "the",
                "death",
                "of",
                "Martin",
                "Luther",
                "did",
                "the",
                "Schmalkaldic",
                "War",
                "start",
                "out",
                "as",
                "a",
                "conflict",
                "between",
                "two",
                "German",
                "Lutheran",
                "rulers",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    5,
                    18
                ],
                [
                    8
                ],
                [
                    6,
                    7,
                    9
                ],
                [
                    10,
                    11,
                    13
                ],
                [
                    12
                ],
                [],
                [
                    14,
                    15,
                    16
                ],
                [
                    17,
                    19
                ],
                [
                    20,
                    21
                ],
                [
                    22,
                    23
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    18
                ],
                [
                    5,
                    6,
                    12,
                    13
                ],
                [
                    7,
                    8,
                    11
                ],
                [
                    14
                ],
                [],
                [
                    15,
                    16,
                    17,
                    19
                ],
                [
                    21
                ],
                [
                    20,
                    22,
                    23
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    22
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    22
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    22
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    17
                ],
                [
                    16,
                    22
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    22
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    19,
                    22
                ],
                [
                    20,
                    20
                ],
                [
                    21,
                    21
                ],
                [
                    22,
                    22
                ],
                [
                    23,
                    23
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1590_d174bd3b-d692-47ec-9f3d-95425babe7be",
        "question_text": "How many 45-yard field goals were kicked in the game?",
        "split": "train",
        "decomposition": "return field goals kicked in  the game ;return #1 that were 45-yard ;return number of  #2",
        "program": [
            "SELECT['field goals kicked in the game']",
            "FILTER['#1', 'that were 45-yard']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "field goals kicked in the game"
                ],
                "that were 45-yard"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals kicked in the game)"
                ],
                "GET_QUESTION_SPAN(that were 45-yard)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_EQ",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals kicked in the game)"
                ],
                "GET_QUESTION_NUMBER(45)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4
                ],
                [
                    7,
                    8
                ],
                [
                    10
                ],
                [
                    5,
                    6,
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "45-yard",
                "field",
                "goals",
                "were",
                "kicked",
                "in",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4
                ],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    5,
                    6
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    5
                ],
                [
                    4
                ],
                [
                    7
                ],
                [],
                [
                    10
                ],
                [
                    6,
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2078_631c5c06-e8d7-4765-80b4-e53b7e522be7",
        "question_text": "Who won titles over a course of exactly eight years?",
        "split": "train",
        "decomposition": "return who  won titles ;return #1 that was  over a course of exactly eight years",
        "program": [
            "SELECT['who won titles']",
            "FILTER['#1', 'that was over a course of exactly eight years']"
        ],
        "nested_expression": [
            "FILTER",
            [
                "SELECT",
                "who won titles"
            ],
            "that was over a course of exactly eight years"
        ],
        "typed_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(who won titles)"
            ],
            "GET_QUESTION_SPAN(that was over a course of exactly eight years)"
        ],
        "drop_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(who won titles)"
            ],
            "GET_QUESTION_SPAN(that was over a course of exactly eight years)"
        ],
        "operators": [
            "select",
            "filter"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    2
                ],
                [
                    0,
                    1,
                    4,
                    5,
                    6,
                    7
                ],
                [
                    3,
                    8
                ],
                [
                    10
                ]
            ],
            "question_tokens": [
                "Who",
                "won",
                "titles",
                "over",
                "a",
                "course",
                "of",
                "exactly",
                "eight",
                "years",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    9
                ],
                [
                    3,
                    4,
                    7
                ],
                [
                    5,
                    6
                ],
                [],
                [
                    8
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    5
                ],
                [
                    3,
                    4,
                    6,
                    7
                ],
                [],
                [
                    8
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    9
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2457_2acf50a6-df42-49b4-a20b-e4788475232d",
        "question_text": "How many percent of people were not Christians?",
        "split": "train",
        "decomposition": "return percent of people that were Christians ;return the  difference of 100 percent and  #1",
        "program": [
            "SELECT['percent of people that were Christians']",
            "PROJECT['the difference of 100 percent and #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "the difference of 100 percent and #REF",
            [
                "SELECT",
                "percent of people that were Christians"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the difference of 100 percent and #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(percent of people that were Christians)"
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            "SELECT_IMPLICIT_NUM(100)",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent of people that were Christians)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [],
                [
                    7,
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "percent",
                "of",
                "people",
                "were",
                "not",
                "Christians",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    6
                ],
                [],
                [
                    4,
                    5
                ],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [],
                [],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_368_5ab87d42-b83d-4d78-8824-10e86bf942a5",
        "question_text": "Which happened last, forts were built far to the south to block the Muravsky Trail or Another large raid failed?",
        "split": "train",
        "decomposition": "return when  were forts built far to the  south to  block the Muravsky Trail ;return when  did Another large raid fail ;return which was  last of #1 ,  #2",
        "program": [
            "SELECT['when were forts built far to the south to block the Muravsky Trail']",
            "SELECT['when did Another large raid fail']",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "when were forts built far to the south to block the Muravsky Trail"
            ],
            [
                "SELECT",
                "when did Another large raid fail"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when were forts built far to the south to block the Muravsky Trail)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did Another large raid fail)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when were forts built far to the south to block the Muravsky Trail)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did Another large raid fail)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    7,
                    16
                ],
                [
                    5,
                    6,
                    8,
                    9,
                    11
                ],
                [
                    10,
                    12,
                    14
                ],
                [
                    13,
                    15,
                    17,
                    18,
                    19,
                    20
                ],
                [
                    21
                ]
            ],
            "question_tokens": [
                "Which",
                "happened",
                "last",
                ",",
                "forts",
                "were",
                "built",
                "far",
                "to",
                "the",
                "south",
                "to",
                "block",
                "the",
                "Muravsky",
                "Trail",
                "or",
                "Another",
                "large",
                "raid",
                "failed",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    4
                ],
                [
                    5,
                    7
                ],
                [
                    6
                ],
                [
                    8,
                    9
                ],
                [
                    10,
                    11,
                    12,
                    14
                ],
                [],
                [
                    15,
                    16,
                    18,
                    19,
                    20
                ],
                [],
                [
                    17
                ],
                [
                    21
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    3,
                    4,
                    16
                ],
                [
                    1,
                    2,
                    7
                ],
                [
                    6,
                    8
                ],
                [
                    10,
                    11,
                    12
                ],
                [
                    14,
                    15
                ],
                [
                    18,
                    19,
                    20
                ],
                [
                    17
                ],
                [
                    21
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    20
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    20
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    20
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    20
                ],
                [
                    12,
                    15
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    15
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    20
                ],
                [
                    17,
                    17
                ],
                [
                    17,
                    19
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    20,
                    20
                ],
                [
                    21,
                    21
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2099_9d740685-4f9e-4d5a-9d14-04b7f9a63248",
        "question_text": "How many yards was the shortest field goal kicked after the first two quarters?",
        "split": "train",
        "decomposition": "return yards of field goals kicked after the  first two quarters ;return the  shortest of #1",
        "program": [
            "SELECT['yards of field goals kicked after the first two quarters']",
            "AGGREGATE['min', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "yards of field goals kicked after the first two quarters"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals kicked after the first two quarters)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals kicked after the first two quarters)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    9
                ],
                [
                    2,
                    3,
                    5,
                    6,
                    7,
                    11,
                    12
                ],
                [
                    4,
                    8,
                    10
                ],
                [
                    13,
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "the",
                "shortest",
                "field",
                "goal",
                "kicked",
                "after",
                "the",
                "first",
                "two",
                "quarters",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    9
                ],
                [],
                [
                    2,
                    3,
                    5,
                    6,
                    7,
                    12
                ],
                [],
                [
                    8
                ],
                [
                    10,
                    11
                ],
                [],
                [
                    13
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    9
                ],
                [
                    2,
                    3,
                    12
                ],
                [
                    5,
                    6,
                    7,
                    11
                ],
                [],
                [],
                [
                    13,
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    13
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    13
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    13
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2650_8df3f8a4-3018-41aa-8179-7b8edb0a756e",
        "question_text": "How many yards was Shaun Suisham's second longest field goal?",
        "split": "train",
        "decomposition": "return yards of field goals of  Shaun Suisham ;return second longest of #1",
        "program": [
            "SELECT['yards of field goals of Shaun Suisham']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "yards of field goals of Shaun Suisham"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals of Shaun Suisham)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals of Shaun Suisham)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10
                ],
                [],
                [
                    4,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "Shaun",
                "Suisham",
                "'s",
                "second",
                "longest",
                "field",
                "goal",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    6,
                    7,
                    8,
                    9,
                    10
                ],
                [
                    4,
                    5
                ],
                [],
                [],
                [],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    4
                ],
                [],
                [
                    2,
                    3,
                    5,
                    7,
                    10
                ],
                [
                    6,
                    8,
                    9
                ],
                [],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2819_0a122658-e1fd-43ea-8d70-78037853a13b",
        "question_text": "How many yards was the games longest TD pass?",
        "split": "train",
        "decomposition": "return yards of TD passes of  the  game ;return longest of #1",
        "program": [
            "SELECT['yards of TD passes of the game']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "yards of TD passes of the game"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of TD passes of the game)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of TD passes of the game)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    5
                ],
                [
                    2,
                    3,
                    6,
                    7,
                    8
                ],
                [
                    4
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "the",
                "games",
                "longest",
                "TD",
                "pass",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    5
                ],
                [],
                [
                    2,
                    3,
                    6,
                    7,
                    8
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    5
                ],
                [],
                [
                    2,
                    3
                ],
                [
                    6,
                    7,
                    8
                ],
                [],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1901_12ad19b4-5307-43b1-8b1f-0316f10cb168",
        "question_text": "How many yards was the longest touchdown pass in the third quarter?",
        "split": "train",
        "decomposition": "return yards of third quarter touchdown passes ;return longest of #1",
        "program": [
            "SELECT['yards of third quarter touchdown passes']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "yards of third quarter touchdown passes"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of third quarter touchdown passes)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of third quarter touchdown passes)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    2,
                    3,
                    5,
                    6,
                    7
                ],
                [
                    0,
                    1,
                    4,
                    8,
                    9
                ],
                [
                    10,
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "the",
                "longest",
                "touchdown",
                "pass",
                "in",
                "the",
                "third",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    5,
                    6,
                    7
                ],
                [],
                [
                    4
                ],
                [
                    8,
                    9,
                    10
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    5,
                    6,
                    7
                ],
                [
                    4,
                    8,
                    9
                ],
                [],
                [
                    10,
                    11,
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    11
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_898_bfb1a3c1-6de3-4595-a6f4-98ab2f30a701",
        "question_text": "How many years did the Kerma culture's latest phase last?",
        "split": "train",
        "decomposition": "return latest phase of Kerma culture ;return years that #1 did last ;return number of  #2",
        "program": [
            "SELECT['latest phase of Kerma culture']",
            "PROJECT['years that #REF did last', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "years that #REF did last",
                [
                    "SELECT",
                    "latest phase of Kerma culture"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(years that #REF did last)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(latest phase of Kerma culture)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(years that #REF did last)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(latest phase of Kerma culture)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    7
                ],
                [
                    2,
                    4,
                    5,
                    8,
                    9,
                    10
                ],
                [
                    6
                ],
                [
                    3
                ],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "did",
                "the",
                "Kerma",
                "culture",
                "'s",
                "latest",
                "phase",
                "last",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    2,
                    3
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [
                    7,
                    8,
                    9
                ],
                [
                    6
                ],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3
                ],
                [],
                [
                    2,
                    5
                ],
                [
                    4,
                    7,
                    8,
                    9,
                    10
                ],
                [
                    6
                ],
                [],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1028_e58a1bc4-d4ec-4e4f-b21b-8e6a5a6f85ce",
        "question_text": "How many 40+ yard field goals did Dan Carpenter make?",
        "split": "train",
        "decomposition": "return field goals of  Dan Carpenter ;return #1 that are  40+ yard ;return number of  #2",
        "program": [
            "SELECT['field goals of Dan Carpenter']",
            "FILTER['#1', 'that are 40+ yard']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "field goals of Dan Carpenter"
                ],
                "that are 40+ yard"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Dan Carpenter)"
                ],
                "GET_QUESTION_SPAN(that are 40+ yard)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_GT",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Dan Carpenter)"
                ],
                "GET_QUESTION_NUMBER(40+)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    7
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    8
                ],
                [],
                [
                    9,
                    11
                ],
                [
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "40",
                "+",
                "yard",
                "field",
                "goals",
                "did",
                "Dan",
                "Carpenter",
                "make",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    8
                ],
                [],
                [
                    7
                ],
                [],
                [],
                [
                    10
                ],
                [
                    9
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    7
                ],
                [
                    4,
                    5,
                    6
                ],
                [
                    2,
                    3,
                    8
                ],
                [],
                [],
                [
                    9,
                    11
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2446_93ccb8db-c488-47c8-a5b2-9ea7fe1a280d",
        "question_text": "What are all the heard words in the 2005 Oxford English Dictionary?",
        "split": "train",
        "decomposition": "return the  heard words in  the 2005 Oxford English Dictionary",
        "program": [
            "SELECT['the heard words in the 2005 Oxford English Dictionary']"
        ],
        "nested_expression": [
            "SELECT",
            "the heard words in the 2005 Oxford English Dictionary"
        ],
        "typed_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(the heard words in the 2005 Oxford English Dictionary)"
        ],
        "drop_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(the heard words in the 2005 Oxford English Dictionary)"
        ],
        "operators": [
            "select"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                ],
                [
                    8,
                    9,
                    10,
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "What",
                "are",
                "all",
                "the",
                "heard",
                "words",
                "in",
                "the",
                "2005",
                "Oxford",
                "English",
                "Dictionary",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4,
                    5,
                    7
                ],
                [
                    6,
                    8,
                    9
                ],
                [
                    10,
                    11,
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4,
                    5,
                    6,
                    7
                ],
                [
                    9,
                    10
                ],
                [
                    8,
                    11,
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    11
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    11
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    11
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_3082_166851f4-05ff-403a-aa4f-5b1b3786f635",
        "question_text": "Which time period saw a smaller increase of population, 1787 to 1860 or 1920 to 1930?",
        "split": "train",
        "decomposition": "return what  was  the  increase in  population from  1787 to 1860 ;return what  was  the  increase in  population from  1920 to 1930 ;return which is smaller of #1 ,  #2",
        "program": [
            "SELECT['what was the increase in population from 1787 to 1860']",
            "SELECT['what was the increase in population from 1920 to 1930']",
            "COMPARISON['min', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "what was the increase in population from 1787 to 1860"
            ],
            [
                "SELECT",
                "what was the increase in population from 1920 to 1930"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(what was the increase in population from 1787 to 1860)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(what was the increase in population from 1920 to 1930)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(what was the increase in population from 1787 to 1860)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(what was the increase in population from 1920 to 1930)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    5,
                    9,
                    13
                ],
                [
                    4,
                    6,
                    7
                ],
                [
                    2,
                    8,
                    10,
                    12
                ],
                [
                    11,
                    15
                ],
                [
                    14,
                    16,
                    17
                ]
            ],
            "question_tokens": [
                "Which",
                "time",
                "period",
                "saw",
                "a",
                "smaller",
                "increase",
                "of",
                "population",
                ",",
                "1787",
                "to",
                "1860",
                "or",
                "1920",
                "to",
                "1930",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    1
                ],
                [
                    0,
                    3,
                    5
                ],
                [],
                [
                    4,
                    6
                ],
                [
                    2,
                    7,
                    8
                ],
                [
                    10,
                    12
                ],
                [],
                [
                    9,
                    11,
                    13
                ],
                [
                    15
                ],
                [
                    14,
                    16
                ],
                [
                    17
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    3,
                    4,
                    9,
                    13
                ],
                [
                    5,
                    6
                ],
                [],
                [
                    2,
                    10,
                    11,
                    12
                ],
                [
                    1,
                    8
                ],
                [],
                [
                    14,
                    15
                ],
                [
                    16,
                    17
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    16
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    16
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    16
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3226_4781b0e2-d65a-459d-9b79-e912c88eee2e",
        "question_text": "How many touchdown passes did Ben Roethlisberger throw in the first half?",
        "split": "train",
        "decomposition": "return touchdown passes of Ben Roethlisberger in  the  first half ;return the  number of  #1",
        "program": [
            "SELECT['touchdown passes of Ben Roethlisberger in the first half']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "touchdown passes of Ben Roethlisberger in the first half"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown passes of Ben Roethlisberger in the first half)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes of Ben Roethlisberger)"
                ],
                "GET_QUESTION_SPAN(in the first half)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    4,
                    7
                ],
                [
                    8,
                    10,
                    11
                ],
                [
                    5,
                    6,
                    9
                ],
                [
                    2
                ],
                [
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "touchdown",
                "passes",
                "did",
                "Ben",
                "Roethlisberger",
                "throw",
                "in",
                "the",
                "first",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [],
                [
                    4,
                    11
                ],
                [
                    5
                ],
                [],
                [
                    6,
                    8
                ],
                [
                    7
                ],
                [
                    10
                ],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    5,
                    6
                ],
                [
                    3,
                    4,
                    7
                ],
                [],
                [
                    8,
                    10,
                    11
                ],
                [],
                [],
                [],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    11
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1462_67cd7ea5-3d73-45fe-96c2-611458ac55f2",
        "question_text": "Approximately how many years had indigenous Taino in the area where the Spanish settlement of Villa de la Vega was located?",
        "split": "train",
        "decomposition": "return the area where  the  Spanish settlement of  Villa de la Vega was located ;return years that the indigenous Taino was in  #1 ;return the number of  #2",
        "program": [
            "SELECT['the area where the Spanish settlement of Villa de la Vega was located']",
            "PROJECT['years that the indigenous Taino was in #REF', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "years that the indigenous Taino was in #REF",
                [
                    "SELECT",
                    "the area where the Spanish settlement of Villa de la Vega was located"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(years that the indigenous Taino was in #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the area where the Spanish settlement of Villa de la Vega was located)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(years that the indigenous Taino was in #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the area where the Spanish settlement of Villa de la Vega was located)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    9
                ],
                [
                    3,
                    4,
                    5,
                    6,
                    8,
                    10,
                    11,
                    19
                ],
                [
                    13,
                    15
                ],
                [
                    7,
                    12,
                    14,
                    16,
                    20
                ],
                [
                    17,
                    18,
                    21
                ]
            ],
            "question_tokens": [
                "Approximately",
                "how",
                "many",
                "years",
                "had",
                "indigenous",
                "Taino",
                "in",
                "the",
                "area",
                "where",
                "the",
                "Spanish",
                "settlement",
                "of",
                "Villa",
                "de",
                "la",
                "Vega",
                "was",
                "located",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    6
                ],
                [
                    7,
                    10
                ],
                [
                    9,
                    15,
                    19
                ],
                [
                    12,
                    16
                ],
                [
                    13,
                    14
                ],
                [
                    17,
                    18
                ],
                [],
                [
                    20,
                    21
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    5,
                    6,
                    9
                ],
                [
                    3,
                    4,
                    10,
                    19
                ],
                [
                    8,
                    11,
                    14
                ],
                [
                    13,
                    15,
                    17
                ],
                [
                    12,
                    16,
                    20
                ],
                [],
                [
                    18,
                    21
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    20
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    20
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    20
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    20
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    18
                ],
                [
                    11,
                    13
                ],
                [
                    11,
                    20
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    18
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    18
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    19,
                    20
                ],
                [
                    20,
                    20
                ],
                [
                    21,
                    21
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1805_1fb79ee2-b45c-4540-b01e-f54e919af924",
        "question_text": "According to the 2011 United Kingdom Census, which group is smaller: British Asian or British Arabs?",
        "split": "train",
        "decomposition": "return British Asian According to the 2011 United Kingdom Census ;return British Arabs According to the 2011 United Kingdom Census ;return number of #1 ;return number of #2 ;return which  is  lowest of #3 , #4",
        "program": [
            "SELECT['British Asian According to the 2011 United Kingdom Census']",
            "SELECT['British Arabs According to the 2011 United Kingdom Census']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['min', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "British Asian According to the 2011 United Kingdom Census"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "British Arabs According to the 2011 United Kingdom Census"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(British Asian According to the 2011 United Kingdom Census)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(British Arabs According to the 2011 United Kingdom Census)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(British Asian According to the 2011 United Kingdom Census)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(British Arabs According to the 2011 United Kingdom Census)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    3,
                    4,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    15
                ],
                [
                    1,
                    2,
                    5
                ],
                [
                    14
                ],
                [
                    13,
                    16
                ],
                [
                    17,
                    18
                ]
            ],
            "question_tokens": [
                "According",
                "to",
                "the",
                "2011",
                "United",
                "Kingdom",
                "Census",
                ",",
                "which",
                "group",
                "is",
                "smaller",
                ":",
                "British",
                "Asian",
                "or",
                "British",
                "Arabs",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    6,
                    8,
                    9,
                    10,
                    11,
                    12
                ],
                [
                    4
                ],
                [
                    5,
                    7
                ],
                [],
                [
                    3
                ],
                [],
                [
                    13
                ],
                [
                    15,
                    16
                ],
                [
                    14,
                    17
                ],
                [
                    18
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0,
                    3,
                    4,
                    7,
                    15
                ],
                [
                    6,
                    8,
                    9,
                    10,
                    11,
                    12
                ],
                [
                    1,
                    5
                ],
                [],
                [],
                [],
                [
                    13,
                    14,
                    16,
                    17
                ],
                [
                    18
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    1,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    6
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    17
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_765_d4bb04ba-86f8-4473-b490-1a4e18f49c25",
        "question_text": "The Treaty of Chambord was how many years before Charles' abdication",
        "split": "train",
        "decomposition": "return year of Charles abdication ;return year of Treaty of  Chambord ;return difference of #1 and  #2",
        "program": [
            "SELECT['year of Charles abdication']",
            "SELECT['year of Treaty of Chambord']",
            "ARITHMETIC['difference', '#1', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "year of Charles abdication"
            ],
            [
                "SELECT",
                "year of Treaty of Chambord"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year of Charles abdication)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year of Treaty of Chambord)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Two_Events",
            [
                "SELECT",
                "GET_QUESTION_SPAN(year of Charles abdication)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(year of Treaty of Chambord)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    3,
                    6,
                    7,
                    8
                ],
                [
                    0,
                    2,
                    4,
                    5
                ],
                [],
                [
                    10
                ],
                [
                    9,
                    11
                ]
            ],
            "question_tokens": [
                "The",
                "Treaty",
                "of",
                "Chambord",
                "was",
                "how",
                "many",
                "years",
                "before",
                "Charles",
                "'",
                "abdication"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    7
                ],
                [
                    3,
                    4
                ],
                [
                    1,
                    2
                ],
                [],
                [],
                [
                    5,
                    6
                ],
                [],
                [
                    8,
                    9,
                    10
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    5,
                    6,
                    7
                ],
                [
                    8
                ],
                [
                    1,
                    2,
                    3,
                    4
                ],
                [],
                [],
                [],
                [
                    9,
                    10
                ],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    3
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    11
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_911_19290172-72f9-4561-ab5e-978a560a19f9",
        "question_text": "How many field goals longer than 30 yards were kicked in the first half?",
        "split": "train",
        "decomposition": "return yards of field goals that were kicked in  the  first half ;return #1 that were longer than 30 yards ;return number of  #2",
        "program": [
            "SELECT['yards of field goals that were kicked in the first half']",
            "FILTER['#1', 'that were longer than 30 yards']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "yards of field goals that were kicked in the first half"
                ],
                "that were longer than 30 yards"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals that were kicked in the first half)"
                ],
                "GET_QUESTION_SPAN(that were longer than 30 yards)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_GT",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals that were kicked)"
                    ],
                    "GET_QUESTION_SPAN(in the first half)"
                ],
                "GET_QUESTION_NUMBER(30)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    5
                ],
                [
                    10,
                    12,
                    13
                ],
                [
                    11
                ],
                [],
                [
                    14
                ],
                [
                    6,
                    7,
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "field",
                "goals",
                "longer",
                "than",
                "30",
                "yards",
                "were",
                "kicked",
                "in",
                "the",
                "first",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [
                    13
                ],
                [],
                [],
                [],
                [],
                [
                    10,
                    12
                ],
                [],
                [
                    6,
                    7,
                    8,
                    9
                ],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    6,
                    8
                ],
                [
                    4,
                    5
                ],
                [],
                [
                    10,
                    12,
                    13
                ],
                [],
                [],
                [],
                [
                    14
                ],
                [
                    7,
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    7
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    13
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    13
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2236_b2993bc0-0776-4558-a955-509fbb64ee86",
        "question_text": "Agricultural production was 0.4% higher than how many years?",
        "split": "train",
        "decomposition": "return years which Agricultural production was  0.4 % higher than ;return the  number of  #1",
        "program": [
            "SELECT['years which Agricultural production was 0.4 % higher than']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "years which Agricultural production was 0.4 % higher than"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years which Agricultural production was 0.4 % higher than)"
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Single_Event",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years which Agricultural production was 0.4 % higher than)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    7,
                    8,
                    9
                ],
                [
                    5
                ],
                [
                    6,
                    10
                ]
            ],
            "question_tokens": [
                "Agricultural",
                "production",
                "was",
                "0.4",
                "%",
                "higher",
                "than",
                "how",
                "many",
                "years",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    8,
                    9
                ],
                [
                    5,
                    7
                ],
                [],
                [
                    4
                ],
                [
                    6
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    8
                ],
                [
                    2,
                    3,
                    7,
                    9
                ],
                [
                    1,
                    4
                ],
                [
                    5
                ],
                [],
                [
                    6,
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    3,
                    4
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    9
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1995_67741ea6-8762-49d4-ada1-a066fc5bc8fe",
        "question_text": "Did more clubs enter the FA Cup in the 2004-05 season or the 2008-09 season?",
        "split": "dev",
        "decomposition": "return clubs that enter the   FA Cup in  the 2004-05 season ;return clubs that enter the   FA Cup in  the 2008-09 season ;return number of  #1 ;return number of  #2 ;return which is  more of  #3 , #4",
        "program": [
            "SELECT['clubs that enter the FA Cup in the 2004-05 season']",
            "SELECT['clubs that enter the FA Cup in the 2008-09 season']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "clubs that enter the FA Cup in the 2004-05 season"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "clubs that enter the FA Cup in the 2008-09 season"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(clubs that enter the FA Cup in the 2004-05 season)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(clubs that enter the FA Cup in the 2008-09 season)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(clubs that enter the FA Cup in the 2004-05 season)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(clubs that enter the FA Cup in the 2008-09 season)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    5,
                    13
                ],
                [
                    4,
                    6,
                    7,
                    8,
                    10
                ],
                [
                    2,
                    9,
                    11,
                    12,
                    15
                ],
                [
                    14,
                    16
                ],
                [
                    17,
                    18,
                    19
                ]
            ],
            "question_tokens": [
                "Did",
                "more",
                "clubs",
                "enter",
                "the",
                "FA",
                "Cup",
                "in",
                "the",
                "2004",
                "-",
                "05",
                "season",
                "or",
                "the",
                "2008",
                "-",
                "09",
                "season",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    5,
                    6
                ],
                [],
                [
                    7,
                    8,
                    10
                ],
                [
                    9,
                    11,
                    12
                ],
                [],
                [
                    13,
                    14
                ],
                [
                    16
                ],
                [
                    15,
                    17,
                    18
                ],
                [
                    19
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0,
                    2,
                    3,
                    5,
                    6,
                    13
                ],
                [
                    1,
                    11
                ],
                [
                    7,
                    10
                ],
                [
                    9
                ],
                [
                    12,
                    15
                ],
                [
                    16
                ],
                [],
                [
                    17,
                    18,
                    19
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    18
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    18
                ],
                [
                    8,
                    12
                ],
                [
                    8,
                    8
                ],
                [
                    8,
                    18
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    18
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2028_67e9dccf-9605-42ff-9018-5b447f3a0c68",
        "question_text": "How many soum hospitals and private hospitals were comprised in the health sector?",
        "split": "train",
        "decomposition": "return soum hospitals in  the  health sector ;return private hospitals in  the  health sector ;return number of  #1 ;return number of  #2 ;return sum of #3 and  #4",
        "program": [
            "SELECT['soum hospitals in the health sector']",
            "SELECT['private hospitals in the health sector']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['sum', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "soum hospitals in the health sector"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "private hospitals in the health sector"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(soum hospitals in the health sector)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(private hospitals in the health sector)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(soum hospitals in the health sector)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(private hospitals in the health sector)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    4,
                    7
                ],
                [
                    1,
                    3,
                    6
                ],
                [],
                [
                    5
                ],
                [
                    8,
                    12
                ],
                [
                    9,
                    10,
                    11
                ],
                [
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "soum",
                "hospitals",
                "and",
                "private",
                "hospitals",
                "were",
                "comprised",
                "in",
                "the",
                "health",
                "sector",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    4
                ],
                [
                    2
                ],
                [
                    3
                ],
                [],
                [],
                [],
                [
                    5
                ],
                [],
                [
                    8
                ],
                [
                    6,
                    7
                ],
                [],
                [
                    11
                ],
                [],
                [],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    4,
                    7
                ],
                [],
                [
                    3,
                    6
                ],
                [],
                [],
                [
                    5,
                    8
                ],
                [],
                [
                    12
                ],
                [
                    11
                ],
                [],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    6
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    12
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1268_706cd890-9c3b-406c-846c-4700754759fa",
        "question_text": "How many points did the Rams score on their first possession?",
        "split": "train",
        "decomposition": "return the  Rams possessions ;return the  first of #1 ;return the  points from  #2",
        "program": [
            "SELECT['the Rams possessions']",
            "AGGREGATE['min', '#1']",
            "PROJECT['the points from #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "the points from #REF",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "the Rams possessions"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the points from #REF)",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the Rams possessions)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the points from #REF)",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the Rams possessions)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    4
                ],
                [],
                [
                    9
                ],
                [
                    2,
                    3,
                    5,
                    6,
                    7,
                    8
                ],
                [
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "points",
                "did",
                "the",
                "Rams",
                "score",
                "on",
                "their",
                "first",
                "possession",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3
                ],
                [],
                [],
                [
                    5,
                    6
                ],
                [
                    7,
                    8,
                    9
                ],
                [],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    9
                ],
                [
                    5,
                    6,
                    7,
                    8
                ],
                [],
                [
                    10,
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_61_b3c93148-36dc-43fd-9ecb-93604dc90f91",
        "question_text": "When did the regiment last return to the Philippine Islands?",
        "split": "train",
        "decomposition": "return when  did the  regiment return to the Philippine Islands ;return the  highest of #1",
        "program": [
            "SELECT['when did the regiment return to the Philippine Islands']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "when did the regiment return to the Philippine Islands"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did the regiment return to the Philippine Islands)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did the regiment return to the Philippine Islands)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    3
                ],
                [
                    0,
                    1,
                    2,
                    6,
                    7
                ],
                [
                    4,
                    5,
                    8,
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "When",
                "did",
                "the",
                "regiment",
                "last",
                "return",
                "to",
                "the",
                "Philippine",
                "Islands",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [
                    4,
                    5,
                    6,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3
                ],
                [],
                [
                    2,
                    6,
                    7
                ],
                [
                    4,
                    8
                ],
                [
                    5,
                    9,
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    9
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2074_312ce461-3515-4a3d-bead-b94054fe57f2",
        "question_text": "How many 40+ yard touchdowns did Vincent Jackson score?",
        "split": "train",
        "decomposition": "return touchdowns of  Vincent Jackson ;return #1 that are  40+ yard ;return number of  #2",
        "program": [
            "SELECT['touchdowns of Vincent Jackson']",
            "FILTER['#1', 'that are 40+ yard']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "touchdowns of Vincent Jackson"
                ],
                "that are 40+ yard"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns of Vincent Jackson)"
                ],
                "GET_QUESTION_SPAN(that are 40+ yard)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_GT",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns of Vincent Jackson)"
                ],
                "GET_QUESTION_NUMBER(40+)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    5,
                    6,
                    9
                ],
                [
                    2,
                    3,
                    4
                ],
                [
                    8
                ],
                [
                    7,
                    10
                ],
                []
            ],
            "question_tokens": [
                "How",
                "many",
                "40",
                "+",
                "yard",
                "touchdowns",
                "did",
                "Vincent",
                "Jackson",
                "score",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    5
                ],
                [],
                [
                    2,
                    3,
                    4
                ],
                [],
                [
                    6,
                    8
                ],
                [
                    9
                ],
                [
                    7
                ],
                [],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    5,
                    6,
                    9
                ],
                [
                    4
                ],
                [
                    2,
                    3
                ],
                [
                    8
                ],
                [
                    7
                ],
                [
                    10
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3470_5391b8ea-8265-4998-9140-776d87fabc7a",
        "question_text": "How many more points were scored in the second Notre Dame vs. Syracuse game than the first?",
        "split": "train",
        "decomposition": "return points scored in  the  second Notre Dame vs. Syracuse game ;return points scored in  the  first Notre Dame vs. Syracuse game ;return sum of #1 ;return sum of #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['points scored in the second Notre Dame vs. Syracuse game']",
            "SELECT['points scored in the first Notre Dame vs. Syracuse game']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "points scored in the second Notre Dame vs. Syracuse game"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "points scored in the first Notre Dame vs. Syracuse game"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points scored in the second Notre Dame vs. Syracuse game)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points scored in the first Notre Dame vs. Syracuse game)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points scored in the second Notre Dame vs. Syracuse game)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points scored in the first Notre Dame vs. Syracuse game)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    14
                ],
                [
                    4,
                    5
                ],
                [
                    3,
                    6,
                    7
                ],
                [
                    8,
                    13
                ],
                [
                    9,
                    10,
                    11,
                    12
                ],
                [
                    15
                ],
                [
                    16,
                    17
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "points",
                "were",
                "scored",
                "in",
                "the",
                "second",
                "Notre",
                "Dame",
                "vs.",
                "Syracuse",
                "game",
                "than",
                "the",
                "first",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [
                    3
                ],
                [],
                [
                    4,
                    5
                ],
                [
                    9
                ],
                [
                    6
                ],
                [
                    8
                ],
                [],
                [],
                [],
                [
                    11
                ],
                [
                    10
                ],
                [
                    12,
                    16
                ],
                [
                    13
                ],
                [],
                [
                    17
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    3,
                    4
                ],
                [
                    5
                ],
                [
                    9,
                    10
                ],
                [
                    12
                ],
                [
                    13
                ],
                [
                    14
                ],
                [
                    11
                ],
                [],
                [],
                [
                    17
                ]
            ],
            "question_spans": [
                [
                    0,
                    2
                ],
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    16
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    16
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    13
                ],
                [
                    6,
                    16
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    13
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    16
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    16
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_406_9e7c96f0-d31f-488c-bc7f-9c1bb8b25519",
        "question_text": "How many total planes were obtained in 1925?",
        "split": "train",
        "decomposition": "return planes that were obtained in  1925 ;return number of  #1",
        "program": [
            "SELECT['planes that were obtained in 1925']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "planes that were obtained in 1925"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(planes that were obtained in 1925)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "SELECT",
                "GET_QUESTION_SPAN(planes that were obtained in 1925)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4
                ],
                [
                    3,
                    5,
                    6
                ],
                [
                    7,
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "total",
                "planes",
                "were",
                "obtained",
                "in",
                "1925",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    4
                ],
                [
                    5
                ],
                [
                    6
                ],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4
                ],
                [],
                [
                    5,
                    6
                ],
                [],
                [
                    7,
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2036_a3b3b093-1c94-4ee8-82cb-9be848a66f4e",
        "question_text": "In which year did less Dutch people identify as Christian, 2015 or 2006?",
        "split": "train",
        "decomposition": "return Dutch people that  identify as Christian in  2015 ;return Dutch people that  identify as Christian in  2006 ;return number of #1 ;return number of #2 ;return which  is  lowest of #3 , #4",
        "program": [
            "SELECT['Dutch people that identify as Christian in 2015']",
            "SELECT['Dutch people that identify as Christian in 2006']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['min', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "Dutch people that identify as Christian in 2015"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "Dutch people that identify as Christian in 2006"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(Dutch people that identify as Christian in 2015)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(Dutch people that identify as Christian in 2006)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(Dutch people that identify as Christian in 2015)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(Dutch people that identify as Christian in 2006)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4,
                    6,
                    7,
                    10,
                    12
                ],
                [
                    3,
                    5,
                    8
                ],
                [
                    9,
                    11
                ],
                [],
                [
                    13,
                    14
                ]
            ],
            "question_tokens": [
                "In",
                "which",
                "year",
                "did",
                "less",
                "Dutch",
                "people",
                "identify",
                "as",
                "Christian",
                ",",
                "2015",
                "or",
                "2006",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    4,
                    6
                ],
                [
                    3
                ],
                [
                    5
                ],
                [],
                [
                    9
                ],
                [
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    12
                ],
                [
                    11,
                    13
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    2,
                    3
                ],
                [
                    10,
                    12
                ],
                [
                    1,
                    4,
                    6,
                    7
                ],
                [
                    5,
                    8
                ],
                [
                    9
                ],
                [
                    11
                ],
                [],
                [],
                [
                    13,
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    13
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    13
                ],
                [
                    8,
                    13
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    13
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3043_f5cae670-3d76-496b-8582-8de23844bcfd",
        "question_text": "How many lead changes were there in the final 5 minutes?",
        "split": "train",
        "decomposition": "return lead changes in  the  final 5 minutes ;return number of  #1",
        "program": [
            "SELECT['lead changes in the final 5 minutes']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "lead changes in the final 5 minutes"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(lead changes in the final 5 minutes)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(lead changes in the final 5 minutes)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    4,
                    5
                ],
                [
                    2,
                    6,
                    7
                ],
                [
                    8,
                    9,
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "lead",
                "changes",
                "were",
                "there",
                "in",
                "the",
                "final",
                "5",
                "minutes",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    2
                ],
                [
                    6,
                    7,
                    8,
                    9
                ],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    4,
                    5,
                    10
                ],
                [],
                [
                    2,
                    6,
                    7
                ],
                [
                    9
                ],
                [
                    3,
                    8,
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1277_68d69f6c-f990-4f0c-8886-967bfe624576",
        "question_text": "How long was the field goal Matt Bryant missed?",
        "split": "train",
        "decomposition": "return the  field goal that Matt Bryant missed ;return How long was  #1",
        "program": [
            "SELECT['the field goal that Matt Bryant missed']",
            "PROJECT['How long was #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "How long was #REF",
            [
                "SELECT",
                "the field goal that Matt Bryant missed"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(How long was #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the field goal that Matt Bryant missed)"
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(How long was #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the field goal that Matt Bryant missed)"
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    8
                ],
                [],
                [
                    6
                ],
                [
                    7,
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "long",
                "was",
                "the",
                "field",
                "goal",
                "Matt",
                "Bryant",
                "missed",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3
                ],
                [
                    4
                ],
                [],
                [
                    6,
                    7
                ],
                [
                    5,
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    2
                ],
                [
                    1,
                    8
                ],
                [
                    3,
                    4,
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [
                    7,
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    7
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1354_a16d058c-b283-4de1-bb82-dbe97ee2b405",
        "question_text": "Which film cam out first, in 1980 Magnificent 72 or 2011 72 Heroes?",
        "split": "train",
        "decomposition": "return when  Magnificent 72  cam out ;return when  72  Heroes cam out ;return which film cam first of #1 ,  #2",
        "program": [
            "SELECT['when Magnificent 72 cam out']",
            "SELECT['when 72 Heroes cam out']",
            "COMPARISON['min', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "when Magnificent 72 cam out"
            ],
            [
                "SELECT",
                "when 72 Heroes cam out"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when Magnificent 72 cam out)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when 72 Heroes cam out)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when Magnificent 72 cam out)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when 72 Heroes cam out)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4,
                    5,
                    10
                ],
                [
                    3,
                    6
                ],
                [
                    7,
                    8,
                    9,
                    11
                ],
                [],
                [
                    12,
                    13,
                    14
                ]
            ],
            "question_tokens": [
                "Which",
                "film",
                "cam",
                "out",
                "first",
                ",",
                "in",
                "1980",
                "Magnificent",
                "72",
                "or",
                "2011",
                "72",
                "Heroes",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    4,
                    5
                ],
                [],
                [
                    3
                ],
                [
                    6
                ],
                [
                    7,
                    8
                ],
                [
                    9,
                    12
                ],
                [
                    10
                ],
                [],
                [
                    11,
                    13
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    5,
                    10,
                    11
                ],
                [
                    4
                ],
                [
                    6
                ],
                [
                    3,
                    7,
                    8
                ],
                [
                    9
                ],
                [],
                [
                    12
                ],
                [
                    13,
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    13
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1240_389b9b3a-8473-44c9-a8c1-a2ba140c81b6",
        "question_text": "How many field goals over 30 yards did Nick Folk make?",
        "split": "dev",
        "decomposition": "return field goals of Nick Folk ;return yards of #1 ;return #1 where #2 is higher than 30 ;return number of  #3",
        "program": [
            "SELECT['field goals of Nick Folk']",
            "PROJECT['yards of #REF', '#1']",
            "COMPARATIVE['#1', '#2', 'is higher than 30']",
            "AGGREGATE['count', '#3']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "field goals of Nick Folk"
                ],
                [
                    "PROJECT",
                    "yards of #REF",
                    [
                        "SELECT",
                        "field goals of Nick Folk"
                    ]
                ],
                "is higher than 30"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Nick Folk)"
                ],
                [
                    "PARTIAL_GROUP_sum",
                    [
                        "PARTIAL_SELECT_NUM",
                        "GET_QUESTION_SPAN(yards of #REF)"
                    ]
                ],
                [
                    "CONDITION",
                    "GET_QUESTION_SPAN(is higher than 30)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_GT",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Nick Folk)"
                ],
                "GET_QUESTION_NUMBER(30)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "comparative",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    7
                ],
                [
                    2,
                    3,
                    4
                ],
                [],
                [
                    11
                ],
                [
                    5,
                    6,
                    8,
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "field",
                "goals",
                "over",
                "30",
                "yards",
                "did",
                "Nick",
                "Folk",
                "make",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4
                ],
                [],
                [
                    7
                ],
                [],
                [],
                [
                    5,
                    6,
                    8,
                    9,
                    10
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    7,
                    8,
                    9
                ],
                [
                    2,
                    3,
                    5
                ],
                [
                    4
                ],
                [],
                [],
                [
                    11
                ],
                [
                    6,
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    }
]